<html>
<head>
<title>数据结构</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#4A5594">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr> 
    <td width="10">&nbsp;</td>
    <td class="white" valign="top"><BR> <SPAN CLASS="part">【基础知识题】</SPAN><BR> 
      <br>
      　1．已知如右图所示的有向图，请给出该图的<br>
      　(1) 每个顶点的入/出度；<br>
      　(2) 邻接矩阵；<br>
      　(3) 邻接表；<br>
      　(4) 逆邻接表；<br>
      　(5) 强连通分量。<br>
      　</td>
    <td background="../../../images/html/mid.gif" width="18">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top" width="281"><br>
      【基础知识题】 <br>
      　　<img src="../../../images/pic/exam/p7-1.gif" width="114" height="144"> 
    </td>
    <td background="../../../images/html/right_di3.gif" width="13">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top"><p>　2．画出右图所示的无向图的邻接多重表，使得其中每个无向边结点中第一个顶点号小于第二个顶点号，且每个顶点的各邻接边的链接顺序，为它所邻接到的顶点序号由小到大的顺序。列出深度优先和广度优先搜索遍历该图所得顶点序列和边的序列。<br>
        　 </p></td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　　<img src="../../../images/pic/exam/p7-3.gif" width="126" height="144"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top">　3．试对右侧所示的无向图，画出其广度优先生成森林。<br>
      　 </td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　<img src="../../../images/pic/exam/p7-3a.gif" width="153" height="177"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top"><p>　4．已知以二维数组表示的图的邻接矩阵如右图所示。试分别画出自顶点出发进行遍历所得的深度优先生成树和广度优先生成树。<br>
        　 </p></td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　<img src="../../../images/pic/exam/p7-2.gif" width="195" height="187"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top"><p>　5．请对右边的无向带权图，<br>
        　(1) 写出它的邻接矩阵，并按普里姆算法求其最小生成树；<br>
        　(2) 写出它的邻接表，并按克鲁斯卡尔算法求其最小生成树。<br>
        　 </p></td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　<img src="../../../images/pic/exam/p7-7.gif" width="209" height="148"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top">　6．试列出右图中全部可能的拓扑有序序列。<br>
      　 </td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　<img src="../../../images/pic/exam/p7-9.gif" width="175" height="101"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td class="white" valign="top">　7．对于右图所示的 AOE 网络，计算各活动弧的 e(a<sub>i</sub>) 和 l(a<sub>j</sub>) 函数值，各时间(顶点)的 
      ve(v<sub>i</sub>) 和 vl(v<sub>j</sub>) 函数值；列出各条关键路径。<br>
      　 </td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　<img src="../../../images/pic/exam/p7-10.gif" width="234" height="185"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td class="white" valign="top">　8．试利用 Dijkstra 算法求右图中从顶点 a 到其它各顶点间的最短路径，写出执行算法过程中各步的状态。<br>
      　 </td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　　<img src="../../../images/pic/exam/p7-11.gif" width="148" height="164"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td class="white" valign="top">　9．试利用 Floyd 算法求右图所示有向图中各对顶点之间的最短路径。<br>
      　 </td>
    <td background="../../../images/html/mid.gif">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" valign="top">　　<img src="../../../images/pic/exam/p7-13.gif" width="183" height="103"></td>
    <td background="../../../images/html/right_di3.gif">&nbsp;</td>
  </tr>
</table>
</body>
</html>

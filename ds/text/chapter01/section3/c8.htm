<html>
<head>
<title>数据结构</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#4A5594">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr> 
    <td width="8">&nbsp;</td>
    <td class="white" valign="top"><span class="part">　1.3.4 算法的存储空间需求<br>
      </span><br>
      　　算法的存储量指的是算法执行过程中所需的最大存储空间。算法执行期间所需要的存储量应该包括以下三部分：(1)输入数据所占空间；(2)程序本身所占空间；(3)辅助变量所占空间。<br>
      <br>
      　　类似于算法的时间复杂度，通常以算法的<b>空间复杂度</b>作为算法所需存储空间的量度。定义算法空间复杂度为<br>
      　　　<b><font face="Times New Roman, Times, serif"><i>S </i>(n) = <i>O</i> 
      (g(n))</font></b><br>
      <br>
      　　表示随着问题规模n的增大，算法运行所需辅助存储量的增长率与g(n)的增长率相同。<br>
      <br>
      　　例如算法1.1、1.2和1.3的空间复杂度均为<font face="Times New Roman, Times, serif"><i>O</i> 
      (1)</font>，因为这三个算法所需辅助空间都只是若干简单变量，和问题规模无关。这类所需额外空间相对于输入数据量来说是常量的算法，被称作是<b>原地工作</b>的算法。 
      <br>
      <br>
      　　也和算法时间复杂度的考虑类似，若算法所需存储量依赖于特定的输入，则通常按最坏情况考虑。</td>
    <td background="../../../images/html/mid.gif" width="18">&nbsp;</td>
    <td background="../../../images/html/right_di4.gif" class="explaination" width="281" valign="top">　<br>
      　<br>
      　　程序代码本身所占空间对不同算法通常不会有数量级之差别，因此在比较算法时可以不加考虑；算法的输入数据量和问题规模有关，若输入数据所占空间只取决于问题本身，和算法无关，则在比较算法时也可以不加考虑；由此只需要分析除输入和程序之外的额外空间。</td>
    <td background="../../../images/html/right_di3.gif" width="13">&nbsp;</td>
  </tr>
</table>
</body>
</html>

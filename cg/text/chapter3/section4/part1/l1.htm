<html>
<head>
<!-- #BeginEditable "doctitle" -->
<title>计算机图形学</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/css01.css" type="text/css">
<link rel="stylesheet" href="../../../../css/css.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#FFFFFF">
<div align="center">
  <table width="95%" border="0" cellspacing="3" cellpadding="2" height="49%" class="text">
    <tr> 
      <td valign="top" height="73"><!-- #BeginEditable "left" --> &nbsp;&nbsp;&nbsp;对于端点为(x<sub>1</sub>, 
        y<sub>1</sub>)和(x<sub>2</sub>, y<sub>2</sub>)的线段，可以用参数方程表示：<br>
            <br>
            &nbsp;&nbsp;&nbsp;&nbsp;<img src="../../../../images/pic/chap03/mo_27.gif" width="247" height="47"><br>
            <br>
            &nbsp;&nbsp;&nbsp;&nbsp;当线段的某一个或两个端点都位于裁剪区域之外时，通过该线段与裁剪边界求交，可以得到参数t的值。如果交点的t值不在0和1之间，则该线段不在该裁剪边界进入裁剪区域；否则，该线段就穿入或穿过了裁剪区域。通过去除裁剪区域以外的部分，可以实现线段的裁剪。为了减少求交计算、提高选择和识别内部或外部线段的效率，设计有效的裁剪算法是非常重要的。<br>
          
        
        <!-- #EndEditable --></td>
    </tr>
  </table>
</div>
</body>
</html>

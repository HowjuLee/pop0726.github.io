<html>
<head>
<!-- #BeginEditable "doctitle" -->
<title>计算机图形学</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/css.css" type="text/css">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>
<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/bg03.gif">
<div align="center">
  <table width="90%" border="0" cellspacing="0" cellpadding="0" height="100">
    <tr> 
      <td height="126" valign="top" width="100%" class=text><!-- #BeginEditable "right" --> 
        <p><span class="blue"><br>
          8.5.3 光线与物体的相交计算</span><br>
          ��当用光线跟踪算法生成一幅分辨率为 的图象时，需要从视点向屏幕的mn个象素中心发出光线。假设每条光线在场景中经过反射和折射平均派生出k条光线，则一共需要跟踪mnk条光线。因此，光线与物体表面求交的算法的效率是影响光线跟踪算法的速度的关键。<br>
          ��任何一条光线都可以用参数方程表示为：<br>
          <img src="../../../../images/pic/chap08/image320.gif" align="absmiddle">， 
          <br>
          其中，V=(Vx, Vy, Vz)T为光线的起点，d=(dx, dy, dz) T为光线的单位方向矢量， <img src="../../../../images/pic/chap08/image322.gif" align="absmiddle">。但是场景中的物体通常是多种多样的，例如：多边形（包括三角形、长方形、正方形等）、二次曲面（包括球面、椭球面、抛物面等）、圆环、直纹面（包括一般柱面、锥面等）、旋转面、参数曲面等等。对于不同的物体，与光线进行求交的算法一般也不同。这里仅以球面和参数曲面为例，作一简单的介绍。<br>
          ��<a href="l1.htm#1" class="blue" target="MyFrame">1） 球面</a><br>
          ��<a href="l1.htm#2" class="blue" target="MyFrame">2） 参数曲面</a><br>
          <br>
        </p>
        <!-- #EndEditable --></td>
    </tr>
  </table>
</div>
</body>
</html>

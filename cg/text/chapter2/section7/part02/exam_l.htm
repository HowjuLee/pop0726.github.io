<html>
<head>
<!-- #BeginEditable "doctitle" -->
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/css01.css" type="text/css">
<link rel="stylesheet" href="../../../../css/css.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#FFFFFF">
<table width="95%" border="0" cellspacing="3" cellpadding="2" height="100%" class="pt9" align="center">
  <tr> 
    <td valign="top" height="266"><br>
      <span class="blue">1. 在图形设备上如何输出一个点？为输出一条任意斜率的直线，一般受到哪些因素影响？</span><br>
      ��若图形设备是光栅图形显示器，光栅图形显示器可以看作是一个像素的矩阵，光栅图形显示器上的点是像素点的集合。 <br>
      ��在光栅图形显示器上输出一条任意斜率的直线，主要受到以下因素的影响：<br>
      ��（1）光栅图形显示器的分辨率；<br>
      ��（2）线宽、线型；<br>
      ��（3）直线的扫描转换的算法。 
      <p class="blue">2. 为什么说直线生成算法是二维图形生成技术的基础？</p>
      <p class="blue"><br>
        3. 对于Bresenham直线生成算法，如何利用对称性通过判别误差变量同时从直线两端向直线中心画直线?又如何消除可能产生的误差？</p>
      <p><span class="blue"><br>
        4. 在显示屏上产生具有三根针的时针图，并且使它成为一个真正的会走的时针。</span><br>
        <br>
        <br>
        <span class="blue">5. 修正正文中给出的画圆Bresenham算法，使之能产生椭圆。假设椭圆中心在坐标原点，椭圆的长短轴分别是Ra和Rb。</span><br>
        ��以第一象限为例，取（0，Rb）为起点，按顺时针方向生成椭圆。<br>
        ��下一象素的取法只有三种可能的选择：</p>
      <p><span class="blue">6. 将画圆的Bresenham算法扩大，使之能画一个实心圆。即圆内是一种不同于背景色的灰度。</span><br>
        <br>
        <br>
        <span class="blue">7. 利用画圆（或画椭圆）命令写一个程序能产生馅饼图。输入此程序的数据是馅饼中每个扇型的百分比。每个部分的名称，馅饼图的名称。这些名称应显示在馅饼图外适当位置上。</span><br>
        <br>
        <br>
        <span class="blue">8. 试说明Bresenham直线算法对于下列两种情况仍能用判别变量p的符号正确地选择下一点的坐标值的理由。<br>
        </span>��设当前被选点是(x,y),而实际直线在x+1处的交点不是落在y和y+1之间，而是：<br>
        ��(a) 落在y和y-1之间，例如从（0，0）到（7，2）的直线在点（2，1）后的点；<br>
        ��(b) 落在y+1和y+2之间。例如从(0，0)到（7，5）的直线在点（2，1）后的点。<br>
        <br>
      </p>
    </td>
  </tr>
</table>
</body>
</html>

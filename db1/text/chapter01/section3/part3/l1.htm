<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>
<body bgproperties=fixed bgcolor="#FFFFFF" background="../../../../image/moban/15.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr> 
    <td align="center" valign="top"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td class="text" align="left"> 
            <p>��我们来看一个表示银行帐户的对象。这样的一个对象包括实例变量account-number和balance及方法pay-interest（付息，即在帐户余额上加上利息）。假设银行原来对所有帐户均付6%的利息，而现在改为少于1000元的帐户只付给5%的利息，不少于1000元的帐户才付给6%的利息。对大多数的数据模型而言，这样的更改将涉及到一个或多个应用程序代码的修改；而对面向对象的数据模型而言，只需要在pay-interest方法内部做修改，而对象的外部接口保持不变。<br>
              ��虽然面向对象模型和E-R模型都是基于对象的逻辑模型，但是与E-R模型中的实体不同，面向对象模型中的每个对象都有一个与其所包含值无关的唯一标识。因此，包含相同值的两个对象仍然是有区别的，但在E-R模型中它们有可能是同一实体。在面向对象模型中，这种不同对象的区别是通过在物理层赋给每个对象一个唯一的对象标识符来实现的。<br>
              <br>
              ��<span class="menu">对象是我们在日常生活中最常碰到的术语，例如&quot;相对象&quot;等。我们这里的对象是对日常生活中的对象的一种抽象，是来源于&quot;对象&quot;而高于&quot;对象&quot;。对象包括属性和方法。前者是对象本身具有的值，后者是对此对象进行操作的方法。<br>
              ��面向对象模型是基于对象的非传统的逻辑数据模型，那么它和E-R模型有什么差别呢？关键在于两个模型中的两个基本元素之间的差别，也就是面向对象模型中的&quot;对象&quot;与E-R模型中的&quot;实体&quot;之间的差别。前者有一个与其所包含的值无关的唯一标识，后者却没有。这样两个不同的对象可能对应到同一实体上。</span></p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

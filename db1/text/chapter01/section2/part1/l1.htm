<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>
<body  bgcolor="#FFFFFF" bgproperties=fixed background="../../../../image/moban/15.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr> 
    <td align="center" valign="top"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td class="text" align="left"> 
            <p><span class="part">1、物理层抽象</span><br>
              ��最低层次的抽象，描述数据实际上是如何存储的。物理层详细描述复杂的低层数据结构，是开发DBMS的数据库供应商应该研究的事情。</p>
            <p><span class="part">2、逻辑层抽象</span><br>
              ��比物理层稍高层次的抽象，描述数据库中存储什么数据以及这些数据间存在什么关系。因而整个数据库可通过少量相对简单的结构来描述。虽然简单的逻辑层结构的实现涉及到复杂的物理层结构，但逻辑层的用户不必知道这种复杂性。逻辑层抽象是由数据库管理员和数据库应用开发人员使用的，他们必须确定数据库中应该保存哪些信息。<br>
              <br>
              <span class="part">3、视图层（概念层）抽象</span><br>
              ��最高层次的抽象，但只描述整个数据库的某个部分。尽管在逻辑层使用了比较简单的结构，但由于数据库的规模巨大，所以仍存在一定程度的复杂性。数据库系统的多数用户并不需要关心所有的信息，而只需要访问数据库的一部分。视图抽象层的定义正是为了使用户与系统的交互更简单。系统可以为同一数据库提供多个视图，而视图又保证了数据的安全性。</p>
            <p>��<span class="menu">&quot;数据库&quot;这个词对于不同的人应该给予不同的感觉。如果你是一个最终用户，你根本就不关心数据存储和维护的细节，数据库也不应该拿这些事情来烦你。但是如果你是一个数据库管理员，那么有些细节上的东西你就必须要清楚。数据库管理系统可以为不同的用户提供不同的视图，也就是他们所看到的数据库是不一样的。这就需要进行数据抽象，以形成这些不同的视图。<br>
              ��最早是在CODASYL的DBTG报告中完整地给出了数据抽象的三个层次。ANSI/SPARC报告中也提出了类似的建议，这个报告中抽象的层次为内部层、概念层和外部层。但是，现在的数据库管理系统是根据DBTG的报告从三个层次来进行抽象的，它们分别是物理层、逻辑层和视图层（概念层）。</span></p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

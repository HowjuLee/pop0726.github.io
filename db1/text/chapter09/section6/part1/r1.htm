<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" bgproperties=fixed background="../../../../image/moban/14.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="center" valign="top"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0" height="8">
        <tr> 
          <td class="text"> 
            <p><span class="section">9.6 查询优化<br>
              <br>
              ��</span>查询优化器的任务就是要产生一个代价最小的查询执行计划。这要分两步走：<br>
              ��<span class="zhishidian">⑴</span>�产生逻辑上与给定表达式等价的表达式；<br>
              ��<span class="zhishidian">⑵</span>�对所产生的表达式做不同方式的注释，产生后选计划。<br>
              查询优化器中的这两步是交叉的，产生一些表达式并注释，然后又产生一些表达式并注释……<br>
              ��表达式中的每个运算可用不同的算法实现，这些算法可能用到不同的索引，表达式中的各运算是如何协调执行的(用实体化计算方法还是用流水线计算方法)，这些都是查询优化器在第二步的主要任务。如<span class="part">右图9-6-1</span>所示，它给出了查询执行计划的一个例子。<br>
              ��</p>
            </td>
        </tr>
      </table>
    <div align="center"></div>
    </td>
  </tr>
</table>
<p class="explaination">&nbsp;</p>
</body>
</html>

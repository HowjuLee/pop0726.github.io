<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" bgproperties=fixed background="../../../../image/moban/14.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="center" valign="top"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0" height="13">
        <tr> 
          <td class="text"> 
            <p class="zhishidian">11.3.3　Thomas(托马斯)写规则</p>
            <p>��托马斯写规则是对时间戳排序协议中事务间&quot;写/写&quot;冲突规则的重大修改。我们首先从一个例子开始。<br>
              <br>
              ��<span class="menu">Thomas(托马斯)写规则实际上是通过删除事务发出的过时的write操作来利用视图可串行化。对事务的这种修改使得系统可以产生其他协议所不能产生的可串行化调度。<br>
              ��<br>
              ��在树形协议中，只是从事务的视角来进行处理，没有记录数据项上所加的锁的信息，而时间戳排序协议则考虑了数据项上所加的锁的信息，从事务和锁两个方面结合进行了考虑。<br>
              ��</span></p>
            </td>
        </tr>
      </table>
    <div align="center"></div>
    </td>
  </tr>
</table>
<p class="explaination">&nbsp;</p>
</body>
</html>

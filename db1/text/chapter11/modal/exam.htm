<html>
<head>
<title>Java期末考试题</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="css/text.css" type="text/css">
<script language="JavaScript">
<!--
function MM_openBrWindow(theURL,winName,features) { //v2.0
  window.open(theURL,winName,features);
}
//-->
</script>
</head>
<script language="JavaScript">
function getresultcheck(form)
{var mykeys=new Array();
//  mykeys[0]="B";
//czp-select-answer
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=form.elements;

<!--czp-select-count-->
for(var I=0;I<every.length;I++)
{
	if(every[I].type=="radio")
	{
		
		if(every[I].checked)
		{	
	
			var item=parseInt(every[I].name.substr(0));
		
			answer[item-1]+=every[I].value;
		}
	}				
}

var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font color=red>您的测试结果</font></h2></center>";
var totalscore=0;
for(var I=0;I<answer.length;I++)
{
	if(answer[I]==mykeys[I])
	{
		var rstr="<font size=2>第"+(I+1)+"题答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;//每题分数
	}else
	{
		var rstr="<font size=2>第"+(I+1)+"题答案错误!正确答案为"+mykeys[I]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br>您的总成绩为:";
newcount+=Math.ceil(totalscore);
newcount+="分";
newwin=window.open("","","height=200,width=300,scrollbars=yes,resizable=no");
newwin.document.write(newcount);}



function getresultcheck1(form)
{var mykeys=new Array();
//  mykeys[0]="B";
//czp-mulselect-answer
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=form.elements;

<!--czp-mulselect-count-->
for(var I=0;I<every.length;I++)
{
	if(every[I].type=="checkbox")
	{
		
		if(every[I].checked)
		{	
	
			var item=parseInt(every[I].name.substr(0));
		
			answer[item-1]+=every[I].value;
		}
	}				
}

var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font color=red>您的测试结果</font></h2></center>";
var totalscore=0;
for(var I=0;I<answer.length;I++)
{
	if(answer[I]==mykeys[I])
	{
		var rstr="<font size=2>第"+(I+1)+"题答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;//每题分数
	}else
	{
		var rstr="<font size=2>第"+(I+1)+"题答案错误!正确答案为"+mykeys[I]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br>您的总成绩为:";
newcount+=Math.ceil(totalscore);
newcount+="分";
newwin=window.open("","","height=200,width=300,scrollbars=yes,resizable=no");
newwin.document.write(newcount);}












function check(){
var mykeys=new Array();
//czp-tiankong-answer
//mykeys[0]="B";
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=zfl.elements;
for(var I=0;I<every.length;I++)
{
if(every[I].type=="text")
{
 if(every[I].value!==null)
 {
 //var item=parseInt(every[I].name.substr(1))
//  answer[item-1]+=every[I].value;
  answer[I]+=every[I].value;
  }
 }
}


var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font face=\"隶书\" size=\"5\" color=\"#000099\">您的测试结果</font></h2></center>";
var totalscore=0;
for(var i=0;i<answer.length;i++)
{
	if(answer[i]==mykeys[i])
	{
		var rstr="<font face=\"宋体\" size=2>第"+(i+1)+"个空答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;
	}else
	{
		var rstr="<font face=\"宋体\" size=2>第"+(i+1)+"个空答案错误!正确答案为"+mykeys[i]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br><font face=\"宋体\" size=3><b>您的总成绩为:</b></font><font face=\"宋体\" size=3 color=red>";
newcount+=Math.ceil(totalscore);
newcount+="分</font><br>";
newwin=window.open("","","height=400,width=400,scrollbars=yes,resizable=no");
newwin.document.write(newcount);
}

</script>
<body bgcolor="#FFFFFF" text="#000000" topmargin=0 background="../../../image/moban/15.gif" bgproperties=fixed>

<center>
  <br>
  <span class="section"> 第十一章　并发控制――习题</span><br>
  <br>
  <table width="95%" border="0" cellspacing="0" cellpadding="0">
  <tr>
      <td valign="top" class=text> 
        <form>
          <b>问答题</b><br>
          <br>
          <br>
          <br>
          <span class="explaination">问答第1题：</span>在两阶段封锁协议下，调度中多个事务可以根据它们的封锁点进行排序。实际上，这样的一个顺序就是事务的一个可串行化次序。为什么？<br>
          <textarea name=jianda cols=50 rows=5></textarea>
          <br>
          <br>
          <br>
          <span class="explaination">问答第2题：</span>大部分数据库系统实现都采用严格两阶段封锁协议，请问该协议能带来什么好处？会产生哪些弊端？<br>
          <textarea name=jianda cols=50 rows=5></textarea>
          <br>
          <br>
          <br>
          <span class="explaination">问答第3题：</span>当一个事务在时间戳排序协议下回滚，它被赋予新的时间戳。为什么它不能简单地保持原有的时间戳？<br>
          <textarea name=jianda cols=50 rows=5></textarea>
          <br>
          <br>
          <br>
          <span class="explaination">问答第4题：</span>避免死锁后，饿死仍有可能吗？<br>
          <textarea name=jianda cols=50 rows=5></textarea>
          <br>
          <br>
          <br>
          <span class="explaination">问答第5题：</span>在封锁协议里我们曾经解释过"饿死"现象：一个事务因为要等待别的事务释放锁而永远处于等待状态，不能取得进展。其实，在利用时间戳的两个死锁预防机制（等待-死亡和受伤-等待机制）中，也可能存在某个事务重复回滚而总是不能取得进展--这也称为"饿死"。请确认在等待-死亡和受伤-等待机制下，会不会发生饿死现象？为什么？<br>
          <textarea name=jianda cols=50 rows=5></textarea>
          <br>
          <br>
          <input type=button name=Button value=答案 案 onClick="MM_openBrWindow('text/examination/exam01_pop2.htm','','width=471,height=384')" class=pbox>
          <input type='reset' name='Submit3' value='重置' class=pbox>
          <br>
          　　 <br>
        </form>
        
        </td>
  </tr>
</table></center>

</body>
</html>

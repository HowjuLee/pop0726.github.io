<html>
<head>
<title>计算机系统结构</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">

<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<link rel="stylesheet" href="../../../css/text01.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#FFFFFF">
<div align="center">
  <table width="96%" border="0" cellspacing="3" cellpadding="2" height="100%">
    <tr>
      <td valign="top" height="37"> 
        <table width="40%" border="0" cellspacing="0" cellpadding="0" background="../../../images/bg0401.gif" height="18" align="right">
          <tr>
            <td class="pt10"> 
              <div align="center" class="title">第五章 标量处理机</div>
            </td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
      <td valign="top" height="119"> 
        <div align="center"> 
          <p align="left" class="pt9-black"><span class="part">5.2.3 条件分支对流水线的影响</span><br>
            <br>
            　　在遇到条件转移指令时，为了使流水线不&quot;断流&quot;，通常采用&quot;猜测法&quot;。在条件转移指令之后，选择一个分支方向，让后续指令继续进入流水线执行。在图5.32中，猜测的分支方向是固定，它选择了转移不成功的方向。</p>
          <p align="center" class="pt9-black"><img src="images/tu5_32.jpg" width="526" height="188"></p>
          <p align="left"><span class="pt9-black">　　在一般情况下，猜测转移不成功的方向，其控制逻辑相对比较简单；因为在遇到条件转移指令时，可以让流水线按照原先的顺序继续往前流动。如图5.32所示，第i条指令是条件转移指令，第i+1、i+2、……条指令可以按虚线方向继续进入流水线执行。因为第i条条件转移指令所需要的条件码是由第i-1条指令给出；在一条由k个流水段的流水线中，第i-1条指令要等到第i+k-2条指令进入流水线时才能形成条件码。如果形成的条件码是转移不成功的，则猜测正确，流水线的吞吐率和效率没有降低，就好象没有条件转移指令一样；相反，如果形成的条件码是转移成功的，则猜测错误，必须改为沿实线方向执行。这时，首先作废流水线中已经执行的第i+1、i+2、……、i+k-2条指令，然后，再从分支点开始执行第p、p+1、……条指令。这种情况下，每执行一条条件转移指令，一条k段流水线就有k-2个流水段被浪费。<br>
            <br>
            　　下面，具体分析条件转移指令对流水线性能的影响。<br>
            　　对于一条有k个流水段的流水线，由于条件转移指令的影响，在最坏情况下，每一次条件转移将造成k-1个时钟的&quot;断流&quot;。另外，假设条件转移指令在一般程序中所占的比例为p，转移成功的概率为q。因此，对于一个由n条指令组成的程序，由于条件转移需要额外增加的时钟周期数是pqn(k-1)<img src="images/gsh2_4.gif" width="18" height="15" align="absmiddle">，因此，这n条指令的总的执行时间是：<br>
            　　　<img src="images/gsh2_5.gif" width="222" height="15" align="absmiddle"><br>
            　　根据计算流水线吞吐率的一般公式（5.5），有条件转移影响的流水线的吞吐率为：<br>
            　　　<img src="images/gsh2_6.gif" width="213" height="34" align="absmiddle"><br>
            　　当n→∞时，有条件转移影响的流水线的最大吞吐率为： <br>
            　　　<img src="images/gsh2_7.gif" width="177" height="36" align="absmiddle"><br>
            　　由于条件转移指令的影响，流水线吞吐率下降的百分比为：<br>
            　　　<img src="images/gsh2_8.gif" width="225" height="39" align="absmiddle"><br>
            　　据统计，在一些典型程序中，转移指令所占的比例为p＝20％，转移成功的概率为ｑ＝60％。对于一条有8个流水段的指令流水线，由于条件转移指令的影响，流水线的最大吞吐率要下降：<br>
            　　　<img src="images/gsh2_9.gif" width="211" height="36" align="absmiddle"><br>
            　　同样，如果指令流水线的流水段数为10，由于条件转移指令的影响，流水线的最大吞吐率将下降到原来的一半以下：<br>
            　　　<img src="images/gsh2_10.gif" width="215" height="37" align="absmiddle"><br>
            　　从上面的分析中可以看到，条件转移指令对流水线的影响是非常大的，必须采取措施来减少这种影响。 <br>
            <br>
            </span></p>
        </div>
      </td>
    </tr>
  </table>
</div>
</body>
</html>

<html>
<head>
<title>计算机系统结构</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">

<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<link rel="stylesheet" href="../../../css/text01.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#FFFFFF">
<div align="center">
  <table width="96%" border="0" cellspacing="3" cellpadding="2" height="100%">
    <tr>
      <td valign="top" height="37"> 
        <table width="40%" border="0" cellspacing="0" cellpadding="0" background="../../../images/bg0401.gif" height="18" align="right">
          <tr>
            <td class="pt10"> 
              <div align="center" class="title">第二章 指令系统</div>
            </td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
      <td valign="top" height="119"> 
        <div align="center"> 
          <p align="left"><b><span class="part">2.4.3 复杂指令系统</span></b><span class="pt9-black"><b><br>
            </b><br>
            　　指令系统的优化设计有两个截然相反的方向，一个是增强指令的功能，设置一些功能复杂的指令，把一些原来由软件实现的，常用的功能改用硬件的指令系统来实现，这种计算机系统称为复杂指令系统计算机（CISC--Complex 
            Instruction Set Computer）。另一个是八十年代新发展起来的，尽量简化指令功能，只保留那些功能简单，能在一个节拍内执行完成指令，较复杂的功能用一段子程序来实现，这种计算机系统称为精简指令系统计算机（RISC--Reduced 
            Instruction Set Computer）。<br>
            　　优化指令系统的目标主要有两个：一是缩短程序的长度，即减少程序的空间开销，另一个是缩短程序的执行时间，即减少程序的时间开销。<br>
            　　优化指令系统的方法是：对大量的程序及其执行情况进行统计分析，找出那些使用频度高，执行时间长的指令和指令串。对于那些使用频度高的指令，用硬件加快其执行，就能缩短整个程序的执行时间。对于那些使用频度高的指令串，用一条新的指令来代替它，这样，不但能缩短整个程序的执行时间，而且能缩短整个程序的长度，从而减少程序的空间开销。<br>
            </span></p>
          <p align="left"><span class="pt9-black">　</span></p>
        </div>
      </td>
    </tr>
  </table>
</div>
</body>
</html>

<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../css/text.css" type="text/css">
<link href="../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" class="pop">
<center><table width="95%" border="0" cellspacing="0" cellpadding="0">
  <tr>
      <td class=text> 
        <p><b>问答题答案</b></p>
        <p>问答第1题<br>在微计算机存储器系统的设计当中，需要考虑容量、存取时间和价格三个因素，但这三者之间的关系又是互相制约的。为了实现快的访问速度和大的存储容量，同时价格还要相对低廉，于是提出了分层的存储器结构。<br>问答第2题<br>Cache即高速的小容量静态存储器。在Cache中存放内存的副本，使得CPU对内存的低速访问变成对Cache的高速访问，以提高访问速度。<br>问答第3题<br>Pentium的Cache控制器采用"最近最少使用替换算法"，从行中选择最近最少使用的那一行进行替换。
Pentium处理器的Cache所采用的策略是"写一次"策略，将写直达和写回的策略相结合。
<br>问答第4题<br>MESI模型提供了一种跟踪存储器数据变化的方法，这种方法保证了一个Cache行数据更新以后，能够和所有与它的地址有关联的存储单元保持数据的一致性。
M、E、S、I分别代表了数据变化的4种状态：修改（Modified）、独占（Exclusive）、共享（Shared）、无效（Invalid）。
<br>问答第5题<br>猝发读就是一次读两个或两个以上数据段的数据读方式。Cache猝发读周期包含5个状态周期。第一个状态周期是地址周期，后四个状态周期都是数据周期。如果是对内存的猝发读，则需要插入等待周期。<br>问答第6题<br>系统通过对分段、分页这两种机制的配制，实现支持单任务系统、多任务系统或者支持共享存储器的多处理器系统。
分段将处理器的可寻址存储器空间分成叫做段的较小的保护地址空间，通过在段与段之间分界，来保证程序或任务之间不会互相干扰。分段机制还将段分类，这样可以对某些特殊类型的段操作进行限制。
分页支持"虚拟存储器"环境，使得用少量的物理存储器就能访问很大的映射到磁盘存储器的线性地址空间。
<br>问答第7题<br>段寄存器用于存放段的基地址；段描述符用来提供段的基址、段长、段类型以及当前特权级等段的信息; 段描述符表用于存放段描述符。<br>问答第8题<br>全局描述符表存放系统程序的段描述符、门描述符和局部描述符表的段描述符以及段选择符。局部描述符表是独立于全局描述符表的，存放某个任务拥有的段描述符或多个任务的描述符。<br>问答第9题<br>根据描述符表的基地址和描述符在表中的偏移地址，找到段描述符在全局描述符表GDT或局部描述符表LDT中地址，并从该地址将描述符读入处理器。然后，将段描述符中的基地址加上偏移地址即可得到线性地址。<br>问答第10题<br>处理器通过控制寄存器中的三个标志位进行分页控制。
分页允许标志PG。控制寄存器CR0的第31位为分页允许标志，将PG位置位，表示允许分页。如果需要进行分页的虚拟存储器系统管理，必须置位PG启用分页标志。
页面规模扩展标志PSE。控制寄存器CR4的第4位为页面规模扩展标志。分页时通常以4K字节为一页，分页扩展PSE置位，表示允许将页面规模扩展为4MB或2MB。PSE为0，页面大小为4KB。
物理地址扩展标志PAE。控制寄存器CR4的第5位为物理地址扩展标志。该标志仅在允许分页时使用。当PAE置1，表示启用36位物理地址，允许访问高于FFFFFFFFh以上地址的页面。
<br>问答第11题<br>目录项表是页目录项的一组顺序列表；页表是页表项的一组顺序列表。<br>问答第12题<br>
          由页目录项可以得到页表的基地址，再根据页表项地址从页表中找到页表项，从页表项中可以得到在主存中的页基址。将页基址加上页内偏移量即可得到物理地址。</p>
      </td>
  </tr>
</table>
  </center>

</body>
</html>

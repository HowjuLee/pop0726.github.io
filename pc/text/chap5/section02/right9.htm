<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td class="pt9">　　反之，如果主存页地址和任何一个标记域都不匹配，就产生了Cache的不命中，也就是说Cache中并没有所需要访问的副本，此时Cache控制器就要执行Cache行的替换：一方面请求总线单元从主存中读取所需要的数据去参加运算，另一方面要用这个数据覆盖掉2路Cache行中的某一行，要求这一行与主存行序号相同。Pentium的Cache控制器在替换策略上面采用的是&quot;最近最少使用替换算法&quot;（简记为LRU），也就是从2路的行中选择最近最少使用的那一行进行替换。图5-8的左部，有一个128位的LRU标志，每位对应2个序号相同的目录项，用来表示2个同序号行中最近最少使用行所在路的序号。为0就表示0路Cache中的行，为1就表示1路中的。从存储器读出数据进行Cache行替换的时候，根据LRU位指示的路序号，用新数据替换最近最少使用的那一行。<br>
      　　我们可以看一个Cache行替换的例子。例如，处理器要访问某一页存储器第5行的数据，Cache目录项中发现没有匹配的记录，就是说Cache中没有副本，需要从主存提取数据参加运算，并且进行Cache行替换。LRU标志中对应于第5行的LRU位为0，表示0路的第5行最近最少使用。如果需要在Cache中复制，那么就要将新数据填入0路的第5行。然后对LRU位更新，第5行的最近最少使用位变为1，1路的第5行成为最近最少使用行。数据更新以后，相关的目录项也要更新，就是说要在标记域中记录源存储器的页号并修改MESI状态。<br>
    </td>
  </tr>
</table>
</body>
</html>

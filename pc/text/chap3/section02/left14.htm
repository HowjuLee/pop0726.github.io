<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#FFF3C4">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td class="pt9"> 　　中断请求寄存器、优先权裁决器、中断正在服务寄存器和中断屏蔽寄存器协同工作，实现中断的请求和对多个中断源的管理。8位中断请求寄存器保存中断请求的状态，当中断请求线IR7~IR0连接的某个中断源输出有效的中断请求信号时，中断请求寄存器IRR的相应位置位。中断源的请求信号到底是电平有效还是脉冲边沿有效是可以通过编程选择的。优先权裁决器PR负责对多中断源的优先权裁决。如果有两个或两个以上的中断请求信号同时有效，优先权裁决器将根据中断屏蔽寄存器的状态和所设置的中断优先级状态判断哪一个中断请求有可能被响应。8位的正在服务寄存器ISR则记录了正在被服务中断源的序号。某级中断请求信号一旦被响应，该级正在服务寄存器的相应位置1。此时如果又有新的中断请求发生，优先权裁决器裁决时，要将当前申请中断的优先级和正在服务中断的优先级进行比较，只有在当前申请中断的优先级高于正在服务中断的优先级时才能驱动INT信号有效，向CPU发出申请。这就意味着优先权等于或低于正在服务中断的中断请求将一律被挂起。8位的中断屏蔽寄存器IMR和8根中断请求线对应，可以通过它们分别对8个中断请求设置屏蔽。<br>
      <br>
      　　控制逻辑根据中断请求、裁决的结果决定是否激活对CPU的中断请求信号INT（与CPU的INTR连接）。INT被驱动为有效状态以后，如果IF为1，CPU将回应2个INTA#脉冲给控制逻辑。第一个INTA#通知8259当前的申请得到响应，随即，将对应的ISR位置位，将对应的IR位清零。第二个INTA#相当于读信号，它令8259A的控制逻辑将在编程时设定的中断类型码送上数据总线，CPU采样类型码并转向执行该类型码的中断服务程序。 
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#FFF3C4">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td class="pt9"> <strong>4、可屏蔽中断多中断源的管理</strong><br>
      　　如果两个或两个以上的中断请求同时有效，哪个中断将被响应？如何得到中断向量？怎样设定它们的优先级？从图3-4 所表示的电路可以看出，每当产生两个或两个以上的中断请求，便形成一个新的中断类型号，例如，如果IR1#和IR0#均为低电平，则生成的中断类型号为FCH（252）。可以利用在中断向量表中存储优先级高的中断向量地址的办法来解决中断优先级设定问题。如果定义IR0#比IR1#有较高的优先级，就将IR0#的向量地址存储在内存单元4×FCH中。7个中断请求信号组合起来将有128种可能性，对应128个类型号，根据每种可能组合中期望的优先级关系，把优先级最高的那个中断入口地址填入向量表适当位置。这组中断源的请求一旦被响应，最高优先级中断的服务程序便得到执行。采用这种方法，就意味着必须占用128个中断向量和中断向量表中0200H地址以上的一半存储空间。这种方法成本低，但是资源浪费。可是在某些专用场合，却不失是一种有效的中断扩展方法。</td>
  </tr>
</table>
</body>
</html>

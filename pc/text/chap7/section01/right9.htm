<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td class="pt9">
      　　在过去，派遣/执行部件主要用来执行已经译码的微操作码流，根据微操作码流再发出各种控制信号，控制微处理器的每一步动作，以完成人们所希望的处理结果。现在的调度/执行部件则是一个超顺序执行部件，其功能是根据数据（包括操作码与操作数）的依赖关系、资源的有效性以及临时存储的推测执行的结果来调度和执行存储在重新排序缓冲中的微操作码流。<br>
      　　调度/执行部件中的驻留站负责对重新排序缓冲中的微操作码流进行调度与派遣，它不停地扫描重新排序缓冲中准备执行的所有微操作码流，并将它们派遣到合适的执行部件，微操作码流执行之后的结果又被返回到重新排序缓冲器中，与相对应的微操作码流一并存储，直到从重新排序缓冲器中被退回。这种调度与派遣的过程支持基本的超顺序执行，被派遣到执行部件的微操作码流严格按照数据流的约束关系执行资源的有效性来执行，而不按指令的原始顺序来执行。当多个相同类型的微操作同时有效时，它们在重新排序缓冲器中以一种类似FIFO的顺序进行执行。<br>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="../../../../../../../../download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" width="390" height="330">
        <param name="movie" value="../../../flash/p7_1_5_1.swf">
        <param name="quality" value="high">
		
        <embed src="../../../flash/p7_1_5_1.swf"   quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="390" height="330"></embed></object> 
      <br>
      　　图7.4分发/执行单元示意图 </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
<link href="../../../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td class="pt9">　　图4-19 所示的是串行异步通信信息帧的格式。字符的数据位可以是5~8个二进制位，有四种选择。作为分隔字符的标识，在字符的信息位之前是一位逻辑“0”，这就是用来标志字符开始的起始位。在一帧信息传送之前，传输线在逻辑上必须处于“1”状态，其状态一旦由1跳变为0，表示一帧信息的开始。5~8位的信息位是从低到高顺序排列的，就是说在传输的时候，最先被传输到接收方的是起始位，紧跟着的是字符的最低位，也就是第0位。字符的数据位的后面是一位可选择的的奇偶校验位，就是说这个校验位可以按照奇校验设置，也可以按照偶校验设置，或者可以不设。校验位之后又是一个作为标识的停止位，标志一个字符传输结束。停止位要求为逻辑“1”，传输中可以是1个停止位、1.5个停止位或2个停止位。停止位表示一个信息帧的结束。每一帧字符是用起始位和停止位同步的。虽然，串行异步通信格式当中一些项（信息位和停止位的数目，校验位的设置方法）的设定是可以选择的，但是，在同一系统发送和接收的双方，设置的数据格式必须绝对相同。比如发送方规定传输一个字符是8位，那么接收方必须也规定为8位，而不能是7位或者别的，否则一定会出错。如果传输完一个字符立即接着传下一个，那么后一个字符的起始位就紧挨着前一个字符的停止位，否则，传输线就又位于逻辑“1”状态。等待下一个字符的到来。<br>
      <img src="../../../images/chap4/p4_3_1_2.gif"><br>
      　　　　图4-19 串行异步通信格式 </td>
  </tr>
</table>
</body>
</html>

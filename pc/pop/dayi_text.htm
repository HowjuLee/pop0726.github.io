<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body class="pop">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0" >
  <tr>
    <td valign="top" class="pt9"><a name="top"></a> <p><a href="#1" class="pt9"><strong>1. 
        8086的存储器寻址范围有多大？如何实现？从逻辑地址到线性地址的计算过程涉及到哪些寄存器？</strong></a><br>
        <br>
        <a href="#2" class="pt9"><strong>2. 从总线复用的角度看，将一个总线周期分成4个状态有什么意义？ </strong></a><br>
        <a href="#3" class="pt9"><br>
        <strong>3. 何谓三态？请举例说明总线为什么需要三态？</strong> </a><br>
        <br>
        <a href="#4" class="pt9"><strong>4. 中断为什么能够节约微处理器的时间？</strong></a> <br>
        <br>
        <a href="#5" class="pt9"><strong>5. 中断标志（IF）和陷阱标志（TF）的作用是什么？</strong></a> 
        <br>
        <br>
        <a href="#6" class="pt9"><strong>6. 保护模式下怎样寻址中断入口地址？</strong> </a><br>
        <br>
        <a href="#7" class="pt9"><strong>7. 中断应答周期，CPU完成哪些操作？ </strong></a><br>
        <br>
        <a href="#8" class="pt9"><strong>8. 为什么I／O端口芯片的地址线A0要和8086微处理器的A1相连？ </strong></a><br>
        <br>
        <a href="#9" class="pt9"><strong>9. 为什么BHE＃和A0在一个16位端口地址译码器中均可被忽略？ </strong></a><br>
        <br>
        <a href="#10" class="pt9"><strong>10. 哪2个82C55引脚完成内部I／O端口地址选择？ </strong></a><br>
        <br>
        <a href="#11" class="pt9"><strong>11. 为什么存储器要采用分层结构？ </strong></a><br>
        <br>
        <a href="#12" class="pt9"><strong>12. 简述段寄存器、段描述符、段描述符表的作用。 </strong></a><br>
        <br>
        <a href="#13" class="pt9"><strong>13. PCI总线支持在PC机与存储器或I／O接口之间以数据传输的速率是多少？最高为每秒多少字节？ 
        </strong></a><br>
        <a href="#14" class="pt9"><br>
        <strong>14. 描述如何从PCI总线上捕获地址？ </strong></a></p>
      <p><strong><a name="1"></a>1. 8086的存储器寻址范围有多大？如何实现？从逻辑地址到线性地址的计算过程涉及到哪些寄存器？</strong><br>
        <font color="#0000FF">答</font>：8086有20位地址线，故具有1M空间的寻址能力。8086采用了将存储器分段的技术用16位寄存器提供的信息来实现1M空间的存储器寻址。段地址由段寄存器给出，段寄存器内容左移4位得到20位的地址，就是该存储器段的起始地址。20位段起始地址加上16位偏移量，便得到存储器的20位物理地址。物理地址的计算是由地址加法器完成。从逻辑地址到线性地址的计算过程涉及到的寄存器有：段寄存器CS、DS、ES、SS；偏移量寄存器IP、BP、SP、SI、DI和BX。<br>
        .........................................................<a href="#top" class="pt9">top↑</a><br>
        <strong><a name="2" id="2"></a>2.从总线复用的角度看，将一个总线周期分成4个状态有什么意义？</strong><br>
        <font color="#0000FF">答</font>：所谓地址/数据总线复用，就是说在同一组总线上，某一时刻出现的是地址信息，而在另一时刻出现的却是数据信息，这就是总线的分时复用。为了不至于混淆两种不同类型的信息，8086规定，地址信息在总线周期的T1状态出现，而数据信息在T3状态出现。因此，将一个总线周期分成4个状态，能使得总线复用很好实现。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="3"></a>3. 何谓三态？请举例说明总线为什么需要三态？</strong><br>
        <font color="#0000FF">答</font>：所谓三态即高电平状态、低电平状态和高阻状态。在计算机系统中，信号的传输是通过总线进行的。总线上往往连接有多个总线主设备，CPU、DMA或者多个CPU。或者说系统通常是包含DMA控制器的系统或者是多主系统。在这种系统中，每一个时刻只能有一个总线主（或控制器）占用总线，其他总线主（或控制器）输出的地址、数据、控制信号必须浮空（处于高阻状态），这样系统才能正常工作。反之，如果信号只有两种状态，连在总线上的不同总线主输出信号状态不一致，信号相互钳制，系统便无法工作。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="4"></a>4. 中断为什么能够节约微处理器的时间？</strong><br>
        <font color="#0000FF">答</font>：中断是一个由硬件激发的过程， CPU只需在执行完一条指令之后检查是否有中断请求，避免了程序查询方式中长时间的测试和等待。因此中断方式节约了微处理器的时间，有较高的效率，而且具有实时性。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="5"></a>5.中断标志（IF）和陷阱标志（TF）的作用是什么？</strong><br>
        <font color="#0000FF">答</font>：IF标志用于屏蔽可屏蔽中断。当CPU遇到可屏蔽中断时，要判断IF是否为1，如果为1便进入中断响应过程，如果为0，则不响应。<br>
        TF为单步中断标志。当TF为1时，便进入中断类型为1的单步中断。单步中断的功能是只执行当前程序的一条指令，并将寄存器的内容显示出来。 <br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <a name="6"></a><strong>6. 保护模式下怎样寻址中断入口地址？</strong><br>
        <font color="#0000FF">答</font>：保护模式使用256个存储在中断描述符表中的中断描述符取代实模式下的中断向量。中断描述表的长度为256×8字节，每个描述符由8个字节表示，中断描述符表的首地址由中断描述符表寄存器提供，它可以定位在存储器的任意地址。微处理器在中断应答周期，通过访问中断描述符表来寻址中断入口地址。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="7"></a>7.中断应答周期，CPU完成哪些操作？</strong><br>
        <font color="#0000FF">答</font>：在中断应答周期，CPU主要完成如下操作： 取中断类型码，寻址中断程序入口地址，标志寄存器入堆栈，CS和IP入堆栈，清除IF和TF标志，进入中断处理程序。 
        <br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="8"></a>8. 为什么I／O端口芯片的地址线A0要和8086微处理器的A1相连？</strong><br>
        <font color="#0000FF">答</font>：在8086系统中，数据是16位的，CPU总是将高8位数据送往奇地址，而将低8位数据送往偶地址。这样一来，对于8位I/O端口，如果将其数据线与CPU的数据线低8位相连，那么对I/O端口的读写就要求全部用偶地址。但是，在I/O芯片中，对端口的编址又是连续的。为了解决这个矛盾，就将I／O端口芯片的地址线A0和8086微处理器的A1相连。在访问I/O端口时，将地址的A0位总是设为0。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="9"></a>9. 为什么BHE＃和A0在一个16位端口地址译码器中均可被忽略？</strong><br>
        <font color="#0000FF">答</font>：BHE＃和A0分别是选择以偶地址开始的字时高位字节允许信号和地址的最低位。在访问16位端口时，每次读/写两个字节，其地址相邻，因此也就必然包含了A0为0和1的两种情况，所以不需要对A0进行译码。BHE＃信号可以根据需要给出，BHE＃为低电平表示读/写一个字，BHE＃为高电平表示读/写一个字节。BHE#信号不会引起译码错误，因此可以被忽略。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="10"></a>10. 哪2个82C55引脚完成内部I／O端口地址选择？</strong><br>
        <font color="#0000FF">答</font>：地址信号A1、A0用于I／O端口地址选择。通过A1、A0所组合的地址来区分82C55A内部A、B、C三个数据端口和一个控制端口的地址。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="11"></a>11. 为什么存储器要采用分层结构？</strong><br>
        <font color="#0000FF">答</font>：在微计算机存储器系统的设计当中，需要考虑容量、存取时间和价格三个因素，但这三者之间的关系又是互相制约的。为了实现快的访问速度和大的存储容量，同时价格还要相对低廉，于是提出了分层的存储器结构。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="12"></a>12 简述段寄存器、段描述符、段描述符表的作用。</strong><br>
        <font color="#0000FF">答</font>：段寄存器用于存放段的基地址；段描述符用来提供段的基址、段长、段类型以及当前特权级等段的信息; 
        段描述符表用于存放段描述符。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="13"></a>13. PCI总线支持在PC机与存储器或I／O接口之间以数据传输的速率是多少？最高为每秒多少字节？</strong><br>
        <font color="#0000FF">答</font>：32位的PCI在读写传送中支持峰值为每秒132M字节的传送速率， 64位的PCI在读写传送中支持峰值为每秒264M字节的传送速率，对于66MHz、64位的PCI在峰值传输速率可达每秒528M字节。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
        <strong><a name="14"></a>14. 描述如何从PCI总线上捕获地址？</strong><br>
        <font color="#0000FF">答</font>：当PCI上的主设备寻址PCI目标设备时，由PCI主设备发出寻址地址，PCI目标设备进行译码，被选中的目标设备和主设备进行交互。如果PCI主设备要寻址一个驻留在ISA总线上的设备时，桥执行负向译码操作。然后，扩展总线桥启动 
        ISA 总线上的访问。PCI主设备寻址嵌入在南桥（PCI / ISA）中的器件时，如访问时钟，南桥就会立即响应，进行译码，这也属于正向译码。<br>
        .........................................................<a href="#top" class="pt9">top↑</a> 
        <br>
      </p></td>
  </tr>
</table>
</body>
</html>

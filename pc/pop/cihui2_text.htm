<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link href="../css/weiji.css" rel="stylesheet" type="text/css">
</head>

<body class="pop">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0" >
  <tr> 
    <td valign="top" class="pt9">1.状态周期：CPU的基本定时单位称为状态周期或者时钟周期。例如，假设8086的主频为10MHz，那么一个状态周期就是100ns。<br>
      <br>
      2.总线周期：CPU为了读取指令或传送数据，需要通过总线接口部件BIU与存储器或I/O接口进行信息交互，执行对总线的操作。进行一次数据传送的总线操作定义为一个总线周期。一个总线周期是由多个状态周期组成，典型的总线周期包含4各状态周期。<br>
      <br>
      3.空闲周期：系统总线处在空闲状态时的时钟周期称作空闲周期。<br>
      <br>
      4.中断：所谓中断，就是在一定条件下，CPU可以随时中断当前任务转向处理内部故障和外部设备请求服务的机制。中断可以由软件产生也可以由硬件产生。<br>
      <br>
      5.中断向量：所谓中断向量就是中断处理子程序的入口地址，每个中断类型对应一个中断向量。每个中断向量需要用4个字节表示，这4个字节中包含了中断服务程序的段地址和偏移量。<br>
      <br>
      6.中断向量表：中断向量表就是一块位于存储器的前1024个字节内存区域，地址为000000H~0003FFH。这1024个字节直观地被分为256份，每份4字节，即一个中断向量。<br>
      <br>
      7.内部中断：内部中断是CPU执行指令出现错误而引发的中断或CPU执行INT n指令产生的中断。内部中断包括除法错中断、单步中断、断点中断、溢出中断和其它INT指令中断。<br>
      <br>
      8.外部中断：外部中断的中断源来自CPU外部，是由外部设备产生的，当外设需要即时和CPU进行数据交互时，请求CPU中断当前执行的程序。此时，由外设的中断请求电路向CPU发出中断请求。外部中断也称为硬件中断。<br>
      <br>
      9.软件中断：软件中断是CPU执行INT指令或者指令执行出现错误而产生的中断，软件中断的产生过程和硬件无关。<br>
      <br>
      10.可屏蔽中断：可屏蔽中断是指中断请求受到中断允许触发器控制的这类中断，它是可以被屏蔽的。<br>
      <br>
      11.断点：所谓断点，就是中断发生时当前程序中下一条指令的地址，包括指令指针IP和代码段寄存器CS的内容。<br>
      <br>
      12.单步中断：单步中断的含义是每执行一条指令，就进入一次单步中断处理程序，此程序用来显示出一系列寄存器的值和一些附带的信息。单步中断用来给程序员提供一个调试程序的手段。<br>
      <br>
      13.流水技术：将指令执行这个重复的过程分解为若干个子过程，使得每个子过程可以与其他子过程同时进行，这种实现时间并行性的技术叫做流水技术。<br>
      <br>
      14.超标量技术：与流水线技术不同，超标量技术不是利用时间并行性，而是在处理机内设置多个相同功能的部件，让它们并行工作，从而实现空间上的并行性。<br>
      <br>
      15.指令分支预测：在流水线中，如果遇到转移指令，那么当转移指令没有执行完时，处理器就不会知道是否会真的发生转移，因此也就不知道从哪里预取指令。为了让流水线的指令预取操作不停顿，就需要根据历史情况，对当前的转移是否会真的发生进行预测。这种指令预测技术称作指令分支预测，也叫转移预测。<br>
      <br>
      16.指令的分支预测逻辑，它可以对将要执行的分支指令进行动态的转移预测。分支预测逻辑是以该分支指令的历史执行情况为预测依据的，因此预测有较大的成功率。在预测正确的情况下，完全避免了时间的延误。如果预测错误，则要花费3~4 
      CLK代价。<br>
      <br>
      17.保护模式：保护模式即保护虚地址模式，是Pentium微处理器的基本操作方式。该模式可以对复杂的多任务操作系统环境提供全方位的支持，实现了各种复杂的系统管理功能。<br>
      保护模式对存储器和数据有多种保护能力。任务和用户程序之间，用户程序与操作系统之间具有不同的权限。<br>
      在保护模式下，系统可以寻址64TB的虚拟地址空间。Pentium微处理器的存储管理机制具有将虚拟逻辑地址转换到线性地址，进而得到物理地址的功能。通过描述符表等内存管理数据结构，将大容量的磁盘存储空间映射到内存储器空间。<br>
      <br>
      18.实地址模式：实地址模式用于系统的初始化，在系统加电和复位以后，微处理器进入实地址模式。在实地址模式中,采用和8086类似的编程环境，只是在8086基础上进行了扩充，扩展了32寄存器的指令，并在8086的编程寄存器上增加了一些新的寄存器。它的寻址机构、存储管理方式、中断处理机制和8086微处理器类似。在实地址模式中，不使用虚拟地址。<br>
      <br>
      19.虚拟8086模式：虚拟8086方式实质上是保护方式的一种功能。虚拟8086方式可以在保护方式以及多任务的情况下运行8086的程序。该方式具有保护方式的任务属性，属于一种准操作方式。目的是为了让在8086方式下编制的软件在保护方式下仍然能够执行。<br>
      <br>
      20.系统管理模式：系统管理方式提供了一种对操作系统或用户透明的专用程序，实现了操作系统平台的专用功能，如电源管理，系统安全管理等。这些专用程序只能被系统固件所利用，专用代码的运行透明于操作系统。系统管理方式只有在外部中断SSMI＃有效时CPU保存了运行程序或任务的上下文关系之后，才切入独立的系统管理程序的地址空间。</td>
  </tr>
</table>
</body>
</html>

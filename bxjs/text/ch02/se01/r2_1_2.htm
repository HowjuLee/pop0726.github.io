<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<span class="point">消息传递体系结构</span> 在消息传递结构的并行机中，通常每个处理器有自己的存储器。该存储器只能被该处理器访问而不能被其它处理器直接访问，因此这种存储器通常称为<b>局部存储器</b>或<b>私有存储器</b>。当处理器 
              需要向处理器 传送数据时， 把被传送的数据以消息的形式发送给 。典型的消息传递结构的并行机有Cosmic Cube, Paragon 
              XP/S, iPSC, CM-5和nCUBE 2。<br>
              <br>
              　　<span class="point">共享地址空间体系结构</span> 在共享地址空间体系结构的并行机中，通过硬件支持，使得系统中只有唯一的一个地址空间，所有的处理器共享该地址空间。<br>
              <br>
              　　请注意，共享地址空间并不意味着系统中必须存在一个在物理上共享的存储器。共享地址空间可以通过一个物理上共享的存储器来实现，也可以通过分布式存储器来实现。在某些并行系统中，存储器分布在各结点内，通过硬件和软件的方法维护一个单一的地址空间。当处理器要访问不在本结点内的内存时，由系统硬件和软件为它找到所需访问的内存。<br>
              <br>
              　　<font color="#000000">采用消息传递结构的MIMD计算机又称为多计算机（multicomputers），采用共享地址空间结构的MIMD计算机又称为多处理器（multiprocessors）。但实际上，随着并行机结构的发展，多处理机和多处理器的界限已不十分清晰，很难严格区分。<br>
              </font> </p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

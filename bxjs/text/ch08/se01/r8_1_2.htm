<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<b>关于并行程序模型的选择</b><br>
              <br>
              　　在给定一种体系结构的时候，我们怎么决定采用的什么样的并行程序模型？下面的表给出了目前常用的一些并行程序模型：<br>
            </p>
            <table width="100%" border="0" cellspacing="1" cellpadding="0" bgcolor="#000000">
              <tr bgcolor="#CCCCCC"> 
                <td colspan="3" class="text"> 
                  <div align="center"><b>并行程序员的选择</b></div>
                </td>
              </tr>
              <tr bgcolor="#CCCCCC"> 
                <td width="15%" class="text"> 
                  <div align="center"><b></b></div>
                </td>
                <td width="15%" class="text"> 
                  <div align="center"><b>控制并行</b></div>
                </td>
                <td width="30%" class="text"> 
                  <div align="center"><b>数据并行</b></div>
                </td>
              </tr>
              <tr bgcolor="#FFFFFF"> 
                <td width="15%" class="text"> 
                  <div align="center">共享存储</div>
                </td>
                <td width="15%" class="text"> 
                  <div align="center">MPI, Pthreads, OpenMP,</div>
                </td>
                <td width="30%" class="text"> 
                  <div align="center">OpenMP</div>
                </td>
              </tr>
              <tr bgcolor="#FFFFFF"> 
                <td width="15%" class="text"> 
                  <div align="center">SMP</div>
                </td>
                <td width="15%" class="text"> 
                  <div align="center"></div>
                </td>
                <td width="30%" class="text"> 
                  <div align="center">DXML, NAG SMP, ESSL etc.</div>
                </td>
              </tr>
              <tr bgcolor="#FFFFFF"> 
                <td width="15%" class="text"> 
                  <div align="center">分布存储多处理器系统</div>
                </td>
                <td width="15%" class="text"> 
                  <div align="center">MPI,</div>
                </td>
                <td width="30%" class="text"> 
                  <div align="center">HPF</div>
                </td>
              </tr>
              <tr bgcolor="#FFFFFF"> 
                <td width="15%" class="text"> 
                  <div align="center">DMM</div>
                </td>
                <td width="15%" class="text"> 
                  <div align="center"></div>
                </td>
                <td width="30%" class="text"> 
                  <div align="center">ScaLAPACK, NAG Parallel, PESSL etc.</div>
                </td>
              </tr>
            </table>
            <br>
            　　<font color="#000000">在很多的计算机系统中，都同时提供了OpenMP和MPI，比如DEC的8400集群计算机和SGI的Origin2000，这两种模型对不同的应用有它们各自的优势。MPI被用于分布式存储的系统，而OpenMP可以被用来在共享存储系统上作为一种循环级并行编译器的工作语言。实质上，OpenMP是更低层的POSIX线程（Pthreads）库的一个应用程序接口（API）。</font></td>
        </tr>
      </table>
      <br>
    </td>
  </tr>
</table>
</body>
</html>

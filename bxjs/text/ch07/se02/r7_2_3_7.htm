<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　<b>　连续复制派生类型<br>
              <br>
              </b> 　　这是最简单的数据类型生成器。它得到的新的类型是将基类型连续复制的结果（包括因为地址对齐而产生的填塞数据）。它的形式如下：</p>
            <p>　　MPI_TYPE_CONTIGUOUS( count, oldtype, newtype )<br>
              　　IN count 复制次数（非负）<br>
              　　IN oldtype 基类型<br>
              　　OUT newtype 新的派生类型<br>
              　<br>
              　　int MPI_Type_Contiguous( int count, MPI_Datatype oldtype, <br>
              　　MPI_Datatype *newtype)；<br>
              　　比如对数据类型{（double, 0）, (char, 8)}复制三次得到的结果是<br>
              　　{（double, 0）,(char, 8),(double, 16),(char, 24),(double,32), (char, 
              40)}。<br>
            </p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　<b>　关于消息的更多内容<br>
              <br>
              </b>　　<b>消息</b>：分为<b>数据</b>（data）和<b>信封</b>（envelope）两个部分，其中，信封中的对象可能有四种：<b>接收进程序号</b>、<b>发送进程序号</b>、<b>消息标签</b>（tag）和<b>通信域</b>，它封装了关于这条信息的一些管理信息。数据则包含用户将要传递的内容，它包括数据说明和实际内容两个部分。数据说明包括数据起始地址，数据数目和数据类型信息；</p>
            <p>　　消息接收时，根据信封中的数据来进行消息匹配。即接收者通过比较比较源，通信域和消息标签来确定是否是自己想要的消息。消息标签用来区分来自相同源的多个消息，可以当作消息序号，这是为了解决因为网络原因而造成的消息到达序列与发送序列不同的问题。 
              <br>
              <br>
              　　通过设定RECV的源处理器为MPI_ANY_SOURCE，接收者可以使这个接收操作从通信域内的任意一个进程接收数据，但其它的要求仍然需要满足。同样，MPI也定义了一个MPI_ANY_TAG，设定消息标签为MPI_ANY_TAG的接收可以忽略对到达消息的tag检查。<br>
            </p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p> 　　<b>（1）并行算法的设计基础</b><br>
              　　通常算法设计者针对同一问题可设计出多种不同算法以适应在不同模型上对该问题的求解，并分析和评价并行算法的优劣。并行算法的设计与分析依赖于并行计算模型。<br>
              　<br>
              　　<b>（2）给并行算法的设计与分析提供了一个简单、方便的框架</b><br>
              　　并行计算模型抽象了一类并行计算机的基本特征，避开了硬件结构过多的繁琐细节限制，保证了它在相当范围内的通用性，同时又能反映出不同算法的主要特征，为算法的设计提供启发、指导和评价依据。<br>
              　<br>
              　　<b>（3）设并行算法的设计具有一定的生命力</b><br>
              　　算法设计者避开了多种多样的具体的并行计算结构，依据并行计算模型来设计算法。一方面可使研制者集中精力开发应用问题本身固有的并行性，分析算法性能；另一方面设计出的算法具有通用性，从而使并行算法的研究成为一项相对独立的活动。</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<span class="section">〖课前思考〗<a name="01"></a></span><br>
              　　为了使一个串行程序变成并行程序，并使它在一个实际的并行计算机系统上运行，需要那些必要的步骤？对并行程序来说，那些因素可能会对它的性能有影响？体系结构和并行程序语言对并行算法的设计有什么影响，更进一步的说，分布存储和共享存储的并行程序设计方法有些什么不同？<br>
              <br>
              　　<span class="section">〖学习目标〗<a name="02"></a></span><br>
              　　本章对并行算法和并行程序的设计基本原理作详细的介绍。通过对本章的学习，需要理解并行算法设计中的必要的步骤，每个步骤中需要考虑的问题。还需要清楚的了解并行程序性能优化需要考虑的问题，如何在各种方法中作适当的权衡。<br>
              <br>
              　　<span class="section">〖学习指南〗<a name="03"></a></span><br>
              　　本章的内容是并行算法设计的基础，它几乎涵盖了并行算法设计中需要考虑的所有问题，因此，它的内容是比较抽象的。一个好的学习方法是对每个内容，尽量多找一些实际的应用的例子，在应用的背景下考虑程序的并行化和并行程序的性能优化，这样才能加深理解。并行程序的设计并没有一定之规。本章所介绍的并行算法的一般设计方法和PCAM设计过程只是一种思路供算法设计者参考，并不一定拘泥于此。<br>
              <br>
              　　<span class="section">〖难重点〗<a name="04"></a></span><br>
              　　● 并发的类型<br>
              　　● 任务分解技术<br>
              　　● 任务分配与负载平衡<br>
              　　● 交互的优化<br>
              　　● 并行算法的一般设计方法<br>
              　　● 并行算法的一般设计过程<br>
              　　● PCAM设计方法<br>
              <br>
              　　<span class="section">〖知识点〗<a name="05"></a></span><br>
              　　● 数据并行<br>
              　　● 任务并行<br>
              　　● 流水并行<br>
              　　● 递归分解<br>
              　　● 数据分解<br>
              　　● 输入数据分解<br>
              　　● 输出数据分解<br>
              　　● 中间数据分解<br>
              　　● 拥有者计算原则<br>
              　　● 搜索分解<br>
              　　● 生产者--消费者模型<br>
              　　● 负载平衡<br>
              　　● 动态负载平衡<br>
              　　● 静态负载平衡<br>
              　　● 任务映射<br>
              　　● 动态任务分配<br>
              　　● 静态任务分配<br>
              　　● 块调度<br>
              　　● 块轮转调度<br>
              　　● 自调度<br>
              　　● 任务图<br>
              　　● 静态任务图<br>
              　　● 动态任务图<br>
              　　● 交互<br>
              　　● 交互模式<br>
              　　● 静态交互模式<br>
              　　● 动态交互模式<br>
              　　● 规则交互模式<br>
              　　● 不规则交互模式<br>
              　　● 交互的开销<br>
              　　● 单边通信<br>
              　　● 双向通信<br>
              　　● 开发数据局部性<br>
              　　● 计算与通信重叠<br>
              　　● 数据复制<br>
              　　● 集合交互操作<br>
              　　● PCAM设计方法</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<b>对并行体系结构的适宜性</b><br>
              <br>
              　　上面的这些策略，在原理上来说，对消息传递和共享存储空间的体系结构都适用。但对动态负载平衡方案来说，由于它需要从一个处理器传送任务到另外的处理器，所以对消息传递的结构来说，任务的计算量需要比任务所需的数据量要大得多（<font color="#CC6633">思考：为什么？</font>）。相反的，对共享存储的体系结构，由于任务不需要显式地传递（但实际上的数据移动是存在的），所以与消息传递的情形相比，任务的粒度可以小很多。<br>
              <br>
            </p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

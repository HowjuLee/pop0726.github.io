<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<b>对中间数据进行划分</b><br>
              <br>
              　　在很多的算法中，输出集中的数据之间的存在复杂的依赖关系，这种情况下，对输出集按照元素进行划分不再可行。对有的算法来说，它们的计算可以被重新组织为下面的多级计算：<br>
              　　<img src="../../../images/img_text/ch03/p3_2_6.gif" width="454" height="84"><br>
              <br>
              　　其中每级的输出数据之间没有依赖关系（它们对应的计算可以并行进行）。此时可以对中间数据（每级的输出）进行数据划分。<br>
              比如下面的计算前序和的算法：<br>
              　　　　　PrefixSum(A, n, S)<br>
              　　　　　{<br>
              　　　　　　for (j=0; j&lt;n; j++)<br>
              　　　　　　　S[j] = A[j];</p>
            <p> 　　　　　　for (i=1; i&lt;n; i*=2) {<br>
              　　　　　　　for (j=n-1; j&gt;=i; j--)<br>
              　　　　　　　　S[j] += S[j-i];<br>
              　　　　　　}<br>
              　　　　　}<br>
              <br>
              　　对长度为n的序列A计算前序和，结果存储在S中，计算的过程可以分为i=<img src="../../../images/img_text/ch02/81.gif" width="41" height="19" align="absmiddle">个步骤，在每个步骤中，有<img src="../../../images/img_text/ch03/3.gif" width="124" height="49" align="absmiddle">。<br>
              <br>
              　　对一个16个元素的序列上的计算过程如下图：<br>
              <img src="../../../images/img_text/ch03/p3_2_7.gif" width="480" height="364"> 
              <br>
              <br>
              　　它的计算在四个循环（步骤）后结束。对这四个步骤的输出可以进行数据划分，它们是对应的计算任务是可以并行执行的。</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

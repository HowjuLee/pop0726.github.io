<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　<b>数据共享交互</b><br>
              <br>
              　　在规则的数据共享交互中，每个任务访问数据的模式都是规则的。而对于不规则的数据共享交互，任务的数据访问模式不具有任何可以分辨的模式。（<font color="#CC6633">思考：从前面讲的例子中举出两个例子来说明规则交互与不规则交互的不同</font>）。同样的，不规则的数据访问模式可能由数据相关引起，也可能由不确定的算法引起。<br>
              <br>
              　　一般来说，规则的交互模式同时也是静态的。这样，我们才能预先知道交互的模式，然后利用底层系统结构的特点。一个例外可能如下：交互本身是和数据相关的（即动态的），但一旦交互确定下来，它会保持静态。另一方面，动态的交互通常是不规则的。对那些采用不确定算法的问题来说尤其如此。<br>
              <br>
              　　和不规则交互相比，规则交互容易实现和优化，对消息传递的体系结构来说尤其如此。对很多的规则和静态的交互，都已经开发出了优化的实现，一个例子就是在消息传递程序中广泛存在的集合数据共享操作（集合通信）。<br>
            </p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　<b>　组合判据</b><br>
              <br>
              　　下面的问题可以帮助检查所进行的组合是否合理。它们都应得到肯定的回答。<br>
              　　（1）用增加局部性的方法实施组合是否减少了通信开销？若不是，能否换用别的组合策略以减少通信开销？<br>
              <br>
              　　（2）如果使用了重复计算，是否权衡了其得失？<br>
              　<br>
              　　（3）如果组合已复制了数据，是否已证实这不会因限制问题尺寸和处理器数量的变化范围而牺牲了可扩展性？<br>
              　　<br>
              　　（4）由组合产生的任务是否具有相似的计算和通信代价？<br>
              <br>
              　　（5）任务数目是否仍然与问题尺寸成比例？若不是，算法是不可扩展的。<br>
              <br>
              　　（6）如果组合减少了并行执行的机会，是否已证实现在的并发性仍能适应目前和将来的并行机？<br>
              <br>
              　　（7）在不导致负载不平衡，不增加软件工程代价和不减少可扩展性的前提下，任务数能否再进一步减少？在其它条件相同时，创建较少的粗粒度任务的算法通常是高效的。<br>
              <br>
              　　（8）如果是并行化现有的串行程序，是否考虑了修改串行代码的成本？如果此成本较高，应考虑别的组合策略。<br>
            </p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

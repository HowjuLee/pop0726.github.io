<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　<b>　映射</b>阶段的任务是指定每个任务到哪个处理器上去执行。映射的目标是最小化全局执行时间和通信成本、最大化处理器的利用率，减少算法的总执行时间。为了达到以上目的，可采用以下策略：<br>
              <br>
              　　（1）把能够并发执行的任务放在不同的处理器上以增加并行度；<br>
              　　（2）把需频繁通信的任务置于同一处理上以提高局部性。<br>
              　　这二者有时会冲突，需要权衡。<br>
              <br>
              　　对于某些基于域分解技术开发的算法，它们有固定数目的等尺寸的任务，通信结构化强，此时映射较简单。如果任务的工作量不同，通信是非结构化的，可采用负载平衡算法。对于基于功能分解开发的算法，常常会产生一些由短暂任务组成的计算，它们只在执行的开始与结束时需要与别的任务协调，此时可用任务调度算法进行任务分配。<br>
            </p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

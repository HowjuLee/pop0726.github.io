<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top"> <br>
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　坐标存储格式采用三个等长的一维数组来存储矩阵信息，数组长度等于矩阵非零元素的个数。具体来说，设一个稀疏矩阵有q个非零元素，则三个数组的长度是q的数组中：<br>
              <br>
              　　√ 第一个数组V（Value的所写）存放矩阵的各个非零元素的值；<br>
              　　√ 后两个数组I（行方向）和J（列方向）分别存放非零元素的行坐标和列坐标（不妨假定坐标值从0开始）。<br>
              　　图6.4.1演示了一个6×6的稀疏矩阵以及其坐标存储格式。<br>
　　　<img src="../../../images/img_text/ch06/6_4_1.gif" width="477" height="204"><br>
              　　　　　　　　(a) 　　　　　　　　　　(b)<br>
              　　　　　　图6.4.1 一个6×6的稀疏矩阵以及其坐标存储格式<br>
              　　　　　　　　　(a) 稀疏矩阵；(b) 坐标存储格式</p>
            <p>　　<font color="#000000">下面来分析一个坐标存储格式的空间占用情况。设稀疏矩阵的行数和列数分别为r和c，非零元素数目为q；设一个矩阵元素值所占用的存储空间为f（一般为32或64位）；一个矩阵行列值索引所占的存储空间为d（一般为16或32位）。则普通存储方式所占用的空间为：<br>
              　　　　　　　　　<img src="../../../images/img_text/ch06/83.gif" width="101" height="21" align="absmiddle"><br>
              　　坐标存储格式所占用的存储空间为：<br>
              　　　　　　　　　<img src="../../../images/img_text/ch06/84.gif" width="118" height="21" align="absmiddle"><br>
              　　假设f=2d，则可以知道，当矩阵中非零元素的个数小于所有元素个数的1/2时，采用坐标存储格式能够节省存储空间。<br>
              </font> </p>
          </td>
        </tr>
      </table>
      <br>
    </td>
  </tr>
</table>
</body>
</html>

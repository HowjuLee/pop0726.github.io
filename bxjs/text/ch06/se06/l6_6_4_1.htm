<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">

<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body background="../../../images/htmls/left_di_2.gif" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgproperties=fixed>
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top"> 
      <table width="90%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="section" valign="top">　<span class="part">6.6.4 任意两点间的最短路径<br>
            （All-Pairs Shortest Paths）</span><br>
            <br>
            <span class="text">　　对于一个赋权图G=(V, E, w)，其两个结点u、v之间的最短路径定义为从u到v之间的所有路径中长度的最小值。其中一个路径的长度定义为路径上各条边的长度之和。所谓任意两点间的最短路径，就是求最短路径矩阵D=(d<sub>ij</sub>)，其中d<sub>ij</sub>是结点v<sub>i</sub>到v<sub>j</sub>之间的最短路径。这里介绍两种最短路径的三种求法：矩阵自乘法、Dijkstra算法和Floyd算法，并分别给出其并行算法。为了简单起见，假定矩阵各条边的权都是正数。</span><br>
            <br>
            　　6.6.4.1 矩阵自乘法<br>
            <br>
            　　　<span class="text"><a href="r6_6_4_1_1.htm" target="right">算法的并行化</a></span><br>
            <br>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

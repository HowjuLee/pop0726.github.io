<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">

<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body background="../../../images/htmls/left_di_2.gif" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgproperties=fixed>
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top"> 
      <table width="90%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="section" valign="top"><span class="part">6.7.2　遗传算法的并行性分析</span><br>
            <br>
            <span class="text">　　一般地说，GA的计算能力主要来源于它的隐含并行性，即按照一些有效的原则，并行地把搜索尝试分配到搜索空间的许多领域的特性。隐含并行性是如此重要，以致于人们常把它作为判断一个算法是否是GA的标准。GA的隐含并行性使GA使用相对少的串，就可以测试搜索空间里较大范围的区域。GA的这种隐含并行性，使其在复杂问题的优化求解等方面优于其它算法。<br>
            <br>
            　　但是，尽管传统的遗传算法虽然具有隐含的并行性，但其实现方法在本质上仍是串行的。这种串行的遗传算法在解决一些实际问题时，由于需要较多的个体数量和大量的计算，使得进化过程缓慢，难以达到实时要求。因此并行遗传算法 
            (Parallel Genetic Algorithm，简称 PGA)[2]就受到了较大的重视。本文拟对目前已开发出的并行遗传算法进行分类和总结，以便能为新的并行遗传算法的开发和应用以及并行遗传算法的机理分析提供参考。<br>
            </span> </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

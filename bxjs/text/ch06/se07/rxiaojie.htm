<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top"> <br>
      <table width="94%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　　本章研究了几类问题的并行化方法：排序、稠密矩阵运算、稀疏矩阵运算、动态规划、图论相关算法、遗传算法。其中排序是一维的运算，相对比较简单，适合于从其开始学习并行算法。矩阵是二维的，与矩阵有关的并行算法就涉及到对矩阵进行划分和在不同处理器上进行映射，常用的划分方式是条带状划分和棋盘划分，其中棋盘划分往往体现出比较好的性能。矩阵运算是解决很多问题的基础，比如后面的动态规划、图论等相关算法有相当一部分是利用了矩阵运算并行化的成果。利用矩阵的稀疏性，研究相关的算法，可以提高算法的性能。动态规划是解决优化问题的常用方法之一，它的核心思想是问题分解和迭代。图论在计算机科学种扮演者很重要的角色，它提供了对很多问题都有效的一种简单而系统的建模方式。很多问题都可以转化为图论问题，然后用图论的基本算法加以解决。遗传算法是解优化问题的有效算法，而并行遗传算法是遗传算法研究中的一个重要方向，受到了研究人员的高度重视。希望读者在读完本章后能够对掌握算法并行化的基本方法。</p>
            </td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

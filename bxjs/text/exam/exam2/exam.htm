<html>
<head>
<title>考试试题</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

<script language="JavaScript">
<!--
function MM_openBrWindow(theURL,winName,features) { //v2.0
  window.open(theURL,winName,features);
}
//-->
</script>
</head>
<script language="JavaScript">
function getresultcheck(form)
{var mykeys=new Array();
//  mykeys[0]="B";
//czp-select-answer
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=form.elements;

<!--czp-select-count-->
for(var I=0;I<every.length;I++)
{
	if(every[I].type=="radio")
	{
		
		if(every[I].checked)
		{	
	
			var item=parseInt(every[I].name.substr(0));
		
			answer[item-1]+=every[I].value;
		}
	}				
}

var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font color=red>您的测试结果</font></h2></center>";
var totalscore=0;
for(var I=0;I<answer.length;I++)
{
	if(answer[I]==mykeys[I])
	{
		var rstr="<font size=2>第"+(I+1)+"题答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;//每题分数
	}else
	{
		var rstr="<font size=2>第"+(I+1)+"题答案错误!正确答案为"+mykeys[I]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br>您的总成绩为:";
newcount+=Math.ceil(totalscore);
newcount+="分";
newwin=window.open("","","height=200,width=300,scrollbars=yes,resizable=no");
newwin.document.write(newcount);}



function getresultcheck1(form)
{var mykeys=new Array();
//  mykeys[0]="B";
//czp-mulselect-answer
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=form.elements;

<!--czp-mulselect-count-->
for(var I=0;I<every.length;I++)
{
	if(every[I].type=="checkbox")
	{
		
		if(every[I].checked)
		{	
	
			var item=parseInt(every[I].name.substr(0));
		
			answer[item-1]+=every[I].value;
		}
	}				
}

var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font color=red>您的测试结果</font></h2></center>";
var totalscore=0;
for(var I=0;I<answer.length;I++)
{
	if(answer[I]==mykeys[I])
	{
		var rstr="<font size=2>第"+(I+1)+"题答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;//每题分数
	}else
	{
		var rstr="<font size=2>第"+(I+1)+"题答案错误!正确答案为"+mykeys[I]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br>您的总成绩为:";
newcount+=Math.ceil(totalscore);
newcount+="分";
newwin=window.open("","","height=200,width=300,scrollbars=yes,resizable=no");
newwin.document.write(newcount);}












function check(){
var mykeys=new Array();
//czp-tiankong-answer
//mykeys[0]="B";
var answer=new Array();
for(var I=0;I<mykeys.length;I++) answer[I]="";

var every=zfl.elements;
for(var I=0;I<every.length;I++)
{
if(every[I].type=="text")
{
 if(every[I].value!==null)
 {
 //var item=parseInt(every[I].name.substr(1))
//  answer[item-1]+=every[I].value;
  answer[I]+=every[I].value;
  }
 }
}


var newcount="<html><head><title>谢谢您!</title></head><body><center><h2><font face=\"隶书\" size=\"5\" color=\"#000099\">您的测试结果</font></h2></center>";
var totalscore=0;
for(var i=0;i<answer.length;i++)
{
	if(answer[i]==mykeys[i])
	{
		var rstr="<font face=\"宋体\" size=2>第"+(i+1)+"个空答案正确!</font><br>";
		newcount+=rstr;
		totalscore+=1/(answer.length)*100;
	}else
	{
		var rstr="<font face=\"宋体\" size=2>第"+(i+1)+"个空答案错误!正确答案为"+mykeys[i]+"</font><br>";
		newcount+=rstr;
	}

}

newcount+="<br><font face=\"宋体\" size=3><b>您的总成绩为:</b></font><font face=\"宋体\" size=3 color=red>";
newcount+=Math.ceil(totalscore);
newcount+="分</font><br>";
newwin=window.open("","","height=400,width=400,scrollbars=yes,resizable=no");
newwin.document.write(newcount);
}

</script>
<body bgcolor="#FFFFFF" text="#000000" topmargin=0>

<center>
  <br>
  <span class="part">考试试题二</span><br>
  <br>
  <table width="95%" border="0" cellspacing="0" cellpadding="0">
    <tr> 
      <td class=text> <form>
        </form>
        <form name="zfl">
        </form>
        <form>
          <dl>
            <dt><br>
              一、 名词解释（20分，每小题四分）<br>
              　　DSM <br>
              　　COMA <br>
              　　总线 <br>
              　　虫蚀寻径<br>
              　　LogP模型 <br>
              <br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              二、 （16分）设32个处理器编号为0，1，2，…，31，用单级互连网络相连。试问当互连函数分别为 <br>
              （1）<img src="images/st2_1.gif" width="37" height="23" align="absmiddle"><br>
              （2） <img src="images/st2_2.gif" width="15" height="14" align="absmiddle"><br>
              （3） <img src="images/st2_3.gif" width="20" height="13" align="absmiddle"><br>
              （4）蝶式置换 <br>
              连接时，第11号处理器与哪一个处理器相连？ <br>
              <br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              三、（16分）假定处理器<img src="images/st2_4.gif" width="81" height="12">开始时存有数据d<sub>i</sub>，所谓的前序累加求和（Prefix-Sum）指用 
              来代替P<sub>i</sub>中的原始数据d<sub>i</sub>，下面的算法给出了PRAM模型上的前序累加求和的算法：<br>
              <br>
              前序累加求和算法<br>
              　输入：Pi中保存有di， <br>
              　输出：Pi中的内容为 <br>
              　Program Prefix_sum<br>
              　Begin<br>
              　　for j=0 to logn �C 1 do<br>
              　　　for k = 2j + 1 to n par-do<br>
              　　　　（i） Pi = di �C 2j<br>
              　　　　（ii） di = di + di �C 2j<br>
              　　　endfor<br>
              　　endfor<br>
              　End.<br>
              其中，Par-do表示不同的循环变量对应的计算可以并行执行<br>
              （1）n = 8为例，按照上面的算法逐步计算出累加和 （2）分析算法时间复杂度 <br>
              <br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              四、（16分）在p个处理器的超立方体上完成n个数的加法（p < n，其中p 和n 都是2的整数次幂）。完成并行计算的解题过程，并分析算法是否为开销最优。<br>
              <br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              五、（16分）考虑下图所示的搜索树，其中黑色的节点表示问题的解。<br>
              a) 对树的串行搜索采用深度优先（DFS）算法，如果遍历树的每个弧耗费单位时间，那么需要多长时间才能找到解？ <br>
              b) 将树在两个处理器间进行分布，如图所示，共同完成搜索任务，如果两个处理器都在它们各自的树上进行DFS搜索，那么要找到解需要多长时间，加速比是多少？请解释这个加速比。<br>
              <img src="images/st2_6.gif" width="488" height="215"> <br>
              <br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              六、（16分）在并行计算中，如果问题规模为W固定，问题的串行部分为Ws，请证明不管用多少处理器，并行系统的加速比上限为W/Ws。<br>
              <textarea name=jianda cols=50 rows=5></textarea>
              <br>
              <br>
              <br>
              <!--czp-wenda-timu-->
              <br>
              <input type=button name=Button value=答案 案 onClick="MM_openBrWindow('text/examination/exam01_pop2.htm','','width=471,height=384')" class=pbox>
              <input type='reset' name='Submit3' value='重置' class=pbox>
              <br>
            </dt>
          </dl>
        </form>
        <form>
        </form></td>
  </tr>
</table></center>

</body>
</html>

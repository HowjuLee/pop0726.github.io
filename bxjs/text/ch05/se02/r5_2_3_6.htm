<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../images/htmls/Slicebg.jpg);
background-position: right bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
</head>

<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td valign="top" height="20">&nbsp; </td>
  </tr>
  <tr>
    <td valign="top">
      <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="text" valign="top"> 
            <p>　<font color="#000000">　一个例子<br>
              　　并发度对等效率函数的影响。<br>
              　　考虑用高斯消元法解一个n变量n个方程的线性方程组。总的计算量为<img src="../../../images/img_text/ch05/90.gif" width="44" height="24" align="absbottom">，但n个变量必须依次消除，而消除一个变量需要的计算量为<img src="../../../images/img_text/ch05/91.gif" width="44" height="24" align="absmiddle">，因此，在算法运行的任意时刻，最多有<img src="../../../images/img_text/ch05/91.gif" width="44" height="24" align="absmiddle">个处理器能够保持工作状态。由于问题规模为<img src="../../../images/img_text/ch05/90.gif" width="44" height="24" align="absbottom">，所以算法的并发度<img src="../../../images/img_text/ch05/92.gif" width="115" height="24" align="absmiddle">。这说明最多有<img src="../../../images/img_text/ch05/93.gif" width="60" height="24" align="absmiddle">个处理器能够被有效的使用。另一方面，给定p个处理器，问题规模至少应该为<img src="../../../images/img_text/ch05/94.gif" width="57" height="24" align="absmiddle">才能有效的利用所有的处理器，因此，由于并行度的限制，这个并行系统的等效率函数为<img src="../../../images/img_text/ch05/95.gif" width="57" height="24" align="absmiddle">。</font><br>
              <br>
              　　由并行度限制的等效率函数最优（也即<img src="../../../images/img_text/ch05/96.gif" width="39" height="21" align="absmiddle">）的<b>必要条件</b>是并行算法的并发度为<img src="../../../images/img_text/ch05/97.gif" align="absmiddle">，如果一个算法的并发度比<img src="../../../images/img_text/ch05/97.gif" align="absmiddle">要低，那么并行度限制的等效率函数比<img src="../../../images/img_text/ch05/96.gif" width="39" height="21" align="absmiddle">要高，这种情形下，一个并行系统的总的等效率函数由并行度限制的等效率函数，通信限制的等效率函数，和其他额外开销限制的等效率函数中的最大值确定。<br>
              <br>
              　　等效率度量指标的最大优点是，可以用简单的、可定量计算的、少量的参数就能计算出等效率函数，并由其复杂度就可以指明算法的可扩展性。这对于具有网络互连结构的并行计算机来说是很合适的，因为T<sub>o</sub>是可以一步一步计算出来的。而且T<sub>o</sub>是计算等效率函数的唯一关键参数，所以如果它不能够方便的计算出来，则用等效率函数度量可扩展性的方法就受到了限制。我们知道开销T<sub>o</sub>通常包括了通信、同步、等待等额外计算开销。不幸的是，在共享存储的并行计算机中，T<sub>o</sub>则主要是非局部访问的读/写时间、进程调度时间、存储竞争时间以及Cache一致性维护时间，而这些时间是难以准确计算的，所以用解析计算的方法不应该是一种唯一的方法。1994年两位中国学者Xian-He 
              Sun和Xiao-Dong Zhang分别提出了以实验测试为主要手段的两种衡量可扩展性的指标，即等速度（isospeed）和平均延迟指标。<br>
            </p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

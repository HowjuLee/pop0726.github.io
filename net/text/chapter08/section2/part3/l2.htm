<html>
<head>
<title>计算机网络体系结构</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td class="explaination"><br>
            　　接受帧的站在帧经过本站时，将帧中的目的地址与本站的地址进行比较，如地址相符合，则将帧放入接收缓冲器，并同时将帧送回环上，如地址不符合，则将帧沿环下传。<br>
            <br>
            　　环的长度往往折算成比特数来衡量，环上每个中继器可引入一位或几位延时。把环看作一个环缓冲器，则有：<br>
            　　　<span class="point">环上的比特数 ＝ 传播延时 × 发送介质长度 × 数据率 ＋ 中继器延迟</span><br>
            <br>
            　　例如，1km长的令牌环，其传输速率为1Mbps，上有20个站点，每个中继器引入1位延迟，设传播延迟为5μs/km，则其环的位长度 
            ＝ 5 × 10<sup><font size="1">-6</font></sup>× 10<sup><font size="1">6</font></sup> ＋ 1 × 
            20＝25位。<br>
            <br>
            　　令牌环的故障处理功能主要是对令牌和数据帧的维护。环上至关重要的差错是没有空令牌和持续的忙令牌，为解决此问题，指定1个站为令牌管理站。该管理站通过采用超时机制来检测令牌丢失情况，该超时值比最长的帧完全遍历该环所需要的时间还要长一些，如果在这一段时间里没有检测到令牌，就认为该令牌已经丢失。为恢复令牌，管理站将清除环上的所有残余数据并发出1个空令牌。 
            <br>
            <br>
            　　为了检测到1个持续循环的忙令牌，管理站可在经过的忙令牌上置其管理比特为1。如果管理站看到1个忙令牌的管理比持已经是1，就知道某个站未能清除自己发出的帧，管理站就将此令牌设为空令牌。<br>
            <br>
            　　环上其他站都具有被动管理站的功能和作用，它们的主要工作是检测出主动管理站的故障，并承担起主动管理站的职能。 <br>
            <br>
            　　令牌环在轻负载时，由于存在等待令牌的时间，效率较低。在重负载时，对各站公平访问且效率高。考虑到数据的位模式可能会和令牌形式相同，此时在数据段使用位插入的办法以确保令牌位模式的唯一性，以区别令牌和数据。采用发送站从环上收回帧的策略，具有广播特性，即可有多个站收同一个数据帧，同时这种策略还具有对发送站自动应答的功能。<br>
            　</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

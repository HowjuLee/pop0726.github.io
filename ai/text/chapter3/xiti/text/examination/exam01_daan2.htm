<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<center><table width="95%" border="0" cellspacing="0" cellpadding="0">
  <tr>
      <td class=text> 
        <p align="center"><b>第三章课后习题答案</b></p>
        <p align="left"><font color="#0000CC">说明：由于人工智能的很多题目都很灵活，以下解答仅供参考。</font></p>
        <p><font color="#CC0000">第1题</font><br>
          答：此题要求按照课中例题的方式，给出算法，以下是每个循环结束时的搜索图。</p>
        <p><img src="../../images/t311.gif" width="347" height="318"></p>
        <p>上面这种做法比较简单，也可以如下做：</p>
        <p><img src="../../images/t312.gif" width="395" height="850"></p>
        <p><br>
          <font color="#CC0000">第2题<br>
          </font>答：</p>
        <p><img src="../../images/t35.gif" width="350" height="350"> </p>
        <p>　　从该搜索图可以看出，无论先走者选择哪个走步，后走者都可以走到标记为A的节点，该节点只剩下一枚钱币，所以先走者必输。 对于一般的具有n个钱币的情况，当n＝4×m＋1时，后走者存在取胜策略。因为后走者可以根据先走者的走法，选择自己的走法，使得双方拿走的钱币数为4，这样经过m个轮回后，共拿走了4×m个钱币，只剩下了一枚钱币，而此时轮到先走者走棋。所以在这种情况下，后走者存在取胜的策略。 
          对于钱币数不等于4×m＋1的情况，先走者可以根据实际的钱币数选择取走的钱币数，使得剩下的钱币数为4×m＋1个，此时先走者相当于4×m＋1个钱币时的后走者了。因此在这种情况下，先走者存在获胜的策略。<br>
          <br>
          <font color="#CC0000">第3题</font><br>
          答：</p>
        <p><a href="picture1.htm"><img src="../../images/t1_8.gif" width="72" height="97" border="0"></a></p>
        <p><br>
          <font color="#CC0000">第4题</font><br>
          答：略<br>
          <br>
          <font color="#CC0000">第5题</font><br>
          答：略<br>
          <br>
          <font color="#CC0000">第6题</font><br>
          答：略<br>
          <br>
          <font color="#CC0000">第7题</font><br>
          答：略<br>
          <br>
          <font color="#CC0000">第8题</font><br>
          答：略<br>
          <br>
          <br>
          　</p>
        </td>
  </tr>
</table>
  </center>

</body>
</html>

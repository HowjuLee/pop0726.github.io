<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">




<link rel="stylesheet" href="../../../css/type.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="20" topmargin="10" marginwidth="20" marginheight="10">
<table width="98%" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr> 
    <td class="tt"> 
      <p ><b>1.6　小结</b></p>
      <p ><font color="#FF0000">1．</font>本章一开始就指出产生式系统是人工智能系统最常见的一种结构，因此分析产生式系统的组成部分及其建立问题是一个很基本的问题。当给定的问题要用产生式系统求解时，要求能掌握建立产生式系统形式化描述的方法，所提出的描述体系应具有一般性，能推广应用于这一类问题更复杂的情况。一般化的产生式系统可用来描述许多重要人工智能系统的工作原理。<br>
        <font color="#FF0000">2．</font>产生式系统的综合数据库是指对问题状态的一种描述，这种描述必须便于在计算机中实现，因此它实际上就是人工智能系统中所使用的数据结构，不同于软件工程中数据库这一术语的概念。计算机程序设计中常用的数据结构类型，如向量、集合、数组、符号串、树、表格乃至文件都可以作为综合数据库。<br>
        <font color="#FF0000">3．</font>问题的表示是研究形式化表示方法的问题，好的问题表示方法既简单又能反映问题的本质，也有利于提高求解的效率。一个问题可有多种的表示方法，当然同一个问题有时也可用不同类型的产生式系统求解。<br>
        <font color="#FF0000">4．</font>本章讨论了两个基本过程--过程PRODUCTION和过程SPLIT，它们分别对应一般产生式系统和可分解产生式系统这两种求解方法。PRODUCTION相当于对问题直接进行求解，而SPLIT则是对问题进行归约求解，即通过归约技术，将问题的目标用子目标集合代替，使得如果子目标可得到求解，则主目标也就能解决了，因而归约就是把问题化简到最原本的问题的求解方法。此外无论哪一种类型的产生式系统，都可以用正向或逆向的方式求解，不可撤回或试探性的求解策略也都可以使用，实际上要根据具体问题的特点，选用较合适的方法进行求解。<br>
        <font color="#FF0000">5．</font>高效能的人工智能系统需要问题领域的知识，通常可把这些知识细分为三种基本类别：陈述性知识是关于表示综合数据库的知识，如待求解问题的特定事实等；过程性知识是关于表示规则部分的知识，如该领域中处理陈述知识所使用的规律性知识；控制知识是关于表示控制策略方面的知识，包括协调整个问题求解过程中所使用的各种处理方法、搜索策略、控制结构有关的知识。用产生式系统求解问题时的主要任务就是如何把问题的知识组织成陈述、过程和控制这三种组成部分，以便在产生式系统中更充分地得到应用。 
        <br>
        <br>
      </p>
      </td>
  </tr>
</table>
</body>
</html>

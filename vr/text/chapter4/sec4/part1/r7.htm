<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image: URL(../../../../image/index/bg.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="97%" border="0" cellspacing="0" cellpadding="0" align="right">
  <tr> 
    <td class="text"> 　　（1）变形<br>
      　　变形技术包括：与物体表示有关的变形，与物体表示无关的变形，基于约束的变形，轴变形。<br>
      　　与物体表示有关的变形，可以作用于由多边形表示的物体。可以通过移动多边形顶点来实现。但是不适当的移动可能导致三维走样，例如原来共面的多边形变成不共面的。与物体表示有关的变形，作用于由参数曲面表示的物体时，可以防止这种问题。移动控制顶点只改变基函数的系数，曲面仍然是光滑的。但是它也会带来三维走样。由于控制顶点比较稀疏，物体变形不一定是预期的。<br>
      　　与物体表示无关的变形，可以作用于由多边形表示的物体，也可以作用于由参数曲面表示的物体。一种方法是Barr的整体和局部变形方法。其变换矩阵不是恒定值，而是位置的函数。另一种方法是Sederberg提出的最实用的自由变形方法FFD。它不是直接对物体变形，而是对物体嵌入的空间进行变形。FFD方法中的lattice块的形状为平行六面体，这限制了它的应用。先对物体嵌入的lattice块的控制顶点设置动画，再把变形传播到物体本身。自由变形也可以用于脸部表情动画，科学计算可视化等领域。<br>
      　　基于约束的变形，是为了解决FFD的不足。在FFD中，lattice变形和物体变形之间的对应关系并不直观。Borrel和Rappoport提出了简单约束变形法。用户定义一系列约束点、所需的偏移量和影响区域半径，在每个约束点处定义一个以该点为中心的局部B样条基函数，该函数在影响区域外取值为0。该方法计算量小，在工作站上可实时交互。<br>
      　　轴变形，也是为了解决FFD的不足。在FFD中，控制点较多时交互性就较差。Lazarus提出了基于轴的变形。它用物体轴线的变形来控制物体的变形。对轴线设置动画是很容易的。用该方法仿真鱼的游动，取得了很好的效果。<br>
      　　（2）渐变（morphing）<br>
      　　上述的变形，是一个物体的形状变化。不给定物体最终形状。下述的渐变，是物体由一种形状逐渐变化为另一种形状。给定物体最终形状。<br>
      　　两个二维多边形之间的渐变，一般采用顶点间的线性插值。但生成的多边形可能产生自交和不应有的收缩。Sederberg提出了基于物理的二维形状渐变。把形状看成为由电线框组成，求解所需能量最小的形变解。<br>
      　　两个二维图像之间的渐变，有Wolberg的网格变形技术。他用B样条网覆盖在数字图像上，然后移动B样条网的控制顶点来控制图像的渐变。Beier和Neely提出了基于特征的自然渐变技术。它允许动画师对渐变进行直观控制，交互地指定渐变中的图像特征，达到预期的效果。<br>
      　　两个三维图像之间的渐变，与物体的拓扑结构有密切联系。已经有很多有关的研究。Blinn和Nishimura提出基于元球的造型方法，这是应用最广的隐式曲面方法。复杂的人体只需大约500个元球。元球是具有密度的特殊的球，一组元球的密度为该组中所有元球密度之和，对应的三维模型可表达为由等密度面围成的体。通过位置、方向、大小和密度的巧妙控制，可以用元球生成复杂的形体。采用元球造型，物体变形能以自然的方式进行。</td>
  </tr>
</table>
</body>
</html>

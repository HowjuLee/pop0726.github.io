<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8""><STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../../image/index/r5_c1.gif);
background-repeat: repeat;
background-attachment: fixed;
}
-->
</STYLE>
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="96%" border="0" cellspacing="0" cellpadding="0" align="right">
  <tr>
    <td><span class="section">3．1 虚拟现实的计算机体系结构<br>
      3．1．1 虚拟现实对计算机系统的要求<br>
      </span><span class="text">　2．计算能力和场景复杂性<br>
      　虚拟现实仿真的计算问题，是一种时间受限的计算。这是因为显示的帧频必须大于8到10帧/秒。于是，在0.1秒内，必须完成一次场景的计算。如果一个显示的场景中有10,000个三角形（或多边形），这个数量就反映了场景复杂性。这样，在每秒进行的10次计算中，就应该计算100,000个三角形（或多边形）。这表示了计算能力。<br>
      　若要求更加逼真的仿真效果，就要增加场景复杂性。显示的场景中有更多的三角形（或多边形），显示的效果就更逼真。这就要求更强的计算能力，每秒计算更多的三角形（或多边形）。反之，如果只能使用能力有限的指定的计算机，则限定了计算能力，也就限定了场景复杂性。每个场景，只能用较少的三角形（或多边形），产生较粗糙的显示。这种考虑就是，计算能力和场景复杂性的折衷。 
      <br>
      　下面几节将介绍用于VR的各类计算机。对这些计算机，主要的技术指标就是其计算能力，也就是每秒计算的三角形（或多边形）的数目。应该注意，是否加纹理，是否反走样，采用哪一种明暗模型，都会影响到计算能力。加入这些复杂的功能，就会增加计算复杂性，从而减少每秒计算的三角形（或多边形）的数目。</span></td>
  </tr>
</table>
</body>
</html>

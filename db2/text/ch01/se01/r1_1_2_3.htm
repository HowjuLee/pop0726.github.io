<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --><span class="biaoti_1">3． 数据库系统管理阶段</span><br>
      <br>
      　　（1） 数据库具有面向各种应用的数据组织和结构。文件系统中，每个文件面向一个应用程序。而现实生活中，一个事物或实体，含有多方面的应用数据。例如，一个学生的全部信息，包括学生的人事信息，学生的学籍和成绩信息，还有学生健康方面的信息。这些不同的数据对应人事部门的应用，教务部门的应用和健康部门的应用。<br>
      　　<font color="#5a5aad">对学生的全部信息，如果采用文件系统，至少要建立三个独立的文件，都要存储学生的姓名、学号、年龄、性别等学生的基本信息。如果采用数据库系统管理，在数据库设计的时候，就要考虑学生的各种应用信息，设计面向各种应用的数据结构。如学生的人事数据、学生的学籍数据、学生的健康数据等。使整个实体的多方应用的数据具有整体的结构化描述。也为数据针对不同应用的存取方式提供各种灵活性。</font><br>
      　　（2） 具有高度的数据独立性。数据结构可分为数据的物理存储结构和数据的逻辑结构。<br>
      　　数据的物理存储结构是指数据在计算机物理存储设备（硬盘）上的存储结构。在数据库中，数据在磁盘上的存储结构是由DBMS来管理和实现的，用户或应用程序不必关心。应用程序直接与数据的逻辑结构相关。数据的逻辑结构又分为局部逻辑结构和全局逻辑结构。而且不同的应用程序只与自己局部数据的逻辑结构相关。例如，学生的人事部门的应用程序与学生的人事数据相关，健康部门只关心学生的健康数据，教务部门只关心学生的学习成绩和选课数据。<br>
      　　数据库中数据的高度独立性，是指物理数据的独立性和逻辑数据的独立性两个方面。如图1-4所示，应用程序与数据的逻辑结构和物理存储结构之间的映射关系由DBMS完成。
      
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td align="center"><object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="../../../../../../../../download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0" width="400" height="300">
              <param name=movie value="../../../swf/ch1/1-4.swf">
              <param name=quality value=high>
              <param name="wmode" value="transparent">
              <embed src="../../../swf/ch1/1-4.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="400" height="300" wmode="transparent">
              </embed> 
            </object></td>
        </tr>
      </table>
      <br>
      　　物理数据的独立性：全局逻辑数据结构独立于物理数据结构。即用户的应用程序与数据在数据库中的物理存储结构相互独立。<br>
      　　<font color="#5a5aad">即当数据的物理存储结构改时，只要数据的逻辑结构不改变，用户的应用程序就不用改变。反之，如果应用程序改变了，数据的逻辑结构不变，数据的物理存储结构也不用改变。</font><br>
      　　逻辑结构的独立性：指数据的全局逻辑结构独立于局部逻辑结构。即用户的应用程序与数据的全局逻辑结构的相互独立性。<br>
      　　<font color="#5a5aad">当数据的全局逻辑结构改变时，某些部分的应用程序可以不改变。例如，学生的人事档案信息中增加学生照片数据项，人事部门的应用程序和它的局部逻辑结构要改变，而教务部门和健康部门的应用程序不关心这一项，就可以不改变。</font><br>
      　　数据的独立性是由DBMS实现的两级映射关系来完成的。<br>
      　　（3） 实现数据的高度共享并保证数据的完整性和安全性：<br>
      　　由数据库管理系统管理的数据可以提供多个用户或应用程序同时并发访问同一个数据库中的数据记录或同一个数据项，并要保证数据的安全性、完整性和永久的数据存储，因此，<font color="#cc0000">DBMS要提供以下的四种控制机制：</font><br>
      　● 多用户并发(Concurrency)： <br>
      　　<font color="#5a5aad">DBMS提供并发机制和协调机制，保证在多个应用程序同时并发访问、存取和操作数据库数据时，不产生任何冲突，数据不遭到破坏。</font><br>
      　● 数据完整性(Integrity)：<br>
      　　<font color="#5a5aad">DBMS提供数据完整性的检查机制，避免不合法的数据进入数据库中，确保数据库数据的正确性、有效性和相容性。</font><br>
      　● 数据安全性(Security)：<br>
      　　<font color="#5a5aad">DBMS提供安全保密机制，防止没有授权的用户不能进入系统或不能更改数据或不能访问数据等。</font><br>
      　● 数据库恢复（Recovery）机制：<br>
      　　<font color="#5a5aad">当软件、硬件或系统运行出现各种故障时，要确保存储在数据库的数据不被丢失和破坏。使数据库中存储的数据是永久性的数据。</font><br>
      <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

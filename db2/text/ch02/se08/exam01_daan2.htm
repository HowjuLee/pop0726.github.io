<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/pop/bg.gif">
<center>
  <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
      <td> 
        <p class="pt9-black"><b>问答题答案</b></p>
        <p class="pt9-black">　<b>第1题</b><br>
          　数据库的三层模式结构的好处在于： ・ 保证了数据的独立性：概念模式和内模式分开，保证数据的物理独立性，把外模式和概念模式分开，保证数据逻辑的独立性 
          ・ 简化用户接口：用户不需要了解数据库实际存储情况，也不需要对数据库存储结构了解，只要按照外模式编写应用程序就可以访问数据库。 ・ 有利于数据共享：所有用户使用统一概念模式导出的不同外模式，减少数据冗余，有利于多种应用程序间共享数据。 
          ・ 有利于数据安全保密：每个用户只能操作属于自己的外模式数据视图，不能对数据库其他部分进行修改，保证了数据安全性。<br>
          <br>
          　<b>第2题</b><br>
          　答案略。<br>
          <br>
          　<b>第3题</b><br>
          　答案略。<br>
          <br>
          　<b>第4题</b><br>
          　实体之间的联系包括不同的实体集中实体间的联系，以及相同的实体集内实体之间的联系。这两种联系情况都有三种不同的联系类型： l 一对一联系：如果实体集EA中每个实体至多和实体集EB中的一个实体有联系，反之亦然，就称实体集EA和实体集EB的联系为"一对一联系"，记为"1：1"。 
          l 一对多联系：如果实体集EA中每个实体与实体集EB中的任意多个（零个或多个）实体有联系，而EB中每个实体至多与实体集EA中的一个实体有联系，就称实体集EA对EB的联系为"一对多联系"，记为"1：N"。 
          l 多对多联系：如果实体集EA中的每个实体与实体集EB中的任意个（零个或多个）实体有联系，反之，实体集EB中的每个实体与实体集EA中的任意个（零个或多个）实体有联系，就称实体集EA和EB的联系为"多对多联系"，记为"M：N"联系。<br>
          <br>
          　<b>第5题</b><br>
          　（1） 语义数据模型： l 语义数据模型具有丰富的语义，并且包含有大量的模型描述结构，使用这些结构可以定义一个数据库的语义特性。它是现实世界的第一层次的抽象。它是独立于计算机系统的数据模型，不涉及信息在计算机内如何表示，只描述概念模型。 
          l 语义数据模型描述数据的语义，不注重数据的组织结构。 l 语义模型如实体联系模型、面向对象数据模型、函数数据模型。 （2） 结构数据模型： 
          l 结构化的数据模型是直接面向数据库的逻辑结构的，它是现实世界的第二层次的抽象。这类模型涉及到计算机系统和数据库管理系统，又称为"基本数据模型"。 
          l 结构数据模型着重于描述数据的组织结构，很少考虑用户对数据的理解，它们最关心的是提供一致的、高效的数据库存储和检索所需要的物理结构和信息结构。 
          l 结构数据模型如层次、网状和关系数据模型等。<br>
          <br>
          　<b>第6题</b><br>
          　在数据库中定义满足下面两个条件的基本层次联系的集合为层次数据模型： -有且只有一个结点没有双亲结点，这个结点称为根结点 -根以外的其他结点有且只有一个双亲结点。<br>
          <br>
          　<b>第7题</b><br>
          　在数据库中定义满足下面两个条件的基本层次联系的集合为网状模型： -允许一个以上的结点没有双亲结点 -至少有一个结点可以有多于一个的双亲结点。<br>
          <br>
          　<b>第8题</b><br>
          　关系数据模型是由若干关系模式组成的集合。 每个关系模式对应一个关系，每个关系从结构上看实际上是一张二维表格，表中的每行表示一个实体对象，表的每列对应一个实体属性，实体之间的联系用外部关键字来表示，这样的一张表称为一个关系。<br>
          <br>
          　<b>第9题</b><br>
          　关系数据模型的特点： (1) 关系模型结构简单：实体和实体之间的联系都用关系表表示。 (2) 直接处理多对多的关系：通过关键字直接建立一个表中的元组与多个表中的元组之间的联系。 
          (3) 关系模型是面向记录集合的：一次可处理一个元组的集合, 即对一个关系表的操作可产生一张新的二维表。 (4) 关系模型有坚实的理论基础：其理论基础是集合论与关系代数，一个关系是数学意义上的一个集合（无序、无重值）。<br>
          <br>
          　<b>第10题</b><br>
          　基于面向对象的基本概念，面向对象数据模型的核心概念是： (1) 任何现实世界中的实体都被模型化成一个对象,并赋予一个唯一的标识符。 (2) 
          每一个对象都把一个状态和一个行为封装在一起，其中对象的状态是该对象属性值的集合，而对象的行为是在对象状态上操作的方法(程序代码)的集合。对象的属性值也可以是对象。而且，对象的属性值可以取单一值，也可以取一组值。 
          (3) 共享同一属性值集合和方法集合的所有对象组织在一起,构成一个类(class)，只属于一个类的任何对象作为该类的一个实例。 (4) 
          类中属性的定义域(类型)可以是任意的类。定义域类可以是基本类，如整数、字符串、布尔量，也可以是具有自己的属性和方法集的一般类。 (5) 
          所有的类组成一个有根的有向无环图或称类分层结构。一个类从其直接或间接祖先(超类)那里继承所有的属性和方法，称为超类的子类。在语义上，超类/子类关系反映概括／特化关系。类的继承性必须是动态可扩充的，即一个新的子类可由一个或多个现存的类导出。 
          (6) 封装在一个对象中的状态和行为只能通过显式的消息传送从外部存取和调用。同时，必须支持消息和其对应方法在运行时的联编。<br>
          <br>
          　<b>第11题</b><br>
          　(1)E-R模型图如下：<br>
          <img src="../../../img/text/ch02/ex1.gif" width="384" height="173"> 
          <br>
          　(2)E-R模型图如下： <br>
          <img src="../../../img/text/ch02/ex2.gif" width="391" height="263"> 
          <br>
          　(3)E-R模型图如下：<br>
          <img src="../../../img/text/ch02/ex1.gif" width="384" height="173"> 
          <br>
          　(4)E-R模型图如下：<br>
          <img src="../../../img/text/ch02/ex4.gif" width="268" height="262"><br>
        </p>
        
      </td>
  </tr>
</table>
  </center>

</body>
</html>

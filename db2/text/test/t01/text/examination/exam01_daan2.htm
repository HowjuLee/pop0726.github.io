<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">

<link rel="stylesheet" href="../../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" background="../../../../../img/pop/bg.gif">
<center><table width="95%" border="0" cellspacing="0" cellpadding="0">
  <tr>
      <td class=pt9-black> 
        <p><b>问答题答案</b> <br>
          <br>
          <b>问答第1题</b><br>
          (1) 数据库具有面向各种应用的数据组织和结构。<br>
          (2) 具有高度的数据独立性。<br>
          (3) 实现数据的高度共享并保证数据的完整性和安全性 <br>
          <br>
          <b>问答第2题</b><br>
          外模式：外模式又称用户模式，在传统的数据库系统中称为子模式。外模式是概念模式的子集，它按用户视图定义数据，也可以从概念模式中导出。<br>
          概念模式：概念模式又称逻辑模式，是全局数据逻辑关系的抽象和描述。它独立于数据的物理存储结构，是所有用户的共同的逻辑数据视图。<br>
          内模式：内模式又称物理模式，用以描述数据在数据库中的存储和存取方式。 <br>
          <br>
          <b>问答第3题</b><br>
          (1) 预提交阶段<br>
          (2) 决策后阶段。<br>
          <br>
          <b>问答第4题</b><br>
          (1) 一个数据单元在第一次被访问之前必须对它加锁。<br>
          (2) 如果一个数据单元已经有了一个共享锁，只能对它再附加共享锁。假如它有了一个独占锁，不能再对它附加任何锁。<br>
          (3) 由一个进程设置的所有锁，只能在该进程结束时释放，而且要一起释放。 <br>
          <br>
          <b>问答第5题</b><br>
          事务故障、系统故障和存储介质故障。<br>
          <br>
          <b>问答第6题</b><br>
          (1) 事务的原子性指的是，事务中包含的程序作为数据库的逻辑工作单位，它所做的对数据修改操作要么全部执行，要么完全不执行，这种特性称为原子性。<br>
          (2) 事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态，这种特性称为事务的一致性。<br>
          (3) 分离性指并发的事务是相互隔离的。即一个事务内部的操作及正在操作的数据必须封锁起来，不被其它企图进行修改的事务看到。<br>
          (4) 持久性意味着当系统或介质发生故障时，确保已提交事务的更新不能丢失。即一旦一个事务提交，DBMS保证它对数据库中数据的改变应该是永久性的，耐得住任何系统故障。<br>
          <br>
          <b>问答第7题</b><br>
          (1) 数据库模式定义<br>
          (2) 数据操纵 <br>
          (3) 数据库系统控制<br>
          (4) 数据库维护和服务 <br>
          <br>
          <b>问答第8题</b><br>
          (1) 候选码：在关系模式R(U)中，K为R的属性或者属性组，若满足K→U，则K为关系模式R的候选码。<br>
          (2) 主码: 若关系模式R(U)中有多个候选码，则选定其中的一个候选码作为主码，或称主关键字。 <br>
          <br>
          <b>问答第9题</b><br>
          数据仓库是支持决策过程的、面向主题的、集成的、随时间变化的、持久的数据集合。<br>
          <br>
          <b>问答第10题</b><br>
          数据定义、数据操纵、数据控制<br>
          <br>
          <b>问答第11题</b><br>
          独立的对象标识OID具有下面特性：<br>
          (1) 每个对象在产生时得到一个唯一的标识符。<br>
          (2) 该标识符在对象的整个生命周期内是固定不变的，而且是唯一的。<br>
          (3) 一个被删除对象的标识符不可再用。 <br>
          (4) 对象标识符独立于对象的存储位置和对象的状态。 <br>
          (5) 用户定义的关键字仍然可以存在, 而且可以提供一些函数实现把一个对象的标识符转换成一个相关的用户定义的关键字, 或者相反方向的转换。 
          <br>
          <br>
          <b>问答第12题</b><br>
          R最高属于1NF范式。 理由：关系模式R(U,F)的主码是(B,C)，属性之间存在部分函数依赖C->A，同时存在传递函数依赖BC->D, 
          D->E。 <br>
          符合第三范式的关系模式集合：<br>
          R1(C,A)，主码：C <br>
          R2(BC ,D)，主码：BC <br>
          R3(D,E)，主码：D <br>
          <br>
          <b>问答第13题</b><br>
          并(R<img src="t1.gif" width="11" height="12" align="middle">S) 运算结果、 
          交(R<img src="t2.gif" width="10" height="10" align="middle">S) 运算结果、 
          差(R-S) 运算结果</p>
        <p><img src="t3.gif" width="225" height="170"></p>
        <p><br>
          <br>
          <b>问答第14题</b><br>
          (1)关系模式（表格结构）如下，红色为主码： <br>
          　零件表（<font color="#FF0000">零件号</font>，零件名，………）。<br>
          　供应商表（<font color="#FF0000">供应商号</font>，供应商名称，供应商地址……）<br>
          　项目表（<font color="#FF0000">项目号</font>，项目名，………）<br>
          　项目供应零件表（<font color="#FF0000">供应商号，零件号，项目号</font>，供应数量）<br>
          　仓库表（<font color="#FF0000">仓库号</font>，仓库名，………） <br>
          　库存表（<font color="#FF0000">仓库号，零件号</font>，库存量，……..）<br>
          (2) SQL查询语句如下：<br>
          　SELECT 供应商名称，COUNT(*) FROM 供应商表 S，项目供应零件表M，零件表 P，项目表 O <br>
          　WHERE S.供应商号 = M.供应商号 AND M.零件号 = P.零件号 AND M.项目号= O.项目号 GROUP BY 供应商名称 
          HAVING COUNT(*) > 10 <br>
        </p>
      </td>
  </tr>
</table>
  </center>

</body>
</html>

<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" background="../../../img/index/r4_c3.gif" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td width="12">&nbsp;</td>
    <td width="1002">&nbsp;</td>
    <td width="5">&nbsp;</td>
  </tr>
  <tr> 
    <td width="12">　</td>
    <td width="1002"> 
      <h3><span class="biaoti_1">5.1 关系数据库设计概述<br>
        5.1.1 数据库设计的基本问题 <br>
        </span><span class="pt9-black">　　数据库设计的基本问题是针对现实世界的一个具体问题，如何构造一个适合于该具体问题的数据库模式。对于关系数据应用系统来说，就是构造一些关系模式，每个关系模式由若干个属性组成，并确定这些关系模式的属性和数据完整性约束。这就是数据库的逻辑设计问题。<br>
        　　关系数据库设计需要理论作为指导，由E.F.Codd在1977年提出关系数据库规范化理论以来，关系数据库规范化理论又有了很大的发展，关系数据库的规范化理论就是关系数据库设计的理论化指南。关系数据库的规范化理论研究的是关系模式中属性之间的相互依赖关系，以及对关系模式性能的影响，一个&quot;好&quot;的关系模式应当具备的性能，以及如何设计一个好的关系模式的设计方法。<br>
        　　关系模式的规范化理论给我们提供了判断关系模式优劣的理论标准，帮助我们预测关系模式中可能出现的问题，提供了自动产生各种模式的算法，是数据库设计人员有效的工具，也使数据库设计工作有了严格的理论基础。<br>
        　　规范化理论虽然最初是针对关系模式的设计而提出的，但对于其他数据模型的设计也有重要的指导意义。为了更好的理解关系模式的规范化设计过程，我们先就某些相关的基本概念和术语作一些介绍。<br>
        　　1．关系模式的形式化定义 <br>
        　　2．数据依赖<br>
        　　3．函数依赖<br>
        　　4．属性间的函数依赖。</span></h3>
    </td>
    <td width="5">&nbsp;</td>
  </tr>
</table>
</body>
</html>

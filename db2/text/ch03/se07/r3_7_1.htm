<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --><span class="pt9-black">　　</span>从计算机软件系统的构成看，数据库管理系统是介于用户和操作系统之间的一组软件。它实现了对共享数据的有效组织，管理和提取。<br>
      　　由于数据库管理系统的硬件、软件不同，数据库管理系统的功能和性能会有所差别，既有FoxPro，Access这样的小型数据库管理系统，也有Oracle，DB2，SQL 
      Server这样的大型数据库管理系统。但不管有多大差别，数据库管理系统都应该满足以下目标：<br>
      　1．用户界面友好<br>
      　　对于数据库管理系统来说，用户界面的友好程度会对其使用起到至关重要的作用，数据库管理系统的用户接口应面向多种用户，面向多种应用。一般来说，友好的用户界面应当具有可靠性、易用性、立即反馈和多样性等特性。<br>
      　　<font color="#5a5aad">可靠性：指的是界面要具有一定容错能力，能够即时正确给出运行状态指示和出错信息，并且能引导用户改正错误。<br>
      　　易用性：尽量减少用户负担，操作方式简单，容易记忆，输入/输出容易理解。<br>
      　　立即反馈：对用户的应用请求都应在用户心理许可的时间范围内给出响应，即使不能够得出结果，也应该给出一定的响应。<br>
      　　多样性：根据用户背景不同，提供多种接口，适应不同层次用户需要。<br>
      　　对于初级用户或者初学者，提供以机器主导的会话形式，DBMS给出较多的提示信息，对于熟练用户采用以人为主导的方式，无需过多提示，可以提高处理效率。对于应用程序员应该提供开发接口，功能要全面，方式要灵活，满足应用开发需要。目前，许多数据库管理系统提供交互式SQL，嵌入式SQL，表格语言接口，命令式语言接口和函数调用接口，方便用户使用。</font><br>
      　2．功能完备<br>
      　　数据库管理系统的核心功能随系统大小而异，大型数据库管理系统功能完全，小型数据库管理系统功能虽然少一些，但是基本功能都有。<br>
      　　<font color="#5a5aad">数据库管理系统主要功能包括数据库定义，数据库数据存取，数据库运行管理，数据组织和存储管理，数据库建立和维护等。</font><br>
      　3．效率高<br>
      　　数据库管理系统应该有高的系统效率和高的用户生产率。 <br>
      　　<font color="#5a5aad">系统效率包括两个方面，一方面是计算机系统内部资源利用率，二是数据库管理系统本身的运行效率，根据系统目标确定恰当的体系结构、数据结构和算法，保证数据库管理系统运行的高效率。<br>
      　　另一各方面是提高用户生产率。指的是用户设计和开发应用程序的效率。关系数据库系统提供了严格而简明的数据模型，非过程化的语言，使基于关系数据库的应用程序设计得到了很大提高。关系数据库管理系统还提供了一个良好的开发环境，进一步提高了应用开发的效率和质量。</font><br>
      　4．结构清晰<br>
      　　<font color="#5a5aad">数据库管理系统是一个复杂的系统软件，涉及面广，包括向上与用户的接口，向下与操作系统、软件硬件资源的接口。因此，应该使数据库管理系统内部结构清晰，层次分明，便于自身的设计、开发和维护，以及支持外层开发环境的构造。<br>
      </font>　5．开放型<br>
      　　<font color="#5a5aad">开放型指的是符合标准和规范。遵循标准可以支持异构数据库管理系统的互操作性和可扩展性。例如，使用标准SQL语言，支持标准的开放数据库互连接口ODBC等。</font><span class="biaoti_2"><br>
      </span><!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

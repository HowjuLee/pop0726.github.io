<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" -->
      <p>　<span class="biaoti_1">3.1.1 关系模型概述</span><br>
        　　在前一章中讨论过的数据模型分为两类，一类是语义数据模型，另外一类是结构数据模型。关系模型作为结构数据模型的一种，在今天的数据库实现中起到很大的作用。因为它只有单一的数据结构：关系，所谓关系，就是通常所说的二维表，表和关系在关系数据库系统中是同义词。现实世界中的实体和实体间的各种联系均以关系的形式来表示，并以二维表的形式排列数据，可以用简单的程序，针对关系中存储的数据完成强大的操作。<br>
        　　关系模型给出了关系操作的能力，常用的关系操作包括选择（Select）、投影（Project）、联结（Join）、除（Divide）、并（Union）、交（Intersection）、差（Difference）、查询（Query）等操作,以及插入（Insert）、删除（Delete）、修改（Update）操作两大部分。其中查询（Query）的表达能力是最主要的部分。<br>
        　　关系操作能力通常用代数方式和逻辑方式表示，分别称为关系代数和关系演算。关系代数是以对关系的运算表达查询要求的方式，关系演算是用谓词表达查询要求的方式。关系演算又可分为元组关系演算和域关系演算。这些抽象的查询语言和具体的数据库管理系统中的实际语言并不一样，实际的查询语言除了提供查询功能以外,还有许多附加功能，包括函数，关系赋值，算术运算等等。<br>
        　　SQL语言是一种介于关系代数和关系演算之间的语言。它不仅有丰富的查询功能，而且具有数据定义、数据操纵和数据控制功能，是关系数据库的标准语言。 
        <br>
      </p>
      <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

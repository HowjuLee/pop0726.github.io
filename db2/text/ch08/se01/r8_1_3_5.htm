<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --> 　<span class="biaoti_1">5. 模式演变的规则</span><br>
      <br>
      　　在静止状态下的一个类格必须保持所有的不变性。对于模式的某些改变，存在多种方法可保证不变性。例如，假如有一个名字在从超级类继承下来的实例变量中有冲突，根据全继承的不变性要求，至少要继承实例变量中的一个；但不能说是哪一个。为了保证得到一种优化的选择，有四个基本的规则：<br>
      <b><br>
      　　(1) 默认的冲突解决规则。</b>允许选择单继承，即用一种先事确定的方法满足不同名字和不同特性的不变性。<br>
      　<br>
      　　<b>(2) 特性传播规则。</b>一旦在某个类中定义了或者继承了实例变量，该实例变量的特性就可以用各种方法进行修改，如改变它的名字、值域或默认值等。进而，属于某个类的方法也可以修改它的名字和代码。特性传播规则对实例变量和方法特性的所有修改提供了保障。 
      <br>
      <br>
      　　<b>(3) DAG操纵规则。</b>控制从类格中增加或删除结点和边。当对一个类格增加或删除边和结点时，这些规则确保避免错误的改变。<br>
      <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

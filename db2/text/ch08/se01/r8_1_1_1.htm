<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --> 　<span class="biaoti_1">2．新的数据库应用领域</span><br>
      <br>
      　　近年来，数据库系统广泛应用于各种新领域。这些新领域包括计算机辅助设计和制造CAD/CAM，计算机辅助软件工程CASE，办公自动化信息系统OIS，以及多媒体等领域。它们对数据库系统的功能也提出了新要求。主要包括：<br>
      <br>
      　　(1) 能描述复杂的数据类型和结构。如工程设计中的图形数据，多媒体信息中的图象数据、空间数据、音频数据、视频数据，以及超文本数据、时态数据、图片等数据类型。<br>
      <br>
      　　(2) 允许用户定义任意复杂的数据结构，反映各种对象的语义和对象之间的复杂关系。例如，在机械设计中，要定义机械装配数据，如夹具、工具、固定物之间的关系，还有机械性能数据，材料清单、设计规则，有限元分析数据等。这些数据之间的内部关系是既复杂又严密的统一体。 
      <br>
      <br>
      　　(3) 提供版本管理机制。工程设计和软件开发过程中，一个设计对象可同时在数据库中保留多个版本，如不同的可选方案版、同一个方案的不同修改版等，版本数据可帮助存储设计过程演变的历史，以及提高并发控制能力，支持返复试探性和交互性的设计过程。<br>
      <br>
      　　(4) 允许动态地定义和修改数据库模式，即在不改变应用程序的情况下，改变对象类的定义，继承结构、属性和方法的说明。因为设计过程随着工程的进展会不断进行演变。<br>
      <br>
      　　(5) 有灵活的事务管理，支持工程设计的长事务、分布式事务和多用户协调设计。 <br>
      <br>
      　　(6) 提供有效的存储管理机制和交互式的图形开发环境，以便快速访问和提取数据，相关的数据有效地组织存储在内外存中。<br>
      　　<br>
      　　<font color="5a5aad">数据库要处理的数据是非常庞大的。例如，一个工程项目的零件图、装配图多至几千甚至上万字节，这么大的数据量，还要高速的响应时间，因为CAD/CAM应用系统都是在实时的或交互方式下工作的。<br>
      <br>
      　　数据库要支持返复试探性和交互性的设计过程。而且，这种设计过程是不断摸索的过程，有些数据结构是在设计过程中动态确定的。<br>
      <br>
      　　另一方面，CAD/CAM的各种不同应用系统在物理上是分开的，相对独立地工作。所以使用多级数据库组织结构，把不同用途的数据库在物理上分开存储，既支持返复试验的设计手段，便于设计者动态地定义数据结构，同时也减少大型数据库中的并发操作流程，提高响应时间。 
      </font><!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --> 
      <p>　<span class="biaoti_1">2. 面向对象数据库模式的演变</span><br>
        <br>
        　　面向对象数据库模式是若干类定义的集合。面向对象数据库模式的改变就是改变类的定义，以及改变类的继承结构图。在工程设计应用中，随着设计过程的发展，需要动态地改变数据模式，面向对象数据库系统提供的模式改变通常包括：<br>
        <br>
        　　<b>（1） 改变有关类的定义</b><br>
        　　● 增加一个新实例变量或增加一个新方法<br>
        　　● 删除一个实例变量或删除一个方法，<br>
        　　● 改变一个实例变量的定义域或类型，<br>
        　　● 改变一个实例变量或方法的名字<br>
        　　● 改变一个方法的编码实现。<br>
        　　● 改变一个属性(继承具有相同名字的另一个属性)的继承性(双亲)。<br>
        　　● 改变一个方法(继承具有相同名字的另一个方法)的继承性(双亲)。<br>
        <br>
        　　<b>（2）改变类层次结构</b><br>
        　　● 使一个类S是一个类C的超类；<br>
        　　● 从类C的超级类表中删除一个超类S。<br>
        <br>
        　　<b>（3）增加和删除类结点</b><br>
        　　● 增加一个新的类；<font color="#CC0000"><br>
        </font>　　● 删除一个现存的类；<font color="#CC0000"><br>
        </font>　　● 改变一个类的名字。<font color="#CC0000"> </font> </p>
      <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/pop/bg.gif">
<center>
  <table width="95%" border="0" cellspacing="0" cellpadding="0">
    <tr>
      <td> 
        <p class="pt9-black"><b>　问答题答案</b></p>
        <p class="pt9-black">　<b>第1题</b><br>
          　答案略。<br>
          <br>
          　<b>第2题</b><br>
          　・事务(transaction)是用户定义的一个数据库操作序列，这些操作要么全做，要么全不做，是一个不可分割的工作单元。事务是数据库中的最基本的工作单元，也是数据库恢复和并发控制的基本单元。 
          <br>
          　・事务具有四个特性：原子性(Atomicity)、一致性(Consistency)、分离性(Isolation)、持久性(Durability)。这四个特性也简称为ACID特性。<br>
          <br>
          　<b>第3题</b><br>
          　・事务如果不加控制地并发执行，会产生下列三个问题：丢失更新 (lost update), 读脏数据 (dirty read), 读值不可复现 
          (unrepeatable read)。<br>
          <br>
          　<b>第4题</b><br>
          　・共享锁(S锁，Shared lock) ：只用于并发的只读数据操作。任何试图修改某数据的事务，如果该数据上有共享锁，那么该事务就会被阻塞，直到所有的共享锁被释放。<br>
          　・独占锁(X锁，eXclusive lock) ：任何写操作均要使用独占锁。独占锁被授予已经准备好进行数据修改的事务，确保其它事务不能访问该独占锁锁定的数据。 
          <br>
          　・所谓"两段式协议"名字的来源出于如下事实: <br>
          　　．一个进程分为两个阶段，在第一个阶段，该进程放置的锁的数目稳定的增长，全是加锁； <br>
          　　．第二个阶段只能释放锁，而且是一起释放。 <br>
          　・两段式协议的内容： <br>
          　(1) 一个数据单元在第一次被访问之前必须对它加锁。 <br>
          　(2) 如果一个数据单元已经有了一个共享锁，只能对它再附加共享锁。假如它有了一个独占锁，不能再对它附加任何锁。 <br>
          　(3) 由一个进程设置的所有锁，只能在该进程结束时释放，而且要一起释放。 <br>
          <br>
          <b>　第5题</b><br>
          　数据库系统的主要故障有以下三种: <br>
          　(1) 事务故障 <br>
          　(2) 系统故障 <br>
          　(3) 存储介质故障 <br>
          <br>
          <b>　第6题</b><br>
          　DBMS采用相应策略和措施进行数据库恢复: <br>
          　(1)事务提交 <br>
          　(2)数据库转储 <br>
          　(3)日志和日志文件 <br>
          　(4)先写日志的原则 <br>
          　(5)设置检查点 <br>
          <br>
          　<b>第7题</b><br>
          　・死锁：一个事务如果申请锁而未获准，则须等待其他事务释放锁。这就形成了事务间的等待关系。当事务中出现循环等待时，如果不加干预，则会一直等待下去，即出现死锁现象。 
          <br>
          　・死锁发生的条件：<br>
          　①互斥条件：事务请求对资源的独占控制。<br>
          　②等待条件：事务已持有一定资源，又去申请并等待其它资源。<br>
          　③非抢占条件：直到资源被持有它的事务释放之前，不可能将该资源强制从持有它的事务夺去。<br>
          　④循环等待条件：存在事务相互等待的等待圈。 <br>
          　・．预防死锁的方法主要有： -(1) 一次封锁法 -(2) 顺序封锁法。<br>
          　　．死锁的检测方法主要有： 超时法 等待图法。 <br>
          <br>
          　<b>第8题</b><br>
          　事务提交是指在一个事务执行期间，该事务对数据库的所有改变都做成临时的，而且只能在事务正常结束时才做成永久的，即提交到数据库，此时的动作称为事务提交。<br>
          <br>
          <b>　第9题</b><br>
          　检查点（Checkpoint）：指系统定期或者不定期建立检查点，当检查点发生时，系统强制把系统内存缓冲中的数据写入数据库硬盘，同时在日志文件中增加检查点记录，记录当时正在执行的事务信息。<br>
          　使用检查点可以改善恢复的效率。因为利用日志文件恢复数据库时，恢复子系统必须顺序搜索日志，确定哪些事务需要REDO，哪些事务需要UNDO，浪费了大量时间。利用使用检查点记录，可以从最近的检查点开始搜索日志文件确定需要REDO和UNDO的事务。 
          <br>
          <br>
          　<b>第10题</b><br>
          　意向锁是在加锁结点的祖先上用作"意向"或"标记"。意味着锁是加在该结点的下属结点上。设置意向锁是避免对加锁结点祖先进行显式或隐式加锁请求时，减少了结点和它的祖先之间加锁的不相容性。<br>
          <br>
          　<b>第11题</b><br>
          　写入日志是记录对数据库将要发生何种修改，而写入数据库内容表示数据库实际上已经发生了何种修改。如果先写数据库，则有可能在写的中途发生系统崩溃，导致内存缓冲区内容丢失，而外存数据库处于不一致状态，由于日志缓冲区内容已破坏，导致无法对数据库进行恢复。<br>
          <br>
          <b>　第12题</b><br>
          　针对不同数据库系统的实际情况，SQL Server提出了3种主要的备份策略，分别是:<br>
          　-(1) 只备份数据库；<br>
          　-(2) 备份数据库和事务日志；<br>
          　-(3) 增量备份。 <br>
          <br>
          <b>　第13题</b><br>
          　数据库的安全性是指保护数据库以防止不合法的使用所造成的数据泄露、更改或破坏。数据库的安全性是为了防止对数据库的恶意破坏和非法存取。 <br>
          　DBMS的安全措施通常分为两级： <br>
          　．授权登录：通过控制服务器登录帐号和密码，判断用户能否获得对数据库的访问权。 <br>
          　．授权访问：是指把对数据库对象的访问分为若干权限，对不同的用户授予不同的权限。 <br>
          <b><br>
          　第14题</b><br>
          　数据库的完整性是指数据的正确性和相容性。数据库的完整性是为了防止数据库中存在不符合语义的数据，防止错误信息的输入和输出。 <br>
          　DBMS的完整性措施通常有： <br>
          　■定义完整性约束条件 <br>
          　■定义触发器 <br>
          　■编程实现 </p>
        </td>
  </tr>
</table>
  </center>

</body>
</html>

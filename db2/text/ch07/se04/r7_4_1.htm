<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" --> ��数据库恢复操作是指在系统出现故障时，由系统管理员或数据库所有者利用数据库备份和日志备份恢复系统或用户数据库。<br>
      ��数据库恢复的目标是使之恢复到故障发生之前数据库最后的完整性状态。<br>
      ��数据库的完整性是指数据的正确性和相容性，数据库的数据满足实体完整性、域完整性和引用完整性要求。<span class="explaination">信息是一个企业的宝贵资源，信息的破坏和丢失不但会给用户带来麻烦，还会产生不适当的行动，最坏情况会使企业破产。另一方面，有时丢失某些信息又是不可避免的。例如，由于电源故障、硬件失效、软件错误或操作失误可使计算机系统瘫痪。火、水或物理的偶然事件也可能破坏存储介质。一个数据库系统必须采取预先措施应付上述各种不正常情况。所有措施都是为了把数据库恢复到发生故障以前的数据库状态，通常把在正常操作期间采取的预先措施作为DBMS恢复数据库的子系统。其目标是给应用世界提供一种不可侵犯的、持久的数据库效果。<br>
      ��在理想的情况下，DBMS可以把数据库进行重构，使之达到发生不正常情况以前的状态。在有些情况下，如电源故障，必然会永久地丢失某些必要的信息，因此数据库恢复的目标是: 
      重构数据库，使之恢复到故障发生之前最后的完整性状态。<br>
      ��事务不仅是&quot;完整性的单位&quot;，而且也是数据库&quot;恢复的单位&quot;。因此，数据库的恢复，要求DBMS 必须恢复到故障发生之前已完成的所有事务的效果，同时要消除在故障发生时正在执行中的所有事务的痕迹。</span><br>
      ��数据库恢复子系统是数据库管理系统中一个重要组成部分，数据库系统采用的恢复技术是否行之有效，不仅对系统的可靠程度起着决定作用，而且对系统的运行效率有很大影响，是衡量系统性能优劣的重要指标。<br>
      ��<span class="explaination">下面谈到的数据库系统的故障是指DBMS本身在运行过程中产生的故障，没有包括网络故障和数据传输过程中的通讯故障。</span><br>
      <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

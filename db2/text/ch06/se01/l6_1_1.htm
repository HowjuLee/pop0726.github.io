<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" background="../../../img/index/r4_c3.gif" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td width="12">&nbsp;</td>
    <td width="1002">&nbsp;</td>
    <td width="5">&nbsp;</td>
  </tr>
  <tr> 
    <td width="12">　</td>
    <td> <span class="biaoti_1">6.1 数据库应用程序的体系结构<br>
      </span><span class="pt9-black">　　数据库应用程序开发环境与工具的发展已经经历了从专用的开发工具到通用的开发平台与工具的发展，支持的工程应用也从单一数据库到分布式多数据库应用的过程。本章讲解的主要内容是围绕微软ODBC技术的数据库开发环境及其工具：在介绍了微软的ODBC技术的原理和实现方法后，着重讲解基于ODBC 
      API的面向对象的数据库构件原理和方法，包括MFC对象、DAO和RDO对象、ADO对象等。</span><span class="biaoti_1"><br>
      6.1.1 数据库应用程序体系结构的发展<span class="biaoti_2"><br>
      </span></span><span class="pt9-black">　　开发一个好的数据库应用系统，软件开发者第一要选择好的数据库平台及支持的开发环境，第二做出合适的软件设计和数据库设计，包括选择算法和数据结构；第三还要选择合适的编程语言和工具，开发工具和接口的正确选择能极大地改善整个系统的性能和开发速度；第四要选择好的应用模型结构。<br>
      　　<font color="#5a5aad">20世纪60年代刚出现数据库时，数据库系统的应用范围主要局限于为同一地点的不同应用程序提供永久、共享的数据存储和数据管理。因此只需集中式的数据库体系结构。70年代数据库的应用更广泛，如民航订票等。需要在异地有数据处理的功能，而对数据是否集中存放则不太关心。在这种情况下出现了客户/服务器结构的数据库。80年代，应用领域需要处理的数据量越来越大，数据集中存放至少在效率上无法满足要求，因此出现数据分布存放的分布式数据库。进入90年代，数据库的自治性越来越被强调，因为应用领域向复杂化、多元化方向发展。分布式数据库和异构数据库互连成为满足当前应用领域要求的主要趋势。</font><br>
      　　随着数据库系统体系结构的发展，相应的数据库应用系统的体系结构由两层体系结构发展到三层或多层结构，应用开发工具也由专用发展到通用。<br>
      　　1．专用数据库开发工具：<br>
      　　2．通用数据库应用开发接口：<br>
      　　3．分布式对象处理技术<br>
      　　4．应用模型的选择</span><span class="biaoti_1"><span class="biaoti_2"><br>
      </span></span></td>
    <td width="5">&nbsp;</td>
  </tr>
</table>
</body>
</html>

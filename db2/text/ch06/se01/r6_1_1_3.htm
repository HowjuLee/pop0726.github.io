<html><!-- #BeginTemplate "/Templates/r.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Untitled Document</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css"><STYLE TYPE="text/css">
<!--
BODY {background-image:  url(../../../img/text/bg.jpg);
background-position: bottom;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../img/text/bg.jpg" > 

<table width="100%" border="0" cellspacing="0" cellpadding="0" class="pt9-black">
  <tr> 
    <td width="10">&nbsp;</td>
    <td>&nbsp;</td>
    <td width="10">&nbsp;</td>
  </tr>
  <tr>
    <td width="10">&nbsp;</td>
    <td> <!-- #BeginEditable "1" -->　<span class="biaoti_1">3. 分布式对象处理技术</span>　<br>
      　　传统模式下，对象服务主要集中在客户端。对象管理一般实现为一个功能模块，通过专用的接口，接收应用系统发出的请求，并将其转化为SQL语句，然后通过网络访问数据库，得到的结果再转化为对象返回给应用系统。<br>
      　　分布式对象方式下，对象管理服务被实现为多个对象服务；应用系统的请求，由客户端的对象请求代理接收，并传送给对象服务；对象服务和代理之间，通过公共的、标准化的&quot;对象服务/请求总线&quot;通信，实现对象服务定位和数据传递。<br>
      　　<font color="#5a5aad">传统模式与分布式对象技术，在体系结构方面的差别如图6-3所示。图6-3的左边的图表示传统模式结构，右边的图是分布式对象结构。<br>
      <br>
      <span class="pt9-black"> 　　</span><span class="tubiaoti">图6-3 传统模式与分布式对象管理 
      </span><br>
      </font> 
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td align="center"><font color="#5a5aad"><object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="../../../../../../../../download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0" width="400" height="320">
              <param name=movie value="../../../swf/ch6/6-3.swf">
              <param name=quality value=high>
              <param name="wmode" value="transparent">
              <embed src="../../../swf/ch6/6-3.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="400" height="320" wmode="transparent">
              </embed> 
            </object> </font></td>
        </tr>
      </table>
      <font color="#5a5aad"><br>
      　　分布式对象技术与传统模式相比，好处很多：<br>
      　(1) 设计、实现、运行和软件工程的全过程都可采用面向对象的技术；<br>
      　(2) 将一个功能模块分解多个独立的对象，系统升级时，不需更换所有的组件；<br>
      　(3) 一个软件系统的各种功能，由多个运行时的、分布在网络上的对象来完成，可在网络上合理地分配负载，提高运行效率；<br>
      　(4) 提高了系统的扩展性：用户可以根据需要安装一部分组件；<br>
      　(5) 对象请求与实现的分离，提供了软件间协作的技术手段：不同厂商实现的对象，只要支持标准的接口，即可与其它对象协作；<br>
      　(6) 提供了跨平台集成的可能：对象间的通信由&quot;软件总�&quot;实现，与具体系统无关。<br>
      </font> <!-- #EndEditable --></td>
    <td width="10">&nbsp;</td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>

<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../images/tanchu/di.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top" align="center"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td class="text"><span class="section"><br>
            演化模型 【Evolutional model】</span><br>
            　　演化模型从需求分析开始。软件开发人员与用户一起定义待开发软件系统的总目标，定义需求，确定软件的工作范围。然后快速设计软件中对使用者可见部分的表示，进而建造原型，再让用户或客户评估原型，根据评估结果，修改和细化待开发软件系统的需求，使之满足用户的需求。这个过程是一个迭代的过程。 
            <p><span class="section">验收测试 【Acceptance testing】</span><br>
              　　验收测试是以用户为主的测试。软件开发人员和QA（质量保证）人员也应参加。由用户参加设计测试用例，使用用户界面输入测试数据，并分析测试的输出结果。一般使用生产中的实际数据进行测试。在测试过程中，除了考虑软件的功能和性能外，还应对软件的可移植性、兼容性、可维护性、错误的恢复功能等进行确认。<br>
              <br>
              <span class="section">验证 【Verification】</span><br>
              　　验证是为了证明在软件生存期各个阶段，以及阶段间的逻辑协调性、完备性和正确性。</p>
            <p><span class="section">因果图 【Cause-effect graphing】</span><br>
              　　使用因果图是基于软件的规格说明生成测试用例的方法。该方法最终生成的就是判定表。它适合于检查程序输入条件的各种组合情况。 </p>
            <p><span class="section">原型 【Prototyping】</span><br>
              　　通常，原型是指模拟某种产品的原始模型。在软件开发中，原型是软件的一个早期可运行的版本，它反映最终系统的部分重要特性。如果在获得一组基本需求说明后，通过快速分析构造出一个小型的软件系统，满足用户的基本要求。使得用户可在试用原型系统的过程中得到亲身感受和受到启发，做出反应和评价。然后开发者根据用户的意见对原型加以改进。随着不断试验、纠错、使用、评价和修改，获得新的原型版本，如此周而复始，逐步减少分析和通信中的误解，弥补不足之处，进一步确定各种需求细节，适应需求的变更，从而提高了最终产品的质量。<br>
              　　</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>无标题文档</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../images/tanchu/di.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="367">
  <tr>
    <td height="319" valign="top" align="center"> 
      <table width="92%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td class="text"> 
            <p class="text"><span class="section"><br>
              基本路径测试 【Basis path testing】</span><br>
              　　基本路径测试是在程序控制流图的基础上，通过分析控制构造的环路复杂性，导出基本可执行路径集合，从而设计测试用例的方法。设计出的测试用例要保证在测试中，程序的每一个可执行语句至少要执行一次。</p>
            <p><span class="section">基线 【baseline】</span><br>
              　　基线是软件生存期中各开发阶段末尾的特定点，又称里程碑。由正式的技术评审而得到的软件配置项协议和软件配置的正式文本才能成为基线。它的作用是把各阶段工作的划分更加明确化，使本来连续的工作在这些点上断开，以便于检验和肯定阶段成果。例如，明确规定不允许跨越里程碑修改另一阶段的文档。</p>
            <p><span class="section">集成测试 【Integration testing】</span><br>
              　　集成测试也叫做组装测试或联合测试。通常，在单元测试的基础上，需要将所有模块按照设计要求组装成为系统，发现并排除在模块连接中可能出现的问题，最终构成要求的软件系统。选择什么方式把模块集成起来形成一个可运行的系统，直接影响到模块测试用例的形式、所用测试工具的类型、模块编号的次序和测试的次序、以及生成测试用例的费用和调试的费用。通常，把模块组装成为系统的方式有两种方式：一次性组装方式和增殖式组装方式。</p>
            <p><span class="section">继承 【Inheritance】</span><br>
              　　如果某几个类之间具有共性的东西(信息结构和行为)，抽取出来放在一个一般类中，而将各个类的特有的东西放在特殊类中分别描述，则可建立起特殊类对一般类的继承。各个特殊类可以从一般类中继承共性，这样避免了重复。</p>
            <p><span class="section">脚本 【Scenario】</span><br>
              　　脚本，用于说明发生于系统执行过程中的一个特定&quot;场景&quot;，它是完成系统某个功能的一个事件序列。脚本通常起始于一个系统外部的输入事件，结束于一个系统外部的输出事件，它可以包括发生在这个期间的系统所有的内部事件，也可以只包括那些撞到的或由系统中某些对象生成的事件。脚本可以是系统执行的历史记录，还可以是执行一个拟议中系统的设想实验。<br>
              　　</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            �� 许多软件的维护十分困难， 原因在于这些软件的文档和源程序难于理解， 又难于修改。从原则上讲，软件开发工作应严格按照软件工程的要求，遵循特定的软件标准或规范进行。但实际上往往由于种种原因并不能真正做到。因此，造成软件维护工作量加大，成本上升，修改出错率升高。此外， 
            许多维护要求并不是因为程序中出错而提出的，而是为适应环境变化或需求变化而提出的。由于维护工作面广，维护难度大，稍有不慎，就会在修改中给软件带来新的问题或引入新的差错。所以，为了使得软件能够易于维护，必须考虑使软件具有可维护性。<br>
            <br>
            <span class="zhishidian">7.5.1 软件可维护性的定义 </span><br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

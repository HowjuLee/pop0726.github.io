<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            <span class="part">(1) 浏览</span><br>
            ��利用文本编辑器来浏览软件是最早的理解软件的手段。近年来浏览方法已大有改进，利用超文本，可以在鼠标的帮助下，提供多种视图。如<span class="part">图7.11</span>所示。另一种重要的浏览手段是交叉索引。<br>
            <br>
            <span class="part">(2) 分析与度量</span><br>
            ��这也是理解程序特性(如复杂性)的重要方法。软件度量问题已受到软件界的广泛关注。与再工程相关的技术是程序分片、控制流复杂性度量及耦合性度量等。<br>
            <br>
            <span class="part">(3) 逆向工程与设计恢复</span><br>
            ��这两者有相同的含义，都是从另外的途径取得软件信息。这一方法已被人们普遍采用，但用其确定某些设计信息(如设计说明)仍有风险。目前广泛应用的逆向工程是从源程序产生软件设计的结构图或数据流图，但这又在很大程度上取决于由程序本身能否比较容易得到和分析出有关的信息来。 
            <br>
            ���</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

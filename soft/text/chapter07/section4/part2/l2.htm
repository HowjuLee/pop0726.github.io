<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            通常，可采用自顶向下的方法，在理解程序的基础上．<br>
            <br>
            ��<span class="part">⑴ </span>研究程序的各个模块、模块的接口、及数据库，从全局的观点，提出修改计划。<br>
            <br>
            ��<span class="part">⑵ </span>依次地把要修改的、以及那些受修改影响的模块和数据结构分离出来。为此，要<br>
            ��<span class="part">・</span>识别受修改影响的数据；<br>
            ��<span class="part">・</span> 识别使用这些数据的程序模块；<br>
            ��<span class="part">・</span> 对于上面程序模块，按是产生数据、修改数据、还是删除数据进行分类；<br>
            ��<span class="part">・</span> 识别对这些数据元素的外部控制信息；<br>
            ��<span class="part">・</span> 识别编辑和检查这些数据元素的地方；<br>
            ��<span class="part">・</span> 隔离要修改的部分；<br>
            <br>
            ��<span class="part">⑶</span> 详细地分析要修改的、以及那些受变更影响的模块和数据结构的内部细节，设计修改计划，标明新逻辑及要改动的现有逻辑。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            ��由于这种增殖方式在测试过程中较早地验证了主要的控制和判断点。在一个功能划分合理的程序结构中，判断常出现在较高的层次，较早就能遇到。如果主要控制有问题，尽早发现它能够减少以后的返工。 
            <br>
            ��如果选用按深度方向组装的方式，可以首先实现和验证一个完整的软件功能。例如在利用结构化设计方法建立的程序模块结构中，从主控模块向下有若干不同的分支，每一分支形成一个子系统，分别完成逻辑输入、主要加工和逻辑输出等功能。采用自顶向下组装的方式，先对逻辑输入的分支进行组装和测试，检查和克服潜藏的错误和缺陷，验证其功能的正确性，就为其后对主要加工分支的组装和测试提供了保证。此外，功能可行性较早得到证实，还能够给开发者和用户带来成功的信心。 
            <br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

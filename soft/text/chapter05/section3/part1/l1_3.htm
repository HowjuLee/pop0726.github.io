<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="85">
        <tr> 
          <td class="text"> <br>
            ��<span class="part">(4) 错误处理测试 ：</span>检查模块的错误处理功能是否包含有错误或缺陷。 <br>
            ��若出现下列情况之一，则表明模块的错误处理功能包含有错误或缺陷：出错的描述难以理解；出错的描述不足以对错误定位，不足以确定出错的原因；显示的错误与实际的错误不符； 
            对错误条件的处理不正确；在对错误进行处理之前，错误条件已经引起系统的干预等。 <br>
            <span class="part">��(5) 边界测试 ：</span>要特别注意数据流、控制流中刚好等于、大于或小于确定的比较值时出错的可能性。对这些地方要仔细地选择测试用例，认真加以测试。<br>
            ��如果对模块运行时间有要求的话，还要专门进行关键路径测试，以确定最坏情况下和平均意义下影响模块运行时间的因素。这类信息对进行性能评价是十分有用的。 
            <br>
            ��虽然模块测试通常是由编写程序的人自己完成的，但是项目负责人应当关心测试的结果。所有测试用例和测试结果都是模块开发的重要资料，必须妥善保存。<br>
            ��总之，由于模块测试针对的程序规模较小，便于查错，而且发现错误后容易确定错误所在的位置，便于纠错。同时多个模块可以并行测试。所以做好模块测试将可为后续的测试打下良好的基础。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              系统测试可能需要做以下几方面的测试：<br>
              <br>
              <span class="part">1、可靠性测试（Reliability Testing）</span><br>
              ��如果系统需求说明书中有对可靠性的要求，则需进行可靠性测试。<br>
              <br>
              <span class="part">2、强度测试（Stress Testing）</span><br>
              ��强度测试是要检查在系统运行环境不正常到发生故障的情况下，系统可以运行到何种程度的测试。<br>
              ��强度测试的一个变种就是敏感性测试。在数学算法中经常可以看到，在程序有效数据界限内一个非常小的范围内的一组数据可能引起极端的或不平稳的错误处理出现，或者导致极度的性能下降的情况发生。因此利用敏感性测试以发现在有效输入类中可能引起某种不稳定性或不正常处理的某些数据的组合。<br>
              <br>
              <span class="part">3、性能测试（Performance Testing）</span><br>
              ��性能测试是要检查系统是否满足在需求说明书中规定的性能。特别是对于实时系统或嵌入式系统，软件只满足要求的功能而达不到要求的性能是不行的。所以还需要进行性能测试。<br>
              ��性能测试可以出现在测试过程的各个阶段，甚至在单元层次上，也可以进行性能测试。这时，不但需要对单个程序的逻辑进行白盒测试（结构测试），还可以对程序的性能进行评估。然而，只有当所有系统的元素全部组装完毕，系统性能才能完全确定。<br>
              ��性能测试常常需要与强度测试结合起来进行，并常常要求同时进行硬件和软件检测。例如，对资源利用（如处理机周期）等进行精密的度量，对执行间隔、日志事件（如中断）等进行监测。通常，对软件性能的检测表现在以下几个方面：响应时间、吞吐量、辅助存储区，例如缓冲区，工作区的大小等、处理精度，等等。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

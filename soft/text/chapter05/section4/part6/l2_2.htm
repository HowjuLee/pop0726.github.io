<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              ��<span class="part">(4) </span>根据规格说明的每个输出条件，使用前面的原则（2）。 <br>
              ��例如，一个信息检索系统根据用户打入的命令，显示有关文献的摘要，但最多只显示4篇摘要。这时可设计一些测试用例，使得程序分别显示1篇，4篇，0篇摘要，并设计一个有可能使程序错误地显示5篇摘要的测试用例。<br>
              ��<span class="part">(5)</span> 如果程序的规格说明给出的输入域或输出域是有序集合（如有序表，顺序文件等），则应选取集合的第一个元素和最后一个元素作为测试用例。<br>
              ��<span class="part">(6)</span> 如果程序中使用了一个内部数据结构，则应当选择这个内部数据结构的边界上的值做为测试用例。<br>
              ��例如，如果程序中定义了一个数组，其元素下标的下界是0，上界是100，那么应选择达到这个数组下标边界的值，如0与100，作为测试用例。<br>
              ��<span class="part">(7)</span> 分析规格说明，找出其它可能的边界条件。<br>
              ��边界值分析方法是最有效的黑盒测试方法，但当边界情况很复杂的时候，要找出适当的测试用例还需针对问题的输入域、输出域边界，耐心细致地逐个考虑。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

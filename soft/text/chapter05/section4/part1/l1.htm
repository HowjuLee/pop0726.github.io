<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p>��<br>
              <span class="part">1、黑盒测试</span><br>
              ��任何工程产品都可以使用以下的两种方法之一进行测试:<br>
              ��<span class="part">(1)</span> 已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要求。<br>
              ��<span class="part">(2)</span> 已知产品的内部工作过程，可以通过测试证明每种内部操作是否符合设计规格要求，所有内部成分是否已经过检查。<br>
              前者就是黑盒测试，后者就是白盒测试。<br>
              ��软件的黑盒测试就意味着测试要在软件的接口处进行。也就是说，这种方法是把测试对象看做一个黑盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能说明。<br>
              因此黑盒测试又叫做功能测试或数据驱动测试。<br>
              <br>
              ��黑盒测试方法在程序接口上进行测试，目的是发现以下几类错误:<br>
              ��<span class="part">・</span>是否有不正确或遗漏了的功能?<br>
              ��<span class="part">・</span>在接口上，输入能否正确地接受? 能否输出正确的结果?<br>
              ��<span class="part">・</span>是否有数据结构错误或外部信息（例如数据文件）访问错误?<br>
              ��<span class="part">・</span>性能上是否能够满足要求?<br>
              ��<span class="part">・</span>是否有初始化或终止性错误?　<br>
              ��用黑盒测试发现程序中的错误，必须在所有可能的输入条件和输出条件中确定测试数据，来检查程序是否都能产生正确的输出。<br>
            </p>
            <p>&nbsp; </p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

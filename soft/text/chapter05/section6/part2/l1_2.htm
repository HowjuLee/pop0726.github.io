<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              <span class="part">(2) 在程序特定部位设置打印语句</span><br>
              ��把打印语句插在出错的源程序的各个关键变量改变部位、重要分支部位、子程序调用部位，跟踪程序的执行，监视重要变量的变化。这种方法能显示出程序的动态过程，允许人们检查与源程序有关的信息。因此，比全部打印内存信息优越。但是它也有缺点：<br>
              ��<span class="part">・</span>可能输出大量需要分析的信息，大型程序或系统更是如此，造成费用过大。<br>
              ��<span class="part">・</span>必须修改源程序以插入打印语句，这种修改可能会掩盖错误，改变关键的时间关系或把新的错误引入程序。<br>
              <br>
              <span class="part">(3) 自动调试工具</span><br>
              ��利用某些程序语言的调试功能或专门的交互式调试工具，分析程序的动态过程，而不必修改程序。自动调试工具的功能是：设置断点，当程序执行到某个特定的语句或某个特定的变量值改变时，程序暂停执行。程序员可在终端上观察程序此时的状态。<br>
              ��应用以上任一种方法都不能代替人的思考。它们只是一些辅助工具，人们使用它们，目的是帮助分析错误的征兆。只有对错误的征兆进行全面彻底的分析，才能得出对出错位置及错误性质的推测。必要时，需再使用一种适当的排错方法来检验推测的正确性。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1_3</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td><span class="text"><br>
            </span><span class="section"> 软件危机产生的原因：</span><span class="text"><br>
            <br>
            <span class="part">(1) </span>软件不同于硬件，它是计算机系统的逻辑部件而不是物理部件。在写出程序代码并在计算机上试运行之前，软件开发过程的进展情况较难衡量。很难检验开发的正确性且软件开发的质量也较难评价。因此，控制软件开发过程相当困难。此外，在软件运行过程中发现错误，很可能是遇到了一个在开发期间引入的、但在测试阶段没有能够检测出来的错误，所以软件维护常常意味着修改原来的设计。这样，维护的费用十分惊人，客观上使得软件较难维护。<br>
            <br>
            <span class="part">(2) </span>软件开发的过程是多人分工合作，分阶段完成的过程，参与人员之间的沟通和配合十分重要。但是，相当多的软件开发人员对软件的开发和维护存在不少错误的观念，在实践的过程中没有采用工程化的方法，或多或少采用了一些错误的方法和技术，这是造成软件危机的主要原因。<br>
            <br>
            <span class="part">(3) </span>开发和管理人员只重视开发而轻视问题的定义，使软件产品无法满足用户的要求。对用户的要求没有完整准确的认识就急于编写程序。这是许多软件开发失败的另一主要原因。事实上，许多用户在开始时并不能准确具体地叙述他们的需要，软件人员需要做大量深入细致的调查研究工作，反复多次与用户交流信息，才能真正全面、准确、具体地了解用户的要求。<br>
            <br>
            <span class="part">(4) </span>软件管理技术不能满足现代软件开发的需要，没有统一的软件质量管理规范。首先是文档缺乏一致性和完整性，从而失去管理的依据。因为程序只是完整软件产品的一个组成部分，一个软件产品必须由一组的配置组成，不能只重视程序而应当特别重视软件配置。其次，由于成本估计不准确，资金分配混乱，人员组织不合理，进度安排无序，导致软件技术无法实施。<br>
            <br>
            <span class="part">(5) </span>在软件的开发和维护关系问题上存在错误的观念。软件维护工作通常是在软件完成之后进行的，因此是极端艰巨复杂的工作，需要花费很大的代价。所以做好软件的定义工作，是降低软件成本，提高软件质量的关键。如果软件人员在定义阶段没有正确、全面地理解用户要求，直到测试阶段才发现软件产品不完全符合用户的需要，这时再修改就为时已晚了。另外，在软件生存期的不同结点进行修改需要付出的代价是很不相同的。在早期引入变更，涉及面较小，付出的代价较低；在开发的中期软件配置的许多成分已经完成，引入一个变更可能需要对所有已完成的配置成分都做相应的修改，不仅工作量大，而且逻辑上更复杂，因而付出的代价剧增。在软&quot;已经完成&quot;后再引入变更。则需要付出更高得多的代价。因此，必须把软件维护的观念引入软件开发的各个阶段，建立起软件开发与维护的正确关系。 
            <br>
            　</span></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

 
<link rel="stylesheet" href="../../../../../css/text.css" type="text/css">
 
<body bgcolor="#FFFFFF" leftmargin="0" marginwidth="0" background="../../../../../images/tanchu/di.gif">
<P class="section">三、选择填空题</P>
<P>&nbsp;<span class="part">1、解答：<br>
  </span><span class="text">A. ③&nbsp;&nbsp; B. ⑤&nbsp;&nbsp; C. ②&nbsp;&nbsp; 
  D. ③&nbsp;&nbsp; E. ⑤&nbsp;&nbsp; F. ②&nbsp;&nbsp; G. ④&nbsp;&nbsp; H. ⑥�其中，D、E的答案顺序可互换。&nbsp;&nbsp; 
  <BR>
  &nbsp;�软件质量保证是为保证产品和服务充分满足消费者要求的质量而进行的有计划、有组织的活动。质量保证是面向消费者的活动，是为了使产品实现用户要求的功能，站在用户立场上来掌握产品质量的。<BR>
  &nbsp;�软件的质量保证就是向用户及社会提供满意的高质量的产品。进一步地，软件的质量保证活动也和一般的质量保证活动一样，是确保软件产品从诞生到消亡为止的所有阶段的质量的活动。即为了确定、达到和维护需要的软件质量而进行的所有有计划、有系统的管理活动。它包括质量方针的制定和展开、质量体系的建立和管理等。为了提高软件的只链个和软件开发的生产率，软件质量保证的主要任务主要有：熟练掌握正确定义用户要求的技术和支持工具；力争不重复劳动；掌握开发新软件的软件工程学方法和工具；组织外部力量协作开发的方法；排除无效劳动；发挥每个开发者的能力；提高软件开发的工程过程能力；提高计划和管理质量?/P&gt; 
  </span>
<P class="text">&nbsp;<span class="part">2、解答：</span>A. ②&nbsp;&nbsp; B. ④&nbsp;&nbsp; 
  C. ⑦&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ③&nbsp;&nbsp; F. ①&nbsp;&nbsp; G. ①<BR>
  &nbsp;�为了实现规定的质量特性，就需要把这些质量特性转换为软件的内部结构的特性。软件质量需求中的“性能”，可以转换成软件内部结构中的构成元素，即每一个程序模块和物理数据各自应具有的性能特性。这些性能特性的累积就形成设计规格说明中的性能特性。这种情况也适用于“可靠性”。<BR>
  &nbsp;�在质量特性中，有一些特性与功能及用户界面有关，必须把这些功能或用户界面数据正确映射到内部结构中来。这时，必须对软件的结构特性进行评价。此外，决定软件“适用范围”的六个质量特性，取决于软件内部结构中各种接口部分是否实现模块化。<BR>
  <IMG alt="" hspace=0 src="image/01.gif" align=baseline border=0 width="372" height="284"><BR>
  <BR>
  &nbsp;<span class="part">3、解答：</span>A. ③&nbsp;&nbsp; B. ①&nbsp;&nbsp; C. ④&nbsp;&nbsp; 
  D. ①&nbsp;&nbsp; E. ①&nbsp;&nbsp; F. ③&nbsp;&nbsp; G. ④&nbsp;&nbsp; H. ④�其中，E、F、G、H的答案顺序可互换。<BR>
  &nbsp;�软件质量必须在设计和实现过程中加以保证。如果工程过程能力不够，或由于各种失误产生软件差错，其结果就会产生软件失效。为了确保每个开发过程的质量，防止把差错传播到下一个过程，必须进行质量检验。检验目的有两个：其一是切实搞好开发阶段的管理，检查各开发阶段的质量保证活动开展得如何；其二是预先防止软件差错给用户造成损失。质量检验是质量保证活动的一个重要部分?BR&gt;&nbsp;检验的实施有两种方式：实际运行检验(白盒测试和黑盒测试)和鉴定。检验的类型有供货检验(指委托外单位承担的开发作业，而后买进或转让的产品)、中间检验�M阶段评审、产品检验和验收检验(确认是否已达到进行“产品检验”的质量要求)。</P>
<P class="text">&nbsp;<span class="part">4、解答：</span>A. ③&nbsp;&nbsp; B. ⑤&nbsp;&nbsp; 
  C. ④&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ②&nbsp;&nbsp; F. ①&nbsp;&nbsp; G. ⑤<BR>
  &nbsp;�技术评审是以提高软件质量为目的的技术活动。为此，首先要明确什么是软件的质量。缺乏质量概念的技术评审只是一种拘于形式的为评审而评审的盲目工作。通常，把“质量”定义为“用户的满意程度”。为使得用户满意，有两个必要条件：<BR>
  &nbsp;�(1)设计的规格说明要符合用户的要求；<BR>
  &nbsp;�(2)程序要按照设计规格说明所规定的情况正确执行。<BR>
  &nbsp;�我们把上述条件(1)称为“设计质量”，把条件(2)称为“程序质量”。优秀的程序质量是构成好的软件质量的必要条件，但不是充分条件。<BR>
  <IMG alt="" hspace=0 src="image/02.gif" align=baseline border=0 width="382" height="195"><BR>
  &nbsp;<BR>
  &nbsp;�与上述质量的观点相对应，软件的规格说明可以分为外部规格说明和内部规格说明。外部规格说明是从用户角度来看的规格，包括硬件／软件系统设计(在系统分析阶段进行)、功能设计(在需求分析阶段与概要设计阶段进行)，而内部规格说明是为了实现外部规格的更详细的规格，即程序模块结构设计与模块处理加工设计(在概要设计与详细设计阶段进行)。因此，内部规格说明是从开发者角度来看的规格说明。将上述两个概念联系起来，则可以说设计质量是由外部规格说明决定的，程序质量是由内部规格说明决定的。<BR>
  &nbsp;针对外部规格说明进行设计评审时，评审对象是在需求分析阶段产生的软件需求规格说明、数据要求规格说明，在软件概要设计阶段产生的软件概要设计规格说明等。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</P>
<P class="text">&nbsp;<span class="part">5、解答：</span>A. ②&nbsp;&nbsp; B. ④&nbsp;&nbsp; 
  C. ②&nbsp;&nbsp; D. ①&nbsp;&nbsp; E. ③&nbsp;&nbsp; F ②�其中，A、B的答案顺序可互换。<BR>
  &nbsp;�评审软件是否有可扩充性，需要考虑可能的扩充、模块化和模块的通用性。而软件的兼容性(或互换性)是指当软件功能扩充了之后，其已有功能还能照原样使用的特性。注意兼容性与可移植性有区别。，两者的比较参看图示。<BR>
  <IMG alt="" hspace=0 src="image/03.gif" align=baseline border=0 width="245" height="296"></P>
<P class="text"><BR>
  &nbsp;�可移植性是指软件运行环境改变时，可不改变软件的规格而能照原样工作的特性。可移植性是与兼容性相反的概念。兼容性表明在扩充了软件功能后，不影响(不改变)已有软件的运行环境；可移植性表明软件运行环境改变时，可不改变原有软件的规格说明而能照原样工作。<BR>
  &nbsp;在评审兼容性时，要考虑软件结构上的稳定性，即如果一个软件由多个模块构成，在改变运行环境时，仅修改或更换因环境不同而受影响的那些模块就可达到兼容性。</P>
<P class="text">&nbsp;<span class="part">6、解答：&nbsp;</span>A. ③&nbsp;&nbsp; B. 
  ②&nbsp;&nbsp; C. ①&nbsp;&nbsp; D. ④&nbsp;&nbsp; E. ⑤&nbsp;&nbsp; F. ⑥&nbsp;&nbsp; 
  G. ③&nbsp;&nbsp; H. ①�I. ②&nbsp;&nbsp; J. ②&nbsp;&nbsp; K. ④<BR>
  &nbsp;�为了开发高质量的软件，从计划阶段开始，不但要明确软件的功能，还要明确软件应当达到什么样的质量标准，即指定软件的质量指标。为了达到这些质量指标，在开发过程的各个阶段需要进行检查和评价。软件质量度量和保证的条件通常有：适应性、易学习性、可靠性、针对性、客观性、经济性。<BR>
  &nbsp;�软件的质量评价标准分为3级：质量特性、子质量特性和质量度量准则。质量特性的着眼点是“是否满足用户的要求”；子质量特性的着眼点是“开发者在设计实现时是否按照软件需求保证了质量”；质量度量准则是为定量度量软件质量而规定的一些检查项目。它们一级比一级具体，一级比一级易于定量评价。</P>
<P class="text">&nbsp;<span class="part">7、解答：</span>A. ①&nbsp;&nbsp; B. ③&nbsp;&nbsp; 
  C. ②&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ②&nbsp;&nbsp; F. ③&nbsp;&nbsp; G. ③<BR>
  &nbsp;�可从两个方面来技术上改进软件的开发过程，提高软件产品的质量：一是提高测试工作的效率，有效地发现和排除软件开发过程中发生的各种差错；二是改进开发过程，使得各种差错不被引进或更少地被引进，从而减轻排错的工作量。<BR>
  &nbsp;�在发现错误和排除错误方面更重要也是更困难的是发现错误，也就是测试。因为只有发现了错误才能排除它。由于近年来软件测试技术方面没有多少新的突破，人们只能用加强阶段评审或是检查作为辅助手段。这是一个由同行人员小组人工检查所开发的阶段产品的验证方法，其目的在于发现阶段产品中的缺陷，继而加以排除。至于改进开发过程的新技术，可以采用面向对象的开发技术或是建立软件原型，多少会收到一些效果，但无论如何不能说从根本上解决了软件的质量问题。一个诱人的说法是采用“净室”软件开发技术，其基本思想在于净化软件开发过程，使得差错或缺陷不可能有机可乘混入开发过程。</P>
<P class="text">&nbsp;<span class="part">8、解答：</span>A. ③&nbsp;&nbsp; B. ③&nbsp;&nbsp; 
  C. ④&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ②&nbsp;&nbsp; F ③&nbsp;&nbsp; G. ①&nbsp;&nbsp; 
  H. ④。<BR>
  &nbsp;�在软件开发的各个阶段中得到的阶段产品并非是固定不变的。设计规格说明、程序，甚至需求规格说明都可能在开发过程的某些时刻出于某种原因需要变更。软件的这种经常变更的情况必须按一定的受控方式进行，否则就要出现混乱。这就是软件配置管理的原始指导思想。受控制的对象叫做软件配置项。<BR>
  &nbsp;�关于什么是软件配置管理，已出现多种定义。下面列出几种。<BR>
  &nbsp;�《ISO�MIEC 12207-1995 信息技术�D软件生存期过程》：配置管理过程是在整个软件生存期中实施管理和技术规程的过程。它标识、定义系统中的软件项并指定基线；控制软件项的修改和发行；记录和报告软件项的状态和修改申请的完整性、协调性和正确性；以及控制软件项的储存、装载和交付。<BR>
  &nbsp;�《ISO 9000-3：1997 质量管理和质量保证标准&nbsp; 第三部分：ISO 9001：1994在计算机软件开发、供应和维护中的使用指南》：软件配置管理是一门管理学科，它对配置项的开发和支持生存期给予技术上和管理上的指导。配置管理的应用取决于项目的规模、复杂程度和风险大小。<BR>
  &nbsp;巴比奇(W.Babich)：软件配置管理能够协调软件的开发，使得混乱减小到最小。软件配置管理是一种标识、组织和控制修改的技术，其目的是最有效地提高生产率。<BR>
  &nbsp;�《GB�MT 11457-1995 软件工程术语》：软件配置管理是标识和确定系统中配置项的过程，在系统的整个生存周期内控制这些项的投放和更动，记录并报告配置的状态和更动要求，验证配置项的完整性和正确性。}<BR>
  <IMG alt="" hspace=0 src="image/05.gif" align=baseline border=0 width="374" height="135"></P>
<P class="text"><BR>
  &nbsp;<span class="part">9、解答：</span>A. ③&nbsp;&nbsp; B. ②&nbsp;&nbsp; C. ③&nbsp;&nbsp; 
  D. ④&nbsp;&nbsp; E. ①&nbsp;&nbsp; F. ②&nbsp;&nbsp; G. ④<BR>
  &nbsp;�软件配置项是软件配置管理的对象，指的是软件工程过程中产生的所有信息项。包括计算机可执行的源代码、目标码、数据库等，以及计算机不可执行的文档、源程序清单、测试用例等。随着软件工程项目的进展，软件配置项会逐渐增多，于是配置管理的作用就会充分地按照显示出来。不仅如此，而且在不同的时期，出于不同的要求，可进行各种组合，如针对不同的硬件环境和软件环境的组合，这就是软件配置的概念。<BR>
  &nbsp;实施软件配置管理要做的事情至少有：制定配置管理计划、实施变更管理、实施版本管理和发行管理。<BR>
  &nbsp;�实际上，软件配置时一个动态的概念。制定适当的命名规则是配置标识的重要工作，命名不能任意、随机地进行。对命名的要求有：唯一性：目的在于避免出现重名，以免造成混乱；可追溯性：使命名能够反映命名对象之间的关系。</P>
<P class="text">&nbsp;<span class="part">10、解答：</span>A. ③&nbsp;&nbsp; B. ②&nbsp;&nbsp; 
  C. ②&nbsp;&nbsp; D. ①&nbsp;&nbsp; E. ④<BR>
  &nbsp;“登入”和“检出”处理实现了两个重要的变更控制要素，即存取控制和同步控制。存取控制管理各个软件工程人员存取或修改一个特定的软件配置对象的权限；同步控制用于确保由不同的人所做的并发变更不会产生混乱。<BR>
  <IMG alt="" hspace=0 src="image/07.gif" align=baseline border=0 width="297" height="201"><BR>
  &nbsp;存取和同步控制如图所示。根据经批准的变更请求和变更工程顺序，软件工程人员从项目数据库中检出要变更的配置对象。存取控制功能保证了软件人员具有检出该对象的权限，而同步控制功能则封锁(lock)了项目数据库中的这个对象，使得当前检出的版本在没有被置换前不能再更新它。当然，对这个对象还可以检出另外的副本，但对它也不能更新。软件工程人员在对这种成为基线的对象做了变更，并经过适当的软件质量保证措施和测试之后，把修改版本登入项目数据库，再解除封锁(unlock)。</P>
<P class="text">&nbsp;<span class="part">11、解答：</span>A. ④&nbsp;&nbsp; B. ②&nbsp;&nbsp; 
  C. ①&nbsp;&nbsp; D. ③&nbsp;&nbsp; E. ③<BR>
  &nbsp;�软件工程标准的类型是多方面的。它可能包括过程标准，如方法、技术、度量等；产品标准，如需求、设计、部件、描述、计划、报告等；专业标准，如职别、道德准则、认证、特许、课程等；记法标准，如术语、表示法、语言等。根据中国国家标准GB�MT 
  15538-1995(软件工程标准分类法)规定，软件工程标准可用一张二维的表格来表示。<BR>
</P>
<P class="text">&nbsp;<span class="part">12、解答：</span>A. ②&nbsp;&nbsp; B. ①&nbsp;&nbsp; 
  C. ⑤&nbsp;&nbsp; D. ③&nbsp;&nbsp; E. ④&nbsp;&nbsp; F. ⑤&nbsp;&nbsp; G. ⑥<BR>
  &nbsp;�软件工程标准是有层次的，根据软件工程标准制定的机构和标准的适用范围有所不同，它可分为五个级别，即国际标准、国家标准、行业标准、企业规范和项目(课题)规范。<BR>
  &nbsp;�国际标准是由国际联合机构制定和公布，供各国参考的标准，通常冠有ISO(国际标准化组织)的字样。国家标准是由政府或国家级机构制定或批准，适用于全国范围的标准，如GB、ANSI、FIPS、BS、DIN、JIS等。行业标准是由行业机构、学术团体或国际机构制定，并适用于某个业务领域的标准，如IEEE、GJB、DOD-STD、MIL-S等。企业规范是由一些大型企业或公司因软件工程工作的需要而制定的适用于本部门的软件工程规范，如IBM公司于1984年制定的程序设计开发指南，仅供公司内部使用。项目规范由某一科研生产项目，且为该项目专用的软件工程规范，如计算机集成制造系统(CIMS) 
  的软件工程规范。</P>
<P class="text">&nbsp;<span class="part">13、解答：</span> &nbsp;① 错&nbsp;&nbsp; ② 
  对&nbsp;&nbsp; ③ 对&nbsp;&nbsp; ④ 对&nbsp;&nbsp; ⑤ 错&nbsp;&nbsp; ⑥ 对&nbsp;&nbsp; 
  ⑦ 对�⑧ 错&nbsp;&nbsp; ⑨ 错&nbsp;&nbsp; ⑩ 错。<BR>
  &nbsp;�① 有的标准是强制性的，有的标准是指南性的。虽然国家标准都是由政府或国家级机构制定或批准，适用于全国的标准。这些标准不都是强制性的。例如，GB/T 
  19000.3�D94《质量管理和质量保证标准&nbsp; 第三部分：GB/T 19001�DISO 9001在软件开发、供应和维护中的使用指南》就是一个建议性的指南，而不是强制性的?BR&gt;&nbsp;⑤ 
  ISO9000-3是一个指南性的标准，它针对ISO 9001标准的要素按照软件的特点逐条作了解释和说明。它在设计控制的总则中，要求软件开发项目应按照软件生存期模型来组织，要根据所采用的生存期特征来计划和实施过程、活动和任务。但并未涉及具体的开发模式，也未将软件全过程工序从管理角度、合同角度和工程角度划分为三大类。<BR>
  &nbsp;⑧ 从软件配置管理的角度来讲，在新文档取代旧文档后，管理人员不应删除旧文档。因为文档反映了某些时刻的软件版本信息，旧版本经过修改产生新版本，文档也需随之更新。由于软件的旧版本作为软件配置项仍然保留，反映其状态的旧文档也不能删去。<BR>
  &nbsp;⑨ 软件配置管理要求把软件生存期中的所有产生的程序、文档、资料等配置项都管理起来，软件开发人员需要修改其中部分文档，必须经过严格的变更控制，不能把主文档的一部分控制在自己手中而不纳入配置管理之下。<BR>
  &nbsp;⑩ 软件需求分析报告是给开发人员使用的，但其他人员，如管理者和用户等，也需要利用需求分析文档了解软件的需求，参与需求评审和监督软件需求的实现。维护人员在变更软件时也可能要参照需求理解软件、修改软件，甚至修改需求。</P>
<P class="text">&nbsp;<span class="part">14、解答：</span>A. ⑤&nbsp;&nbsp; B. ③&nbsp;&nbsp; 
  C. ⑤&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ②<BR>
  &nbsp;�软件的总体结构应当在概要设计规格说明书中正确定义并给出准确描述。软件的运行环境最初在软件需求规格说明中定义。出错处理设计应在概要设计规格说明中阐明。<BR>
  &nbsp;初步的用户手册在需求分析阶段开始编写，确认测试计划也应在需求分析阶段开始编写。确认测试有两方面的任务：其一是做有效性测试，确认需求说明书中规定的所有需求是否已正确实现；其二是对所要求的软件配置进行审查，特别是合同中规定应交付的文档进行审查。因为在需求分析阶段已经明确软件的各种功能、性能和其他的质量需求，初步的用户手册也有了，可以针对这些需求和用户手册中的内容，编制如何逐项检查的确认测试计划，当然，这种测试计划只是初步的。测试实施的细节还需在体系结构、用户界面、数据库、出错处理、运行组合等设计完成后才能定下来。</P>
<P class="text">&nbsp;<span class="part">15、解答： &nbsp;</span>① 错&nbsp;&nbsp; ② 
  对&nbsp;&nbsp; ③ 对&nbsp;&nbsp; ④ 错&nbsp;&nbsp; ⑤ 错&nbsp;&nbsp; ⑥ 对&nbsp;&nbsp; 
  ⑦ 对�⑧ 错&nbsp;&nbsp; ⑨ 错&nbsp;&nbsp; ⑩ 对。&nbsp;<BR>
  &nbsp;�① 可行性研究报告是为管理者提供该项目是否可以立项的决策依据，编写者在提出可能的后选方案并分析各种可行性后应当给出结论，说明该项目是否值得立项，能否获得成功?BR&gt;&nbsp;④ 
  编写文档时必须保持各个文档的独立性，不能写“参看××说明书××节”，所以如果各文档有重复的地方时，应从前一阶段的文档中复制过来。<BR>
  &nbsp;�⑤ 用户手册应当使用用户熟知的术语，不应用专业术语。应阐明系统的使用方法，不必详细介绍系统的结构。<BR>
  &nbsp;�⑧ 每个模块的实测结果是单元测试的结果，不应使用需求信息和概要设计(体系结构)信息来做结果比较。<BR>
  &nbsp;�⑨ 软件需求规格说明是对待开发软件系统提出的要求，不包括对软件操作人员和维护人员的教育水平和技术专长的要求?/P&gt; 
<P class="text">&nbsp;<span class="part">16、解答：</span>A. ②&nbsp;&nbsp; B. ③&nbsp;&nbsp; 
  C. ④&nbsp;&nbsp; D. ①&nbsp;&nbsp; E. ②&nbsp;&nbsp; F ③<BR>
  &nbsp;�软件过程不断改进是软件工程七原理的基本原理之一，也是软件生存期的基本过程之一。软件工程界的专家历来很重视软件过程的研究，20世纪70年代形成了软件生存期的概念，1995年正式发表了一个国际标准：ISO�MIEC 
  12207-1995 信息技术�D软件生存期过程，这是软件工程过程研究的重要成果。实践表明，软件过程需要不断完善，首先从非工程化的软件开发方式改变为工程化的软件开发方式，按照软件过程的系统方法进行软件的工程活动和管理活动，进而不断完善软件各个软件过程，从而不断提高软件过程能力。随着这种能力的提高，一个软件机构在完成一个产品时在预算、进度，特别时产品质量方面的风险就会逐步降低。显然，软件过程能力的提高首先需要对当前的软件过程状况进行科学的评估。</P>
<P class="text">&nbsp;<span class="part">17、解答：</span>&nbsp;A. ③&nbsp;&nbsp; B. 
  ①&nbsp;&nbsp; C. ②&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ①&nbsp;&nbsp; F. ③�G. ②&nbsp;&nbsp; 
  H. ④&nbsp;&nbsp; I. ⑤<BR>
  &nbsp;�保证软件过程质量应包含的工作有：定义过程标准；监控开发过程，报告软件过程?BR&gt;&nbsp;近年来，软件工程界的专家对过程评估和过程改进表现出浓厚的兴趣。其中有卡内基-梅隆大学SEI的CMM；国际标准化组织(ISO)的ISO 
  9001, ISO 9000-3。CMM的主题是软件过程能力评估，ISO 9001, ISO 9000-3的主题是建立和维持质量体系。Bell的TRILLTUM的主题是软件过程评估(基于CMM)。</P>
<P class="text">&nbsp;<span class="part">18、解答：</span>A. ④&nbsp;&nbsp; B. ⑦&nbsp;&nbsp; 
  C. ⑤&nbsp;&nbsp; D. ⑥&nbsp;&nbsp; E. ⑧&nbsp;&nbsp; F. ②&nbsp;&nbsp; G. ①&nbsp;&nbsp; 
  H. ③。<BR>
  &nbsp;�此题是SEI CMM中涉及到的一些重要概念。人们用于开发和维护软件及其相关产品的一系列活动称为软件过程；表示(开发组织或项目组)遵循其软件过程所获得的实际结果称为软件过程性能；而描述通过遵循其软件过程能够实现预期结果的程度称为软件过程能力；一个特定软件过程被明确和有效地定义、管理、测量和控制的程度称为软件过程成熟度；表征软件过程成熟度的平台称为软件能力成熟度等级；对软件机构进化阶段的描述，随着软件机构定义、实践、测量、控制和改进其软件过程，软件机构的能力经过这些阶段逐步前进，称为软件能力成熟度模型；互为关联的若干软件实践活动和有关基础设施的一个集合称为关键过程域；对关键过程域的实施起关键作用的方针、规程、措施、活动以及相关基础设施的建立称为关键实践。</P>
<P class="text">&nbsp;<span class="part">19、解答：</span>A. ④&nbsp;&nbsp; B. ②&nbsp;&nbsp; 
  C. ⑦&nbsp;&nbsp; D. ④&nbsp;&nbsp; E. ⑤&nbsp;&nbsp; F ③<BR>
  &nbsp;�CMM提供了一个框架，将软件过程改进的进化步骤组织成5个成熟度等级，为过程不断改进奠定了循序渐进的基础。。这5个成熟度等级定义了一个有序的尺度，用来衡量一个软件机构的软件过程成熟度和评价其软件过程能力，还能帮助软件机构自己对其改进工作排列优先次序。成熟度等级已得到确切定义，它是向成熟的软件机构前进途中的平台，每一个成熟度等级为继续改进过程提供了一个台基。每一个等级包含了一组过程目标，通过实施相应的一组关键过程域达到这一组过程目标。当目标满足时，可使软件过程的一个重要成分稳定下来。每达到成熟度框架的一个等级，就建立起软件过程的一个相应成分，从而导致软件机构过程能力得到一定程度的提高。<BR>
  &nbsp;5个成熟度等级各有其不同的行为特征，通过3个方面来表现，即一个机构为建立或改进软件过程所进行的活动，对每个项目所进行的活动和所产生的跨越各项目的过程能力。</P>
<P class="text">&nbsp;<span class="part">20、解答：</span>A. ④&nbsp;&nbsp; B. ②&nbsp;&nbsp; 
  C. ②&nbsp;&nbsp; D. ②&nbsp;&nbsp; E. ③&nbsp;&nbsp; F. ①。<BR>
  &nbsp;�基于软件人员能力成熟度模型的评估的依据是成熟度级别上的关键过程域，应当考察特定级别上每个关键过程域的内容是否实施，关键过程域的目标是否达到，同时应考察相应的劳动力条例是否被广泛执行等。一个企业的成熟度级别是所有关键过程域被实施的最低级别。软件企业通过评估结果可以了解关键过程域方面的强项和弱项，明确努力的方向。P-CMM模型并不禁止处于较低成熟度级别上的企业在需要的时候实施高一级关键过程域的内容。但是，由于每一级都是向上一级进化的基础，所以，跳越成熟度级别的进化是有风险的。基于P-CMM 
  的改进工作和其他任何发展项目一样，第一要有计划，第二要跟踪其发展，第三要有专人负责。卡内基�D梅隆大学SEI的P-CMM顾问委员会建议：在软件工程小组内加入人力资源管理人员，以进行基于P-CMM的改进工作。这样，带给软件机构管理层的信息就是：一个致力于改善整个软件过程能力的项目强调的是过程、技术和人员，缺一不可。</P>
<P class="text">&nbsp;<span class="part">21、解答：</span>A. ③&nbsp;&nbsp; B. ②&nbsp;&nbsp; 
  C. ①&nbsp;&nbsp; D. ④&nbsp;&nbsp; E. ③&nbsp;&nbsp; F ⑤&nbsp;&nbsp; G. ①&nbsp;&nbsp; 
  H. ④<BR>
  &nbsp;�P-CMM的价值取决于软件企业如何使用它，通常不外乎两种应用方式：一是作为评估的标准，评价劳动力工作的水平；二是作为发展的指南，用于改进和规范劳动力工作。当P-CMM评估与软件过程评估联合进行时，用于P-CMM评估的数据既单独收集，也可以结合企业内的其他评估一起进行，如软件过程评估、人员意向评估等。因为软件过程评估的分析对象是软件项目，而人员能力评估的分析对象是企业的部门和部门中劳动力条例的实施情况。作为企业劳动力能力发展的指南，P-CMM并不定义具体的劳动力条例。企业应根据自己的历史、行业特点及文化背景来选择、制定自己的劳动力条例。P-CMM的作用是为宏观发展提供框架，帮助企业找出劳动力条例体系中的薄弱环节。</P>
<P class="text">&nbsp;<span class="part">22、解答：</span>A. ⑥&nbsp;&nbsp; B. ⑧&nbsp;&nbsp; 
  C. ④&nbsp;&nbsp; D. ⑤&nbsp;&nbsp; E. ①&nbsp;&nbsp; F ③&nbsp;&nbsp; G. ②�其中，A、B的答案顺序可互换<BR>
  �所谓进行质量管理就是在自己的机构内开展下列的质量活动：<BR>
  &nbsp;�・确定自己的质量方针和质量目标；<BR>
  &nbsp;�・确定各个岗位的职责和权限；<BR>
  &nbsp;�・建立质量体系，并使其有效运行。<BR>
  &nbsp;�质量体系是为实施质量管理所需的组织机构、程序、过程和资源。它涉及到：<br>
  �・质量策划：包括产品策划、管理和作业策划，以及质量计划的编制和质量改进的准备工作。<BR>
  &nbsp;�・质量改进是以追求更高的效益和效率为目标的持续性活动；<BR>
  &nbsp;�・质量控制：采取某些特定作业技术或展开某些活动以达到质量要求；<BR>
  &nbsp;�・质量保证：是供方为使用户确信能够满足质量要求所开展的有计划的和系统的活动，将所有影响质量的因素都得到有效的控制，从而证实确有减少、消除和预防出现质量缺陷的机制。</P>
<P class="text">&nbsp;<span class="part">23、解答：</span>A. ③&nbsp;&nbsp; B. ④&nbsp;&nbsp; 
  C. ③&nbsp;&nbsp; D. ④&nbsp;&nbsp; E. ②&nbsp;&nbsp; F. ①<BR>
  &nbsp; �ISO 9000族标准是指国际标准化组织中的质量管理和质量保证技术委员会(ISO�MTC176)制定的标准，现有20个标准，可分为5类：质量术语标准，质量保证标准，质量管理标准，质量管理和质量保证标准的选用和实施指南、支持性技术标准。如下表所示。<BR>
  <IMG alt="" hspace=0 src="image/08.gif" align=baseline border=0 width="378" height="275"></P>
<P class="text">&nbsp;<span class="part">24、解答：</span>&nbsp;A. ④&nbsp;&nbsp; B. 
  ⑥&nbsp;&nbsp; C. ②&nbsp;&nbsp; D. ①&nbsp;&nbsp; E. ⑤&nbsp;&nbsp; F. ②&nbsp; 
  �G. ③&nbsp;&nbsp; H. ②&nbsp;&nbsp; I. ①&nbsp;&nbsp; J. ④。其中，I和J的答案顺序可互换。<BR>
  &nbsp;�质量体系是一种质量管理制度。质量体系是通过若干过程来实现的并有一组质量体系文件，如图所示。过程是将输入转化为输出的一组彼此相关的资源和活动。过程本身具有增值的效果，是一种有效益的行为。质量管理是通过质量体系来实现的。一个组织机构建立自己的质量体系，并使之有效地运行，使达到质量管理目标的重要手段。<BR>
  &nbsp;�为明确规定、系统地描述质量体系的各项要求，使得相关人员能够理解和方便地实施，有必要建立质量体系文件。质量体系文件大致可分为三个层次，如图所示?<br>
  <IMG alt="" hspace=0 src="image/10.gif" align=baseline border=0 width="273" height="140"></P>
<P><span class="text">&nbsp;</span><span class="part">25、解答：</span><span class="text">A. 
  ③&nbsp;&nbsp; B. ①&nbsp;&nbsp; C. ②&nbsp;&nbsp; D. ④&nbsp;&nbsp; E. ⑥&nbsp;&nbsp; 
  F. ③。<BR>
  &nbsp;�ISO 9000-3是计算机软件机构实施ISO 9001的指南性标准。它的指南性主要表现在：<BR>
  &nbsp;�(1) 对于针对的标准给予特定的说明与解释，即从软件的角度对ISO 9001标准的内容给出具体的说明和解释。ISO 9001提供了20个质量体系要素，ISO 
  9000-3则对照其每一个要素，逐一作出说明和解释。<BR>
  &nbsp;�(2) 指南性的标准不是认证审核的依据。ISO 9001是认证审核的依据。在认证审核时考察的是申请认证的软件机构贯彻实施ISO 9001的情况，而不考察有无违背ISO 
  9000-3&nbsp;条文的情况。事实上，这两个标准文本的叙述语气也是有差别的。在ISO 9001的质量体系要素的每一条都强调了所提要求的强制性，使用了“应该(shall)”如何的用语，而在ISO 
  9000-3的各条解释中，由于是建议性指南，普遍使用了“最好(should)”如何的提法。<BR>
  &nbsp;�《ISO�MIEC 12207 ：1995信息技术�D软件生存期过程》将整个软件生存期分为17个过程，并且对每一个过程按“过程-活动-任务”的三个层次具体做了解释，为我们进一步理解ISO 
  9000-3提供了帮助。<BR>
  </span> </P>



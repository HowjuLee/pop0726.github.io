<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��在软件生存期过程中，随着软件工程项目的进展，发现和排除错误的成本差不多是按几何级数增长着。有的统计研究报告称，在维护阶段发现和排除错误比在分析阶段发现和排除同一错误所花的代价高出十倍至几十倍。因此，人们希望在开发的初期阶段，尽早地消除引入的错误。测试固然是发现和排除错误的重要手段，但如果只寄希望于测试，想通过测试解决所有问题，是不实际，也是不合算的。所以，保证软件质量应有别的措施。<br>
            <br>
            ��软件质量保证的目标是开发出可接受的软件产品。这里所谓的&quot;可接受&quot;应是用户理解意义上的可接受，或者说应达到用户提出的质量要求。软件质量保证的任务就是保证软件质量。 
            <br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

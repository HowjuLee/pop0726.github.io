<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td><span class="text"><br>
            </span><span class="part">・构造原型</span><span class="text"><br>
            <br>
            　　在快速分析的基础上，根据基本规格说明，尽快实现一个可运行的系统。为此需要强有力的软件工具的支持，例如采用非常高级的语言实现原型，引入以数据库为核心的开发工具等。并忽略最终系统在某些细节上的要求，例如安全性、健壮性、异常处理等。主要考虑原型系统应充分反映的待评价的特性，暂时忽略一切次要的内容。 
            <p>　　例如，如果构造原型的目的是确定系统输入界面的形式，可以利用输入界面自动生成工具，由界面形式的描述和数据域的定义立即生成简单的输入模块，而暂时不考虑参数检查、值域检查和后处理工作，从而尽快地把原型提供给用户使用。如果要利用原型确定系统的总体结构，可借助菜单生成器迅速实现系统的程序控制结构，而忽略转储、恢复等维护功能，使用户能够通过运行菜单来了解系统的总体结构。<br>
              <br>
              　　初始原型的质量对于原型生存期的后续步骤的成败是至关重要的。如果它有明显的缺陷，会带给用户一种不好的思路；如果为追求完整而做得太大，就不容易修改。这时，会增加修改的工作量。因此，应当有一个好的初始原型。<br>
              　</p>
            </span></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

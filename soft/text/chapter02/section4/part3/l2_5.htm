<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td><span class="text"><br>
            </span><span class="part">・判定原型完成</span><span class="text"><br>
            　　经过修改或改进的原型，达到参与者一致认可，则原型开发的迭代过程可以结束。为此，应判断有关应用的实质是否已经掌握，迭代周期是否可以结束等。<br>
            　　判定的结果有两个不同的转向，一是继续迭代验证，一是进行详细说明。<br>
            <br>
            </span><span class="part">・判断原型细部是否说明</span><span class="text"><br>
            　　判断组成原型的细部是否需要严格地加以说明。原型化方法允许对系统必要成分进行严格的详细的说明。例如将需求转化为报表，给出统计数字等等。这些不能通过模型进行说明的成分，必要的话，需提供说明，并利用屏幕进行讨论和确定。<br>
            <br>
            </span><span class="part">・原型细部的说明</span><span class="text"><br>
            　　对于那些不能通过原型说明的所有项目，仍需通过文件加以说明。下面是一些较明显的项目，例如，系统的输入、系统的输出、系统的转化、系统的逻辑功能、数据库组织、系统的可靠性、用户地位等等。原型化对完成严格的规格说明是有帮助的。如输入、输出记录都可以通过屏幕进行统计和讨论。 
            课文注释：严格说明的成分要作为原型化方法的模型编入词典，以得到一个统一的连贯的规格说明提供给开发过程。<br>
            <br>
            </span><span class="part">・判定原型效果</span><span class="text"><br>
            　　考察用户新加入的需求信息和细部说明信息，看其对模型效果有什么影响? 是否会影响模块的有效性? 如果模型效果受到影响，甚至导致模型失效，则要进行修正和改进。<br>
            <br>
            <span class="part">・整理原型和提供文档</span><br>
            　　整理原型的目的是为进一步开发提供依据。原型的初期需求模型就是一个自动的文档。<br>
            总之，利用原型化技术，可为软件的开发提供一种完整的、灵活的、近似动态的规格说明方法。<br>
            　</span></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="text" colspan="2"><br>
            <br>
            　　<span class="part">图2.24</span>用Petri网描述了在一个多任务系统中的两个进程PR1和PR2使用一个公共资源R时，利用原语LOCK（对资源加锁）和UNLOCK（对资源解锁）控制R的使用，保证进程间的同步的例子。<br>
            　</td>
        </tr>
        <tr> 
          <td class="text" width="25" valign="top"><img src="../../../../images/tubiao/ts.gif" width="25" height="20" alt="图示"></td>
          <td class="text">
            <div align="center"><img src="../../../../images/images/chapter02/2_24.gif" width="386" height="215"><br>
              <span class="part">图2.24 进程同步机制的PNG</span></div>
          </td>
        </tr>
        <tr> 
          <td class="text" colspan="2"><br>
            　　图中每个进程是一个数据对象，它有三个状态：等待资源（p1或p4），占用资源执行的处理（p2或p5），不占用资源执行的处理（p3或p6），另外系统有一个状态：资源空闲（p7）。在有的状态中有一个黑点&quot;<img src="../../../../images/images/chapter02/3.gif" width="15" height="15" align="absmiddle">&quot;，称为标记或令牌，表明系统或对象当前正处于此状态。当作为一个事件的输入的所有状态都得到或保有令牌时，才能引起该事件&quot;激发&quot;。使得系统和对象的状态向前推移，完成系统和对象的某些行为。<br>
            　</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

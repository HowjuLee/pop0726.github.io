<html>
<head>
<title>r3</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="90%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td><span class="explaination"><br>
            </span><span class="part">(3) 判定树（Decision Tree）</span><span class="explaination"><br>
            <br>
            　　判定树也是用来表达加工逻辑的一种工具。有时侯它比判定表更直观。用它来描述加工，很容易为用户接受。下面把前面的&quot;检查发货单&quot;的例子用判定树表示。参看</span><span class="part">图2.16</span><span class="explaination">。<br>
            <br>
            　　在表达一个基本加工逻辑时，结构化语言、判定表和判定树常常被交叉使用，互相补充。因为这三种手段各有优缺点。从易学易懂的角度看，判定树最易学，易懂；结构化语言次之，判定表较难懂。判定表最易进行逻辑验证，因它考虑了全部可能的情况，逻辑清晰，能够澄清疑问。结构化语言次之，判定树较难验证。判定树的表达是直观的图形表示，一目了然，易于同用户讨论。结构化语言次之，判定表则不够直观。作为文档，结构化语言较好表达，判定表次之，判定树居后。从可修改的角度看，结构化语言较易修改，判定树次之，判定表较难修改。<br>
            　</span></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

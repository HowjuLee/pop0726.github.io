<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td><span class="section"><br>
            1 支持信息域分析的机制</span><span class="text"><br>
            　　所有的方法都直接或间接地涉及到数据流、数据内容或数据结构等信息域的属性。 <br>
            　　在多数情况下，数据流特征是用将输入转换成输出的变换（功能）过程来描述的，数据内容可以用数据词典机制明确表示，或者通过描述数据的层次结构隐含地表示。 
            </span> 
            <p><span class="section">2 功能表示的方法</span><span class="text"><br>
              　　功能一般用数据变换或加工来表示。每项功能可用规定的记号（圆圈或方框）标识。功能的说明可以用自然语言文本来表达，也可以用形式化的规格说明语言来表达，还可以用上述两种方式的混合方式──结构化语言来描述。<br>
              <br>
              </span><span class="section">3 接口的定义</span><span class="text"><br>
              　　接口的说明通常是数据表示和功能表示的直接产物。某个具体功能的流进和流出数据流应是其它相关功能的流出或流入数据流。因此，通过数据流分析可以确定功能间的接口。<br>
              <br>
              </span><span class="section">4 问题分解的机制以及对抽象的支持</span><span class="text"><br>
              　　问题分解和抽象主要依靠分析人员在不同抽象层次上表示数据域和功能域，以逐层细化的手段建立分层结构来实现。<br>
              　　例如，不论使用何种分析方法，分析人员都能表示诸如&quot;计算员工9月份工资&quot;之类的功能，可以在这个抽象层次上操纵这个功能。另外，所有的分析方法都提供一种逐层分解的机制，把&quot;计算员工9月份工资&quot;功能划分成一些子功能，如计算房租、计算用电费、计算用水费、计算工会费、计算有线电视费、计算养老保险费等等。其中，每项子功能还可以利用功能说明表示法在更低的一级抽象层次上表示。<br>
              　</span></p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

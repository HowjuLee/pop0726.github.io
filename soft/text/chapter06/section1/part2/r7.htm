<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            <span class="section">6、多态性和动态绑定</span><br>
            　　<br>
            ��对象互相通信，即一个对象发消息给另一个对象，执行某些操作或又发消息给另外的对象，从而执行系统的功能。发送消息的对象可能不知道另一个对象的类型是什么。如在C程序中使用命令ClearInt 
            ( ) 时要严格区分该命令适合一个整数，还是一个整数数组。但在C++情形，ClearInt ( ) 对两者都适用，它自己判断对象是哪一个。这就是多态性。它意味着一个操作在不同类中可以有不同的实现方式。如清零操作 
            ClearInt ( ) 针对消息对象是 int array 还是int，其实现是不同的。在一个面向对象的多态性语言中，可能代替一个特定类型的类型的集合就是它的子类集合。<br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

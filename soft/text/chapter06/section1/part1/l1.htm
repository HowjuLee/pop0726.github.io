<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              <span class="section">1、范型(Paradigm)</span><br>
              ��范型又称为范例、风范或模式(Pattern)。从软件开发角度来看，范型与问题解决技术有关。范型定义了特定的问题和应用的开发过程中将要遵循的步骤，确定用于表示问题和它的解决的那些成分的类型，并利用这些成分表示与问题解决有关的抽象，直接得到问题的结构。因此，范型的选择影响整个软件开发生存期。就是说，它支配了设计方法、编码语言、测试和检验技术的选择。<br>
              <br>
              <span class="section">2、流行的范型</span><br>
              ��目前流行多种范型，它们提供了许多方法，可进行系统分解。流行的范型有：过程性的，逻辑的，面向存取的，面向进程的，面向对象的，函数型的，说明性的。每个范型都有它的支持者和用户，每个范型都特别适合于某种类型的问题或子问题。 
              课文注释：例如，逻辑程序设计范型是基于规则的，它把有关问题的知识分解成一组具体规则，用语言的&quot;if_then&quot;等结构来表示这些规则。面向存取范型是一种在构造用户界面方面很有用的技术。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

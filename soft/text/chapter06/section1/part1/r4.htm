<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            ��<span class="part">图6.3</span>给出了一种draw程序的面向过程的程序结构，还给出了程序的基本算法。许多细节没有给出，但可以看到基本想法。在此例中，系统的各个任务顺序地排列，必要时也可以并发地安排。系统设计时，首先确定任务顺序，再定义支持过程基本操作的数据。<br>
            ��面向过程的范型是一种成熟的应用开发过程。对这种方法已有许多支持工具。然而，在大型系统的开发上存在一些问题。改进大型系统开发的技术主要集中在开发数据抽象。现在越来越多的考虑是使用抽象数据类型。随着大型系统的开发，接踵而来的问题就是要把过程抽象与数据抽象方法组合起来，这种需要导致了其它范型的开发。<br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

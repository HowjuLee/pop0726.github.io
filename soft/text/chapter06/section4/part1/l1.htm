<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              <img src="../../../../images/tubiao/ts.gif" width="25" height="16" alt="图示"> 
            </p>
          </td>
        </tr>
        <tr>
          <td class="text">
            <div align="center"><img src="../../../../images/images/chapter06/6_16.gif" width="450" height="221"><br>
              <span class="part">图6.16 客户－服务器系统的体系结构</span> </div>
          </td>
        </tr>
        <tr>
          <td class="text">��一个客户－服务器系统将功能分为不同的功能模块，控制它们分布在不同的硬件平台，通过服务功能模块实现对一个或多个数据的共享。对于一个复杂的系统，其功能模块的划分是比较复杂的，一个模块可能既是服务模块，又是客户模块，尤其在有多个数据库的系统中。 
            <br>
            ��这个模型导出的体系结构既可在面向过程的系统中使用，又可在面向对象的系统中使用。客户－服务器模型的想法是让系统的一个部分(服务器子系统)提供一组服务给系统的另一个部分(客户子系统)。请求服务的对象都归于客户子系统，而接受请求提供服务的部分就是服务器。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

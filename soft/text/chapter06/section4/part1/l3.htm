<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="18">
        <tr> 
          <td class="text"> 
            <p><br>
              <span class="part">(1) 最小化各部件间的通信</span><br>
              ��在子系统的各个高层部件之间的通信量应当达到最小。一个用户界面应当能够自行处理交互、错误改正和硬件控制，而不需打扰主应用。仅当通过界面输入一个请求的时候，才需要把它转送到应用的其余部分。<br>
              <br>
              <span class="part">(2) 隐藏复杂性</span><br>
              ��子系统应当把那些成组的类打包，形成高度的内聚。<br>
              <br>
              <span class="part">(3) 逻辑功能分组</span><br>
              ��虽然输入和输出设备可能相互间不通信，但逻辑上把它们归组到一个处理输入／输出的子系统中。这样比较容易识别并定位问题论域中的事件。<br>
              ��类与通过概念封装的子系统十分类似。事实上，每个子系统都可以被当做一个类来实现，这个类聚集它的构件，提供了一组操作。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

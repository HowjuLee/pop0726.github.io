<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              <span class="section">1、分析阶段</span><br>
              ��分析阶段包括两个步骤：论域分析和应用分析。它们都要标识问题论域中的抽象。在分析中，需要找到特定对象，基于对象的公共特性把它们组合成集合，标识出对这个问题的一个抽象。同时要标识抽象之间的关系，并建立对象之间的消息连接。<br>
              ��在分析过程中标识的对象不是孤立的项，在给定的问题环境中，多数对象都是与其他的对象相互有影响的。这些相互影响就构成应用系统的结构中对象之间的联系。这些联系在应用系统中常常用对象之间的消息来表示，叫做消息连接。消息是一个对象发出的让另一个对象做某个动作的请求。在一个面向对象的应用中的控制流由两部分构成：每个单独的操作内部的控制流加上对象之间的消息模式。<br>
              <span class="part">(1) 论域分析</span><br>
              ��论域分析开发问题论域的模型。论域分析应当在应用分析之前进行，我们在了解问题之前应当对问题敞开思想考虑，考察问题论域内的一个较宽的范围，分析覆盖的范围应比直接要解决的问题更多。<br>
              ��论域分析最大的价值是可复用类的开发，这些类表示了一个问题论域中的基本概念，它们形成的软件库还可支持许多应用的开发。<span class="part"><br>
              (2) 应用分析</span><br>
              ��应用(或系统)分析细化在论域分析阶段所开发出来的信息，并且把注意力集中于当前要解决的问题。因为通过论域分析，分析人员具有了较宽的论域知识，因而能开发出更好的抽象。 
              课文注释：传统的方法学人为地把系统分析与设计过程分离开来，这就把系统的设计和开发人员与对问题了解最清楚的专家隔离开来。而在面向对象方法中统分析与高层设计之间的差别正在逐渐变得模糊。<br>
              ��面向对象方法学的应用分析阶段是一个迭代的过程。分析阶段标识了在问题论域中的实体。如果在应用级标识的各个对象必须由系统设计人员各个单独地设计和实现，则使用面向对象范型的好处不很明显，这个范型的优势要依靠开发共享公共行为的对象集合来获得。这些类可以用来建立多个实例，它们是应用的支柱。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

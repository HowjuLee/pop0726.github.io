<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              <span class="section">5、组装测试</span><br>
              ��按照类与类之间的关系组装一个完整的应用系统的过程中进行的测试。各个类的封装和类测试的完备性可减少组装测试所需要的时间。<br>
              ��面向对象应用的界面通常可像单个对象的界面那样进行定义。充分隔离单个操作，以减少改变操作的次序所造成的综合影响。<br>
              　　<br>
              <span class="section">6、维护</span><br>
              ��维护的要求将影响应用和各个类。继承关系可支持对现有应用的扩充，或者加入新的行为，或者改变某些行为的工作方式。<br>
              <span class="part">(1) 应用系统的维护</span><br>
              ��包括在系统的操作中定位故障、在既存的系统中加入新的行为。应用的维护能够简化对类实例的定位、修改其类的实现、通过改变消息或接收消息的次序来改变应用中特殊对象的角色。新的行为可通过定义新的类和建立实例来实现。<br>
              <span class="part">(2) 类的维护</span><br>
              ��把类的实现与其规格说明分离可局部化修改的影响。一般情况下，修正问题要求应尽可能不改变类的界面。然而，为了在系统中增加新的行为，偶尔会有改变界面的需求。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

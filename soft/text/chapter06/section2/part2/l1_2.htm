<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> 
            <p><br>
              ��类生存期与应用生存期交叉。在应用生存期的每一个阶段都可做类的标识。类生存期有自己的步骤，与任一特定应用的开发无关。按照这些步骤，可以完整地描述一个基本实体。而不仅仅考虑当前正在开发的系统。系统开发的各个阶段都可能会标识新的类。随着各个新类的标识，类生存期引导开发工作逐个阶段循序渐进。<br>
              ��例如，在应用分析中已经标识了对一个图形显示器的要求。如果这样一个图形显示器类不存在，就应着手开发。但是，用到显示器所有可能操作的应用寥寥无几。若把这些操作的开发当做一个特定应用系统开发的一部分，那么只可能标识和实现该系统所要求的那些操作。但如果考虑让构件独立于应用，就必须能够综合出超出当前系统需求的开发要求，生成一种能表示成一个完全的概念的模型并可建立为以后其它系统复用的类。<br>
              ��</p>
            </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

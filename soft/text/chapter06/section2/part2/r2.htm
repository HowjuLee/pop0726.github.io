<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            ��在纯面向对象的系统开发中，一个应用程序就&quot;是&quot;一个类。基本的类，像list类，可不涉及应用，但基本类的实例要聚合到其它类的定义中。这些类依次又聚合到更复杂的类定义中，最终将会遇到一个类，它涉及整个应用。<br>
            下面概括了类生存期各个阶段主要做的事情。<br>
            <br>
            <span class="section">(1) 类的规格说明</span><br>
            <br>
            ��对每一个类都要开发它的规格说明，无论是在哪一个阶段标识的类都是如此。类的规格说明定义了施加于对象的数据存储上的一组操作。这组操作应工作在封装在对象内部的数据存储上，或返回关于对象状态的信息。操作的名字应能反映这个操作本身的含义。类的规格说明必须足够完整，使得它能够与在类资源库中的那些可复用的类的规格说明做比较。<br>
            <br>
            <span class="section">(2) 类的设计</span><br>
            <br>
            ��此时尽可能利用既存类提供为当前应用所需要的功能。<span class="part">图6.14</span>给出了利用既存类的三个途径：<br>
            <span class="part">��・原封不动地复用既存类。<br>
            ��・对既存类进行演化以得到满足要求的类。<br>
            ��・重新开始进行开发。</span><br>
            ������</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

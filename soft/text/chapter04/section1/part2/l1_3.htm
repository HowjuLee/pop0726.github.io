<html>
<head>
<title>l1_3</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="text">��<br>
            ��自顶向下，逐步求精方法的优点：<br>
            ���<span class="part">①</span> 自顶向下，逐步求精方法符合人们解决复杂问题的普遍规律。可提高软件开发的成功率和生产率；<br>
            ���<span class="part">②</span> 用先全局后局部，先整体后细节，先抽象后具体的逐步求精的过程开发出来的程序具有清晰的层次结构，因此程序容易阅读和理解；<br>
            ���<span class="part">③</span> 程序自顶向下，逐步细化，分解成一个树形结构（如<span class="part">图4.4</span>所示）。在同一层的结点上做的细化工作相互独立。在任何一步发生错误，一般只影响它下层的结点，同一层其它结点不受影响。在以后的测试中，也可以先独立地一个结点一个结点地做，最后再集成。<br>
            　　<br>
            <img src="../../../../images/tubiao/ts.gif" width="25" height="20" alt="图示"> 
          </td>
        </tr>
        <tr>
          <td class="text">
            <div align="center"><img src="../../../../images/images/chapter04/4_4.gif" width="266" height="159"><br>
              <span class="part">图4.4 程序的树形结构 </span></div>
          </td>
        </tr>
        <tr>
          <td class="text">���<span class="part">④</span> 程序清晰和模块化，使得在修改和重新设计一个软件时，可复用的代码量最大；<br>
            ���<span class="part">⑤</span> 每一步工作仅在上层结点的基础上做不多的设计扩展，便于检查；<br>
            ���<span class="part">⑥ </span>有利于设计的分工和组织工作。<br>
            　</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

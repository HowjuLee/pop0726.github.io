<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="276">
        <tr>
          <td class="explaination"> ��<br>
            �<span class="part">�16、</span>避免使用ELSE GOTO和ELSE RETURN结构。<br>
            �<span class="part">�17、</span>使与判定相联系的动作尽可能地紧跟着判定。<br>
            �<span class="part">�18、</span>避免采用过于复杂的条件测试。<br>
            �<span class="part">�19、</span>尽量减少使用&quot;否定&quot;条件的条件语句。不要让读者绕弯子想。<br>
            �<span class="part">�20、</span>避免过多的循环嵌套和条件嵌套；<br>
            �<span class="part">�21、</span>不要使GOTO语句相互交叉。<br>
            �<span class="part">�22、</span>避免循环的多个出口。<br>
            �<span class="part">�23、</span>使用数组，以避免重复的控制序列。<br>
            �<span class="part">�24、</span>尽可能用通俗易懂的伪码来描述程序的流程，然后再翻译成必须使用的语言。<br>
            ��<span class="part">25、</span>数据结构要有利于程序的简化。<br>
            <span class="part">��26、</span>要模块化，使模块功能尽可能单一化，模块间的耦合能够清晰可见。<br>
            ��<span class="part">27、</span>利用信息隐蔽，确保每一个模块的独立性。<br>
            �<span class="part">�28、</span>从数据出发去构造程序。<br>
            ��<span class="part">29、</span>不要修补不好的程序，要重新编写。也不要一味地追求代码的复用，要重新组织。<br>
            �<span class="part">�30、</span>对太大的程序，要分块编写、测试，然后再集成。<br>
            �<span class="part">�31、</span>对递归定义的数据结构尽量使用递归过程。<br>
            �<span class="part">�32、</span>注意计算机浮点数运算的特点。例如，浮点数运算 10.0*0.1 通常不等于1.0 
            。<br>
            ���</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

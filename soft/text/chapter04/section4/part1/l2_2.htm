<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="85">
        <tr> 
          <td class="text"> ��<br>
            ��<span class="part">(3) 尽可能应用代码生成的工具</span><br>
            ��有效的软件开发工具是缩短编码时间，改善源代码质量的关键因素。目前已推出许多实用的软件编程工具，支持用某种程序设计语言编写程序，并嵌入数据库的查询语言，带有各种可复用的软构件库，可支持从设计到源代码的翻译等各项工作，可以保证软件开发获得成功。 
            <br>
            ��这样的编程工具包括交互式调试器、交叉编译器、屏幕格式定义工具、宏处理程序、菜单系统生成器、以及图形开发环境等。 <br>
            <br>
            ��<span class="part">(4) 可维护性</span><br>
            ��源程序的可维护性对复杂的软件开发项目尤其重要。把设计变换成为源程序、针对修改后的设计相应地修改源程序，都需要首先读懂源程序。因此，源程序的可读性，语言自身的文档化特性（涉及标识符的允许长度、标号命名、数据类型的丰富程度、控制结构的规定等）是影响到可维护性的重要因素。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

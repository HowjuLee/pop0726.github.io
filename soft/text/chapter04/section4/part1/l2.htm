<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> ��<br>
            ��<span class="part">(1) 详细设计应能直接地容易地翻译成代码程序</span><br>
            ��从理论上来讲，应当直接根据详细设计的规格说明来生成源代码。把设计变为程序的难易程度，反映了程序设计语言与设计说明相接近的程度。所选择的程序设计语言是否具有结构化的构造，复杂的数据结构，专门的输入／输出能力，位运算和串处理的能力，直接影响到从详细设计变换到代码程序的难易程度，以及特定软件开发项目的可实现性。<br>
            <br>
            ��<span class="part">(2) 源程序应具有可移植性</span><br>
            ��源程序的可移植性通常是指从一个计算机环境移植到另一个计算机环境的容易程度。计算机环境是指不同的硬件机型、不同的操作系统版本、不同的可集成的功能性软件包。为了改善程序的可移植性，应当考虑以下三点：<span class="part">①</span> 
            在设计时模块与操作系统特性不应有紧密的联系；<span class="part">②</span> 应使用语言的标准版本、数据库的标准操作，尽可能不使用它们的扩展特性；<span class="part">③</span> 
            对程序中的各种可用信息均应参数化，以便于修改。<br>
            ��在开发软件时，应严格地遵守 ISO 或ANSI、GB的标准，而不要去理会特定编译器提供的非标准特性。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

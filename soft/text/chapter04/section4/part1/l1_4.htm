<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"> ��<br>
            <span class="part">(4) 局部性</span><br>
            ��指程序设计语言的联想（综合）特性。综合的特性使人们能够对事物从整体上进行记忆和识别。例如，我们能够见面之后立即认出一个人的面孔。而在识别之前，我们并没有有意识地去辨认面孔的各个部分。在编码过程中，由语句组合成模块，由模块组装为程序体系结构，并在组装过程中实现模块的高内聚和低耦合，可使程序的局部性加强。<br>
            <br>
            <span class="part">(5) 线性</span><br>
            ��指程序的联想（顺序）特性。人们总是习惯于按逻辑线性序列理解程序。如果程序中线性序列和逻辑运算较多，会提高可读性。如果存在大量的分支和循环，就会破坏顺序状态，增加理解上的困难。直接实现结构化程序可提高程序的线性特性。<br>
            <span class="part"><br>
            (6) 传统</span><br>
            ��人们学习一种新的程序设计语言的能力受到传统的影响。具有Pascal基础的程序人员在学习C语言时不会感到困难，因为C保持了Pascal所确立的传统语言特性，它们在结构上是类似的，形式上是兼容的，并保持了语言在感觉上的风格。但是要求同一个人去学习APL或者LISP这样一些具有另外风格的语言，传统就中断了，花在学习上的时间就会更长。 
            <p>��传统也影响设计一种新的程序设计语言的革新程度。尽管新的语言不断推出，但新的语言形式上却变化缓慢。例如，Pascal语言与ALGOL语言相似，但在Pascal 
              语言中有一个重大的革新，即实现了用户自定义的数据类型，这在与Pascal具有相同传统的其它语言，如BASIC、COBOL语言中是不存在的。<br>
              �</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

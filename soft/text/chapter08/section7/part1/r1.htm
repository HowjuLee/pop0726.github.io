<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="explaination" height="2"><br>
            ��由于封装和继承的特性，面向对象方法比其他软件开发方法更适合支持软件复用。封装意味着可以将表示构件的类看作黑盒子。使用它们时，只需了解其外部接口，即了解它能够响应哪些消息，相应的对象行为是什么。继承是指在定义新的子类时可利用库中已有的父类的属性和操作。当然，子类也可以修改父类的属性与操作，或者引进新的属性与操作。理论上构件的用户不需要了解构件的实现细节。<br>
            <br>
            <span class="zhishidian">8.7.1 类库的构造</span><br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

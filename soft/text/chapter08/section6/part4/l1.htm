<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            <span class="section">1、基于功能的合成技术</span><br>
            ��基于功能的合成技术采用子程序调用和参数传递的方式将构件结合起来。它要求在库中的构件必须以标准子程序(标准过程或函数)的形式出现，并且接口说明必须准确、清楚。当使用这种合成技术进行软件开发时，必须开发人员必须对目标软件系统进行自顶向下的功能分解，将系统分解为高内聚、低耦合的功能模块，然后根据各模块的功能需求提取构件，对它们进行适应性修改后，再纳入到上述功能分解的层次框架中。<br>
            　　<br>
            <span class="section">2、基于数据的合成技术</span><br>
            ��基于数据的合成技术首先根据当前应用问题的核心数据结构设计出一个框架，然后根据框架中各结点的需求提取构件并进行适应性修改，再把它们逐个分配给框架中的适当位置。此后，构件的合成方式仍然是传统的子程序调用与参数传递。这种合成技术也要求库中的构件以子程序的形式出现，但它所依赖的软件设计方法不再是功能分解，而是面向数据结构的设计方法，如Jackson系统开发方法。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

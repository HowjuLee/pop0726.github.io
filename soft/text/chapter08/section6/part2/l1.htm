<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��例如，对于以C或C++ 源程序形式出现的构件，用户可借助于CASE工具查询标识符(包括变量、常量、宏、函数等)的定义和引用。如果源程序中以结构化注解的形式给出函数的前置条件、后置断言、约束与例外情形、算法描述，用户也可以实现对这些信息的直观浏览。 
            <br>
            ��逆向工程是理解构件的另一种重要手段。通过对构件进行分析，结合论域知识，半自动地生成构件的设计信息，然后借助设计信息完成对构件的理解和修改。<br>
            ��对软件构件的可复用性进行评价，主要通过收集和分析构件的用户在实际复用构件的过程中所得到的各种反馈信息，按照某种论域模型来完成。这些反馈信息包括：复用成功的次数、对构件的修改工作量、构件的健壮性度量(如出错数量)、性能度量(如执行效率和资源消耗量)等。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

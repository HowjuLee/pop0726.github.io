<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��为了减少修改的工作量，要求构件的开发人员尽量使构件的功能、行为、接口抽象化、通用化、参数化。这样，构件的用户可以通过对实参的选择来调整构件的功能或行为。如果这种调整仍不能使构件适应新的软件项目，用户就必须借助设计信息和说明文档来理解、修改构件。因此，与构件有关的说明文档和抽象层次更高的设计信息对于构件的修改至关重要。例如，如果需要将用C语言编写的构件(源程序代码)改写为其他语言的形式，构件的算法描述就十分必要。<br>
            <br>
            ��有人在软件复用领域中尝试使构件的修改自动化。例如，可以利用不同数据结构(如链表和数组)之间的相似性自动修改构件外部接口中的参数类型。但是，这种自动修改方式还远远不能取代人工修改方式。 
            <br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            <span class="part">〖本章小结〗</span> 
            <p>　　本章介绍了软件工程的一个重要技术--软件复用技术。首先，我们介绍软件复用的概念，说明软件复用的重要性，同时，强调由于软件复用就需要改变软件开发过程，引入构件概念，将软件开发过程分解为论域工程和应用系统工程。<br>
              　　软件复用最初从代码级复用开始，但现在已不限于代码级复用，扩展到其他方面。要求必须了解复用活动及复用的10种类型。<br>
              　　论域工程是复用的关键步骤。要求了解论域工程的目的，论域工程的过程、论域分析的过程和分类可复用构件的方法。<br>
              　　对于可复用构件，要求从需求级、设计级、代码级掌握构造构件的原则，了解构件的质量要求和程序编制的主要原则。 <br>
              　　为实现软件复用，必须建立可复用构件库和良好的软件体系结构。要求了解构造可复用构件库的4种主要组织方法：枚举分类、关键词分类、多面分类、超文本组织法，以及相应的检索方法。对于描述可复用构件的3C模型，要求了解它的主要三个方面。此外，软件体系结构的作用也很关键。本章主要介绍的是4层的分层结构。要求能够说明每一层结构的主要特点和各层之间的关系。<br>
              　　软件构件的复用方面，本章从检索与提取构件、理解和评价构件、修改构件、构件组装（合成）等四个方面进行了介绍。要求能够说明理解构件有哪些方面的考虑；基于功能和基于数据的合成是怎么回事；在面向对象系统中利用类库进行类的合成时，构造法和子类法又是怎么回事。 
              <br>
              　　最后，本章罗列了在软件复用的主要几个方面：论域分析、构件开发、可复用构件库组织与检索、构件合成等阶段的关键子任务和支持工具。要求能够有一般的了解即可。<br>
              　　总之，软件复用技术对于软件开发和维护的效果是明显的，在经济上的回报是丰厚的，有越来越多的软件开发单位正在开展这方面的工作。因此，必须了解复用的思想、主要过程、实施方法、建造原则和质量要求，为更快、更好、更省地开发软件，建立和使用构件库，实现软件的复用。<br>
              　</p>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

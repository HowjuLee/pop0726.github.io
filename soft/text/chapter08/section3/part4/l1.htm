<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��<span class="part"> 1、</span>构件的开发者应当利用现有的硬件、软件，在尽可能多的环境中进行各种标准测试。但是，由于条件的限制及未来运行环境的不可穷举性，这种方法对于构件的质量保证并不充分，必须与其他方法配合使用。<br>
            <br>
            ��<span class="part">2、</span>在构件的设计过程中必须预先考虑构件对于各类可能的硬件环境的可移植性和对于不同软件环境的适应能力。根据设计制定相应的编程原则，并在编程的过程中贯彻始终。<br>
            <br>
            ��<span class="part">3、</span>应当尽可能将构件的与环境有关的因素抽象成为构件的参数，或者可将这些因素作为使用构件的约束条件在接口说明中详细阐述，甚至可以将这些约束条件标识成精确的逻辑断言插装到构件的源程序中。<br>
            <br>
            �<span class="part">�4、</span>对可能引发移植性错误和适应性错误的出错源进行分类，针对每一类出错源制定相应的防范和测试措施。 
            <br>
            ��移植性错误包括数值计算错误、多任务调度错误、内存使用错误等；适应性错误包括并发性错误、重名错误、表达式求值顺序错误等。针对每一类出错源制定相应的防范和测试措施与硬件、软件环境密切相关。<br>
            <br>
            �<span class="part">�5、</span>制订并执行统一的、良好的程序设计风格。这对于确保构件质量，提高可复用性、可理解性和易组装性有重要的意义。<br>
            <br>
            �<span class="part">�6、</span>成立构件质量保证小组。其主要任务是：制订构件合格的标准和构件质量保证计划，对构件开发过程进行监控，保证上述措施的落实。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><span class="section"><br>
            1、可复用性与易组装性</span><br>
            ��<span class="part">(1) </span>抽象化、参数化、模板化；<br>
            ��<span class="part">(2)</span> 显式建立构件的外部接口，保证接口在语法上和语义上的清晰性；<br>
            ��<span class="part">(3)</span> 除参数外，接口中的成分不应与运行环境相关；<br>
            ��<span class="part">(4)</span> 使用构件的信息应与构件的实现细节相分离；<br>
            ��<span class="part">(5)</span> 构件接口的使用方式、功能和行为模式应遵循论域分析所确立的公共标准。<br>
            <br>
            <span class="section">2、正确性</span><br>
            ��<span class="part">(1)</span> 使用显式的、标准的、完备的出错处理机制；<br>
            ��<span class="part">(2)</span> 使用强类型的程序设计；<br>
            ��<span class="part">(3)</span> 在构件上附加重要的测试数据和测试报告。<br>
            <br>
            <span class="section">3、可理解性</span><br>
            ��<span class="part">(1)</span> 提供完全的、精确的文档和程序注解；<br>
            ��<span class="part">(2)</span> 构件内部的结构、数据和控制流程必须标准化； <br>
            ��<span class="part">(3)</span> 使用统一的命名规则和语法约定。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��需求级软件构件通常包括问题（及子问题）描述、有关的论域知识、相应的需求规格说明。问题描述及论域知识均使用论域语言，必要时可辅以结构化的自然语言。<br>
            ��类似地，设计级软件构件包括设计规格说明（片段）、设计决策描述、相应的设计文档（如总体设计方案、抽象算法）。这时，若能将需求级的软件构件和设计级的软件构件相结合，使需求级软件构件和设计级软件构件的复用同时发生，就能够简化对这些软件构件的理解和组装过程。<br>
            ��需求级和设计级软件构件的开发必须遵循以下两条原则：<br>
            <span class="part">��1、将构件应用的上下文与构件严格分离；<br>
            ��2、利用抽象化、参数化等手段提取公共特征，增强构件对未来不同应用项目的适应能力。 </span><br>
            ��需求级、设计级与代码级软件构件相结合，有助于代码级软件构件的提取和理解。借助较高抽象级别的软件构件可望提高复用的效能，因为这样不仅能够复用代码，而且能够复用需求模型和设计方案。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

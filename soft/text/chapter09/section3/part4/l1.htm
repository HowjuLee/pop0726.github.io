<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            ��在第八章介绍了McCall和Cavano模型，其中定义了一组质量因素，这些因素从三个不同的方面来评估软件质量：<br>
            <br>
            <span class="part">��(1) 产品的运行（使用）；<br>
            <br>
            ��(2) 产品的修正（变更）；<br>
            <br>
            ��(3) 产品的转移（为使其在不同的环境中工作而做出修改，即移植）。</span><br>
            <br>
            ��在他们的模型中，介绍了这些质量因素之间的关系（叫做框架）和软件工程过程的其它方面。第一，框架为项目管理者提供了一种识别重要质量的机制。这些质量是软件除了它的功能正确性和性能之外的在软件生存期中牵涉到的其它一些属性。这些因素，如可维护性，可移植性等，近年来已显示出对软件成本的影响是十分深远的…… 
            第二，框架提供了一种手段，可定量地推断开发进程相对于已建立的软件质量目标是如何进展的…… 第三，框架在整个开发工作中为软件质量保证人员提供了较多的交互…… 
            最后，……质量保证人员可以根据对较差质量的认识，建立将来要求实施的（较好的）质量标准。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

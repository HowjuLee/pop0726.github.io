<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            接口的概念可解释为：<br>
            <br>
            <span class="part">��(1) 运行软件的硬件(如处理机与外设)及间接受软件控制的设备(如机器、显示器)；<br>
            <br>
            ��(2) 必须与新软件链接的现有的软件(如数据库存取例程、子程序包、操作系统)；<br>
            <br>
            ��(3) 通过终端或其它输入／输出设备使用该软件的人；<br>
            <br>
            ��(4) 该软件运行前后的一系列操作过程。<br>
            <br>
            </span>��对于每一种情况，都必须清楚地了解通过接口的信息转换。 <br>
            ��软件范围最不明确的方面就是可靠性的讨论。软件可靠性的度量已经存在，但它们在项目的这个阶段难得用上。因此，可以按照软件的一般性质规定一些具体的要求以保证它的可靠性。例如，用于空中交通指挥系统或者宇宙飞船（两者都是与人有关的系统）的软件就不能失效，否则就会危及人身安全。一个销售管理系统或字处理器软件也不应失效，但失效的影响不一定那么严重。虽然还不能象在软件范围的描述中那样精确地量化软件的可靠性，但可以利用该项目的性质去辅助工作量和成本的公式化估算以保证可靠性。 
            <br>
            　</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="8">
        <tr> 
          <td class="text"><br>
            <span class="part">(6) 集成和测试工具</span><br>
            ��测试工具为软件测试提供了各种不同类型和级别的支持。有些工具，像路径覆盖分析器为测试用例设计提供了直接支持，并在测试的早期使用。其它工具，像自动回归测试和测试数据生成工具，在组装和确认测试时使用，它们能帮助减少在测试过程中所需要的工作量。<br>
            <br>
            <span class="part">(7) 原型化和模拟工具</span><br>
            ��原型化和模拟工具是一个很大的工具集，它包括的范围从简单的窗口画图到实时嵌入系统时序分析与规模分析的模拟产品。原型化工具把注意力集中在建立窗口和为使用户能够了解一个信息系统或工程应用的输入／输出域而提出的报告。使用模拟工具可建立嵌入式的实时应用，例如，为一架飞机建立航空控制系统的模型。在系统建立之前，可以对用模拟工具建立起来的模型进行分析，对系统的运行时间性能进行评价。<br>
            <br>
            <span class="part">(8) 维护工具</span><br>
            ��维护工具可以帮助分解一个现存的程序并帮助软件技术人员理解这个程序。软件人员必须利用直觉、设计观念和人的智慧来完成逆向工程过程及再工程。<br>
            <br>
            <span class="part">(9) 框架工具</span><br>
            ��这些工具能够提供一个建立集成项目支撑环境（IPSE）的框架。在多数情况，框架工具实际提供了数据库管理和配置管理的能力与一些实用工具，能够把各种工具集成到IPSE中。<br>
            ��</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

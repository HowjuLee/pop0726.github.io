<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center" height="12">
        <tr>
          <td class="explaination">　　<br>
            <span class="zhishidian">3.3.1软件体系结构的概念 </span><br>
            <br>
            　　软件体系结构的三要素是程序构件（模块）的层次结构、构件之间交互的方式，以及数据的结构。软件设计的一个目标是建立软件的体系结构表示。将这个表示当作一个框架，从事更详细的设计活动。Shaw和Garlan提出了在软件体系结构设计中应保持的几个性质：<br>
            <span class="part"><br>
            </span><span class="section">1、结构</span><br>
            　　体系结构设计应当定义系统的构件，以及这些构件打包的方式和相互交互的方式。如将对象打包以封装数据和操纵数据的处理，并通过相关操作的调用来进行交互。<br>
            <br>
            <span class="section">2、附属的功能</span><br>
            　　体系结构设计应当描述设计出来的体系结构如何实现对功能、性能、可靠性、安全性、适应性，以及其它的系统需求。<br>
            <br>
            <span class="section">3、可复用 </span><br>
            　　体系结构设计应当描述为一种可复用的模式，以便在以后类似的系统族的设计中使用它们。此外，设计应能复用体系结构中的构造块。<br>
            <br>
            　　<span class="part">表3.1</span>列出可能的软件构件，<span class="part">表3.2</span>列出可能的构件间的连接方式。<br>
            　　　 </td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

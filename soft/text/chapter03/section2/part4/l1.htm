<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td class="text"> 
            <div align="left"> <br>
              <img src="../../../../images/tubiao/ts.gif" width="25" height="20" alt="图示"> 
            </div>
          </td>
        </tr>
        <tr> 
          <td class="text">
            <div align="center"><img src="../../../../images/images/chapter03/3_5.gif" width="441" height="230"><br>
              <span class="part">图3.5 程序的层次结构图示例</span><br>
              　</div>
          </td>
        </tr>
        <tr>
          <td><span class="section">1、程序结构的深度</span><span class="text"><br>
            　　程序结构的层次数称为结构的深度。结构的深度在一定意义上反映了程序结构的规模和复杂程度。<br>
            <br>
            </span><span class="section">2、程序结构的宽度</span><span class="text"><br>
            　　层次结构中同一层模块的最大模块个数称为结构的宽度。<br>
            <br>
            </span><span class="section">3、模块的扇入和扇出</span><span class="text"><br>
            　　扇出表示一个模块直接调用（或控制）的其它模块数目。扇入则定义为调用（或控制）一个给定模块的模块个数。多扇出意味着需要控制和协调许多下属模块。而多扇入的模块通常是公用模块。 
            <br>
            　　程序结构是软件的过程表示，但并未表明软件的某些过程性特征。比如，进程序列、事件�M决策的顺序或其它的软件动态特性。 <br>
            <span class="part"><br>
            </span></span><span class="section">4、结构划分</span><span class="text"><br>
            　　程序结构可以按水平方向或垂直方向进行划分。<br>
            　　</span><span class="part">水平划分</span><span class="text">按主要的程序功能来定义模块结构的各个分支。顶层模块是控制模块，用来协调程序各个功能之间的通信和运行。其下级模块的最简单的水平划分方法是建立三个分支：输入、处理（数据变换）和输出。 
            <br>
            　　这种划分的<span class="part">优点</span>是：由于主要的功能相互分离，易于修改、易于扩充，且没有副作用。<span class="part">缺点</span>是：需要通过模块接口传递更多的数据，使程序流的整体控制复杂化。 
            <br>
            <br>
            　　<span class="part">垂直划分</span>也叫做<span class="part">因子划分</span>。主要用在程序的体系结构中，且工作自顶向下逐层分布：顶层模块执行控制功能，少做实际处理工作，而低层模块是实际输入、计算和输出的具体执行者。 
            <br>
            　　这种划分的<span class="part">优点</span>是：对低层模块的修改不太可能引起副作用的传播，而恰恰对计算机程序的修改常常发生在低层的输入、计算或输出模块中。因此，程序的整体控制结构不太可能被修改，便于将来的维护。<br>
            　</span></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

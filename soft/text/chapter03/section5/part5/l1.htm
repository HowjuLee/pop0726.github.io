<html>
<head>
<title>l1</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="92%" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr>
          <td class="text" height="218">　　<br>
            　　<span class="part">1、</span>复审基本系统模型。<br>
            <br>
            　　<span class="part">2、</span>复审和细化软件的数据流图。<br>
            <br>
            　　<span class="part">3、</span>确定数据流图中含有变换流特征还是含有事务流特征。以上三步与变换映射中的相应工作相同。<br>
            <br>
            　　<span class="part">4、</span>识别事务中心和每一条操作路径上的流特征。事务中心通常位于几条操作路径的起始点上，可以从数据流图上直接找出来。输入路径必须与其它所有操作路径区分开来。<br>
            <br>
            　　<span class="part">5、</span>将数据流图映射到事务型系统结构图上。事务流应映射到包含一个输入分支和一个分类事务处理分支的程序结构上。输入分支结构的开发与变换流的方法类似。分类事务处理分支结构包含一个调度模块，它调度和控制下属的操作模块。<br>
            <br>
            　　<span class="part">6、</span>&quot;因子&quot;分解和细化该事务结构和每一条操作路径的结构。每一条操作路径的数据流图由它自己的信息流特征，可以是变换流也可以是事务流。与每一条操作路径相关的子结构可以依照前面介绍的设计步骤进行开发。<br>
            <br>
            　　<span class="part">7、</span>利用一些启发式原则来改进系统的初始结构图。<br>
            　　</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>

<html>
<head>
<title>r</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" background="../../../../images/html/right_r6_c11.gif">
<table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
  <tr>
    <td valign="top">
      <table width="90%" border="0" cellspacing="0" cellpadding="0" align="center" height="12">
        <tr>
          <td class="explaination">��<br>
            <span class="section">3、利用HIPO进行迭代式细化设计</span><br>
            <br>
            ��在软件设计时，解决设计问题通常需要经历一个认识逐步发展的过程，并且对一些问题还要经过反复的考虑才可能达到比较满意的设计效果。我们称此为迭代式细化设计。HIPO能很好地适应这一要求。图4.37是利用HIPO进行迭代式细化设计的示意图。从图中可看到，把可视目录表和IPO图结合起来，反复交替地使用它们，可使得设计工作逐步深化，最终取得完满的设计结果。其实这正是自顶向下，逐步求精的结构化程序设计思想。<br>
            <br>
            ��HIPO有自己的特点。首先，这一图形表达方法容易看懂。其次，HIPO的适用范围很广，绝不限于详细设计。事实上，画可视目录表就是与概要设计密切相关的工作。如果利用它仅仅表达软件要达到的功能，则是需求分析中描述需求的很好的工具。因为HIPO是在开发过程中的表达工具，所以它又是开发文档的编制工具。开发完成后，HIPO图就是很好的文档，而不必在设计完成以后，专门补写文档。<br>
            ��</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

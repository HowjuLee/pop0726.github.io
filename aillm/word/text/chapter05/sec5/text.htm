<html>
<head>
<title>人工智能原理</title>
<meta http-equiv="Content-Type" content="text/html; charset="utf-8"">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="97%" border="0" cellspacing="0" cellpadding="0" align="right">
  <tr>
    <td><span class="text"> 
      <table width="100%" border="0" cellspacing="3" cellpadding="2">
        <tr> 
          <td> 
            <table width="40%" border="0" cellspacing="0" cellpadding="0" height="18" align="right">
              <tr> 
                <td class="pt10" background="../../../images/pic/bg0401.gif"> 
                  <div align="center" class="chap">第五章　机器学习</div>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
      <br>
      　　</span><span class="section">5.5 机器学习的分类</span><span class="text"><br>
      <br>
      　　对机器学习的分类可以由下列几方面进行：学习策略、知识表示和应用领域。学习策略是学习中使用的推理方法。下面将按学习策略分类，以便系统介绍不同的方法。<br>
      　　学习系统总是把环境提供的信息变换成新的形式，以便存贮和使用。这种变换的性质确定了学习策略的类型。几种基本策略是：记忆学习、传授学习、演绎学习、类比学习和归纳学习。归纳学习又分为实例学习、观察与发现学习。这些策略是按变换复杂性递增的次序排列的。变换越复杂，学习者的工作越多，施教者的工作越少。人类的学习往往同时使用多种策略。这里划分不同的策略，不仅是为了介绍不同的方法，而且是便于设计学习系统。虽然现有的学习系统还只使用单一的策略，多种策略系统也将受到重视。<br>
      <br>
      　　</span><span class="part">5.5.1 记忆学习</span><span class="text"><br>
      　　在记忆学习中基本没有变换。由施教者提供的信息或多或少被学习系统记忆和使用。这时环境提供的信息与执行环节使用的信息有相同的水平，同样的形式。实际上每台计算机都可以看作是记忆学习，因为它们都存贮用户送入的程序。一个例子是Samuel的西洋象棋程序（1956，1967），它记忆每个棋局以便提高下棋水平。<br>
      <br>
      　　</span><span class="part">5.5.2 传授学习（指点学习）</span><span class="text"><br>
      　　在传授学习中，学习环节进行的变换只是对施教者提供的信息进行选择和改造，这主要是在语法层的变换。这时环境提供的信息过于抽象，它的水平高于执行环节所用信息的水平。学习环节把较高水平的知识变换为较低水平的知识。这种变换称为实用化。实用化主要有下列步骤：由传授的信息推出结论，作出假设以补充一些细节和确定何时需要进一步传授。实用化过程类似于编译系统把高级语言程序变换成机器码程序。第一个例子是McCarthy(1958)的系统。最近的系统有TEIRESLAS（Davis, 
      1976）和FOO（Mostow, 1979和1981）。<br>
      <br>
      　　</span><span class="part">5.3.3 演绎学习</span><span class="text"><br>
      　　在演绎学习中，学习系统由给定的知识进行演绎的保真推理，并存储有用的结论。这种策略近几年才作为一种独立的学习策略。（Michalski, 1983）演绎学习包括知识改造、知识编译、产生宏操作、保持等价的操作和它保真变换。<br>
      <br>
      　　</span><span class="part">5.5.4 归纳学习</span><span class="text"><br>
      　　在归纳学习中，变换过程是对输入信息的一般化和选择最合理的预期结果，这就是归纳推理。归纳学习可以分为以下实例学习、观察与发现学习。<br>
      　　1． 实例学习<br>
      　　实例学习又称为概念获取，它的任务是确定概念的一般描述，这个描述应解释所有给定的正例并排除所有给定的反例。这些正反例是由信息源提供的，信息源可能是已经知道概念的施教者，也可能是学生做实验而系统从中得到反馈的环境。后者可称为实验学习，包括由做学习和由问题求解学习。刺激反应式学习也是一种实例学习。<br>
      　　当前对实例学习的研究集中在两个方面：例子一类型的一般化，部分一整体的一般化。在例子一类型的一般化中，提供给系统某一类对象的独立的实例，系统的目标是归纳出这些类的一般描述。实例学习的多数研究集中在这一方面。对象可能是结构化的部件、几何形状、疾病描述、故事、问题的解、控制算子等。在部分一整体的一般化中，任务是假设整个对象（情景，情况，过程）的描述，但只给定了对象的局部。例如，只给定一个房间的几张局部的照片，要重构房间的整个视图。又如，只看到一个序列或过程的一部分，要确定描述该序列或过程的规则。<br>
      　　2. 观察与发现学习<br>
      　　观察与发现学习又称为描述的一般化。这类学习没有示教者的学习帮助，它要产生解释所有或大多数观察的规律和规则。这类学习包括概念聚类、构造分类、使方程符合数据、发现解释观察的定律和形成理论；遗传学算法（Holland, 
      1986）和经验预测算法（Zagoruiko, 1976）可以看作这种策略的变种。<br>
      　　实例学习是由正反例学习，这些正反例是由施教者分类的。因此实例学习是有示教的学习。观察与发现学习是由未经分类的观察学习，或由系统自身的功能去发现。这是无示教的学习。<br>
      <br>
      　　</span><span class="part">5.5.5 类比学习</span><span class="text"><br>
      　　类比学习是演绎学习与归纳学习的组合。它匹配不同论域的描述，确定公共的子结构，以此作为类比映射的基础。寻找公共子结构是归纳推理，而实现类比映射是演绎推理。由提醒学习可以看作一种类比学习（Schank, 
      1982）。类比学习是由系统已有的某一领域知识得到另一领域中类似的知识。<br>
      　　以上介绍了各种学习策略。当前研究的焦点是归纳和类比学习。下面再说明有关归纳学习的一些问题。归纳推理是从一些事实或观察出发，有时还有对这些事实的初始假设，它由此产生解释这些事实的一般化结果。归纳是使用一般化推理规则的保假推理。不用任何解释性概念直接由事实推出理论的纯归纳是不可能的。这些解释性概念应该用于描述观察，并作为学习系统背景知识的一部分。任何归纳过程都需要背景知识。背景知识包括学习目标、论域专用约束、因果关系、指导归纳过程的启发式和倾向性、评价竞争假设的准则等。 
      <br>
      　　有两种指导和约束归纳过程的方法：基于相似的方法和基于约束的方法。基于相似的方法分析内部的实例关系。也就是说它举出概念的正例和反例，以产生概念的描述。它搜索在同一类中的事实或实例所共有的特征，并寻求一般的原因和解释，以说明为什么不同实例属于同一类。它是就实例间的差别进行一般化，这是通过忽略不同的特征，或通过形成包含这种差别的概念。基于约束的方法也分析内部实例关系，但这些关系约束了适于多个事实或实例的解释性概念。对这些事实或实例的一般化必须满足这些约束。例如，�&quot;盒子在桌子上&quot;的事实进行一般化时，应满足的约束是桌子上的东西不能太重以至压环桌子，也不能太大以至无法放在桌子上。Andreae(1984)的假设验证概念是这种方法的变种。基于解释的归纳是另一种变种，它更强调解释性知识的作用（Mitchell等，1986）。它用系统的背景知识来形成给定事实的高层次概念解释。基于相似的方法和基于约束的方法是互补的，它们可以同时用于学习系统中。<br>
      　　本书第六章将介绍实例学习。第七章介绍其它学习策略。<br>
      </span></td>
  </tr>
</table>
</body>
</html>
